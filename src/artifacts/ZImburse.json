{"transpiled":true,"noir_version":"0.34.0+02fea6abe8637b9fb8f9535d1709b367d5e1da5c","name":"ZImburse","functions":[{"name":"compute_note_hash_and_optionally_a_nullifier","is_unconstrained":true,"custom_attributes":[],"abi":{"error_types":{"12265343917440897559":{"error_kind":"fmtstring","item_types":[],"length":20}},"parameters":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"note_type_id","type":{"kind":"field"},"visibility":"private"},{"name":"compute_nullifier","type":{"kind":"boolean"},"visibility":"private"},{"name":"serialized_note","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"}},"bytecode":"","debug_symbols":"","brillig_names":["compute_note_hash_and_optionally_a_nullifier"]},{"name":"get_title","is_unconstrained":true,"custom_attributes":["public","view"],"abi":{"error_types":{},"parameters":[],"return_type":{"abi_type":{"kind":"array","length":60,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"}},"bytecode":"JAAEAQIlAAQIfwAAJAAEAAMkAAQABB8AAAAABAAAAAMAAAhDIgAAAA4AAAQDAgQlAAQIQwAFJAAEPAYrAAAECAMrAAAFCAQrAAAGCAUiAAAAzToAAAAIQwAAADweAAAABB4AAAAFMQAAAAAEAAAABQAAAAYkAAIBBQoAAgYFBCEAABUABDsBAAAeAAsABiQABwEFCgAHBgUEIQAAGgAEOwEAACoAAAYkAAQFBAAABAAEACQBBAEGAAAEBgIEKgAEByQABwAIKgIIBwAABAcCByoCCAcAAAQHAgcqAggHAAAEBwIHKgIIByoBBgQAAAQEAgQqAgQGKgAABAAABAACACoCBgQkAAQACCoACAMgADEkAAQEBwwABAMHBiQABAEHIQAAtwAGIAA2KgEEBSQABAIEAAAEBQIJAAAECQQKKgEKAyQABAMJAAAEBQILAAAECwkMKgEMCioAAAkkAAQDBQAABAAFACQBBAEJAAAECQIFKgAFCyoCAwsAAAQLAgsqAgoLKgEJBQAABAUCBSoCBQkqAQkFAAAEBQIFKgIFCSQAAgAFKgAACyQABD0MAAAEAAwAJAEEAQsAAAQLAgwkAAQ8DQAABA0MDSoADA4MAAQODQ8WAA8PIQAAXQAPKgIFDgAABA4CDiAAVyoBCwwAAAQMAgwqAgwLKgAADAAABAACACoCCwwqAAALAAAEAAIAKgIICyoACAYgAGgMAAQGBAUhAABuAAUgAGsqAQwLKgALAyMkAAQCDgwABAYODyEAAHIADzsBAAAAAAQJAg8AAAQPBg4qAQ4NJQAEAQAADyoAAA4kAAQgEAAABAAQACQBBAEOAAAEDgIQJQAEAQAAEUYCAAAADQAAABAAAAARAAAAHwAkAAQfEisAABAIAysAABIIBCIAAADYKgEODQAABA0CDSoCDQ4qAAgFIACGJAAEHw0MAAQFDQ8hAACQAA8gAIoAAAQGBwUOAAQGBQ0hAACOAA07AQAAKgAFBiAAaCoBCw0kAAQ8DwwABA0PECEAAJUAECAAsSoBDA0qAQsPJAAEHxEMAAQFERIhAACbABI7AQAAAAAEDgISAAAEEgURKgERECQABDwRDAAEDxETIQAAogATOwEAACsAAA0IAyUABAA9CAQiAAAA6ysACAUAEgAABBICEwAABBMPESoCEBEqAhIMKgELEgAABBIHDw4ABBIPDSEAAK8ADTsBAAAqAg8LIACxAAAEBQcNDgAEBQ0PIQAAtQAPOwEAACoADQUgAIYqAQQGHAAHAwkAAAcFCQotAAAAAAoAAAAJJAAEBAsMAAQDCwwhAAC/AAw7AQAAKwAABggDJQAEAAUIBCIAAADrKwAIBQAKAAAECgIMAAAEDAMLKgIJCwAABAMHBg4ABAMGCSEAAMoACTsBAAAqAgoEKgAGAyAAMSUABAAACAcNAAQIBwgFCAgXAAgICAghAADXCAgBAAQIAwgHCAkrAQgJCAYBAAQIBAgHCAkrAggGCAkBAAQIBwACCAcgAM4jJQAEAAIIBgcABAgECAYIBSsACAQICCUABAAACAkNAAQICQgFCAoXAAgKCAohAADqCAoDAAQICAACCAgBAAQIAwgJCAsrAQgLCAYBAAQIAwgICAsrAQgLCAcBAAQIAwgJCAsrAggHCAsBAAQIAwgICAsrAggGCAsBAAQICQACCAkgANwjKwEIAwgGCwAECAYAAggHIQAA7wgHIADxKwAIAwgFIAD/KwAAAAgFAQAEAAAIBAAAJQAEAAAICQ0ABAgJCAQIChcACAoICiEAAP0ICgEABAgDCAkICysBCAsICAEABAgFCAkICysCCAgICwEABAgJAAIICSAA9CUBBAABCAUgAP8jKwAYyhjK","debug_symbols":"5d3dTttAEAXgd/E1Fzs/u7PDq1RVFVqoIkWhAlqpQrx7nTR2Qh3ZLRRzRr5BCUzsbx17jmOSzWPz5frq+9dP6+3N7X1z+eGx2dx+Xj2sb7ftvceni+bqbr3ZrL9+Ov11k3Y/SPf1999W293d+4fV3UNzScZ60Vxvv+xuirZLuFlvrptLs6eLQbGLHWo9W19KRc7UavJ6KFZKJ9UpnakuJZVDdSnMz6o/XjSUX22nRH1xOimeQ19ev+VNui3vU1ueWPsFy847ajcnP1Sbl6Hd/qO93fDP8bsV1Ldegb/xCji99Qro1SvIkrriLDy5T2RP3T5RSP7cJ5j/0bN7jLzgMfqCx+QXPObs8anZuydFC8tEdymV+xWc9ovzz0ap3fbNlmji2ciq3bLbm8Nnw0Lra2i9R9ZLCq2n0HoOrZfQeg2tz6H1obNWQmethM5aCZ21GjprNXTWauis1dBZq6GzVkNnraJ3zOK93tKf+ozeMcf16Pt9zb3eaaCff78vvceoTOg9dYt2OtqN9/QSl25x6TUu3bHp1F/5P/nPwm96SXHpFJfOcekSl65x6eBpOkYHT9MxOniajtHB03SMHjdNLW6aWtw0tbhpanHT1OKmqcVNU4ubphY3TW06TZWm6IU6enud5XQFZ4oTd1di2pvHJYvur62YQ3FqwuIQFoexOILFUSxOxuIULI5hcbC6csXqyo7VlR2rKztWV3asruxYXdmxurJjdWXH6sqO1ZV99q6cj2/ELwNO+9oDzENgntlbTz16qg49cx9d3P8Tnth54KG59x/ivphkuH2IwDwM5hEwj4J5MpingHnsHT1annmG1eLavYVJvOS+msuZYpX+epxKldPi/UjrYkbqSxkpp8WMlBYzUl7MSGUxI9XFjDQvZqRlMSNdzDkSL+YciYHOkXYeATqT2XuAzjf2ntkTxPr5GMjOeDKYp2JdRxLH8mgC8xCYB+z40tmPr346pfZVpQ89BczjWJ6cwDyzH1/5eHzlOvQwmEfAPArmyWCeAuYxMM/s5z/Sv1WU1YYex/KUBOYhMA+DeQTMo2CeDOYpYB4D84D15wLWnw2sPxvY61NjMI+AeRTMk8E8YO+zMrDrdQZ2va6CXa+r6HNcjc71Q3/xOZh35Wfup4nKMpziu4LPcpWTjfLRp5R0PfJloto5HT/JKGU4WPQZKEfnlaKKPgXlBB99RrVxvqNPqTbBR5+FcoKPPg3lBB89oyf44Bk9xUefiXKCj57RE/zYqeuxU9dDpy6n0KnLKXTqcgqcuk/t3R+ru/XqanN9+H6vm+/bzydf9/Xw89vvv7TFvwA=","brillig_names":["get_title"],"assert_messages":{"141":"attempt to add with overflow","154":"Array index out of bounds","20":"Not initialized","113":"Array index out of bounds","174":"attempt to add with overflow","161":"Array index out of bounds","180":"attempt to add with overflow","190":"Array index out of bounds","25":"Function get_title can only be called statically","201":"attempt to add with overflow"}},{"name":"give_entitlement","is_unconstrained":false,"custom_attributes":["private"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"to","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}}},{"name":"public_teardown_call_request","type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":"","brillig_names":["get_public_keys_and_partial_address","unsafe_rand","decompose_hint","notify_created_note","get_key_validation_request","lt_32_hint","lte_16_hint","build_msg_block_iter","pad_msg_block","attach_len_to_msg_block","build_msg_block_iter","emit_encrypted_note_log","directive_invert","directive_integer_quotient"]},{"name":"constructor","is_unconstrained":true,"custom_attributes":["public","initializer"],"abi":{"error_types":{},"parameters":[{"name":"usdc_token","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"title","type":{"kind":"string","length":60},"visibility":"private"}],"return_type":null},"bytecode":"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","debug_symbols":"7Z3dbhw3EoXfRde+4E/xL6+yWARO4gQCDDuInQUWgd99RzNqdks9JDWrmmaRVTeBHNMz53yaYZ1id5P/PPz26Ze///j58cvvX789/PSvfx4+f/314/fHr19Of/rnx4eHX/56/Pz58Y+ft//7QT39J+nz+G9/fvzy9Mdv3z/+9f3hJx0MfHj49OW3px8tnF7h98fPnx5+CuHHh/1gp/Uy2FmdB2tvr4wGleLzaNAqrKOVujLae+WfR3tvzIvR//7wkAyCepcHuxgb6jWYsIyGoNbRNl0ZHc1iNfr0YuyTdjuwdhhYuxtYux9YexhYezxcu3ardv0u7Wlc7adpfmTxemTxZmTxdmTxQEj8WZCjJshTExSoCaJUsM6CKFWhJ0GaUmU5Czq+WsSUR6tWPjJxafKsWsW7eNFuBtZuB9YOtLXD8ok3fu307anrP4t3I4v3I4sPI4uPI4tPA4s3amTxxMtrWNYqTLJ78cTra1088QJbF0+8wtbFE6+wdfHEK2xd/OEVdnsRxuy7CxOJCbKH/3pdXAWl1Pj1nj4B62hYLzxZ7S/yw9jy49jyE2n50SwTSQR4MTdcGauXeSS6/TwCiotRzcWo4WLUcjEKXIw6LkZpZxNEo7RTDKJR2nkH0SiXZOS4JCPHJRk5LsnIcUlGDrgY5ZKMHJdk5LgkI8clGTkuychzSUaeSzLyXJKRn6eOumCfx7oAe6Pz1NGG0XlmXZcvD7oUd0bDPLOuh+U76v3+OxrmmXUbRueZdRtG5+lHG0aBi9F56mjD6Dx1tGF0nn60YXSefrRhlHgyKgb1K69sglpe2cTN6OfbNSLxbIRplXg6wrRKPB/dYtVas7yyBbe3SjwhYVoFPlaJp6RbrIJan3U3am+VeE7CtEo8KWFaJZ6VbrLqfLa6eSg6W50oLTWsponSUsvqRGnJ5Yf6T9e99d7qRGmpZXWitFS3atQ8i6HVdXyj5lkMbRidZzG0YRTmWWjJjxp54/dGJ1oMrRudaDG0bnSixdC60YkWQ9VqNOyNznOZuG5UT3SZuG50osvEdaMTXSauG53oMnHdKHAxOtHtVrWbc4ye6HarutF5klHD6DzJqGGUyQ10xsyTjBpGJ1ozqhudaM2obnSiNaO6UeBilEsyMlySkeGSjAyXZGS4JCPLJRlh73aUXMNo8MsVkhDW1dfL5roGe0uid6pBCFPe5V+r32yRWTiox/rl7imwcbOB2/WDemL+zfqk3YvRZ/kIEcmHVX4yLflOZ/nOxob8m4TElJZfVFKbwdkrMPLqGHn1jLwGRl4jI6+Jj1eMLYL6eD2r10OrN0OrnyitWDD5BAl4Ef3h2ksrne8a0up0zW8N6cZd2ICwKbKZKA2hs5koPaGzmShtobOZKJ2hs5kozWGz8cOmvwPYDJstD2AzbHI9gI3k4jIbEDZFNpKLy2wkF5fZSC4us5FcXGYjubjIJkguLrORXFxmI7m4zEZycZkNCJsiG8nFZTaSi8tsJBeX2TDOxUanlY01L9hcGR9t3twiuu3mFuZCknGKxiUZGWduZJKME/qNJCEu56GfftzsLQAXkIzjPC5IxtkfFyQIyDeC9CpPkt66HUjGXQUuSMYtCC5Ixv0KLkhpbpBASm+DAzJJa4MEUjobJJDS2SCBlM4GCSQISByQ0tkggZTOBgmkdDZIIKWzQQIpnQ0KSKuks0ECKZ0NEkjpbN4M0uWTc3wIO5DS2SCBBAGJA1I6GySQEsiRQEogRwIpgRwHpJZAjgRSAjkSSAnkSCA5x5/tDc3RvQB5ZsO4EFu7srEQWh+y6vgzS8a1+EaWAfJSRPCvb9azhnEtxgXJuBbjggQB+UaQ0WebMaotyP3gmGVHE3fMGTfbd2T+lAnya4PaUZdAcBfqJ9bLYL09GfiZukSHDtSt5Iwe1CWU9KDOeDWhI3XG1wI7Ugeh3oE642W2jtQZ32zZkbr0pj2oS2/ag7r0ph2og/SmPahLb9qDuvSm76d+BintJhJIEJA4IKUpRAIpfR4SSGnd3goypeVKoVF6D1K6MSSQ0mDhgBz3TEZqIKUNQgIpnQ0SSIzOxtgVZOu8dOOzfONda3T0+UamuLa3BvRFPBwt3uXDa03QsTG6ue2xRTl6sqsBP7qBMLqBOLqBNLgBlDMLuxrQoxswoxuwoxsYvRL70SuxH70S+9ErsR+9EvvRK3EYvRKH0StxGL0Sh9ErMcrJXV0NjF6Jw+iVOIxeicPolThQr8So5wPZSL1uI9ulXuWR7VLPBJgH4thIPUDgugVWbqlHE9SNKyP1HIPrlnrowXVLPSHhup0sTtXdpsnSVMPtZGGq4XayLNVwO1mWargFVm5ZZanEKkslVlkqscpSiVOWAsUpS4HilKVAccpSoGbLUrWtaUEBK7ezZam629myVN3tbOmi7na2dFF1q2dLF3W3s6WLutvZ0kXdLat0oclXoPru9KCpT7PIW8iDoT7TYu6qDYb6TIvrlvpMi+uWetbvtK05GOpBudve42Amm+7xtkgCO1lhwEQzWRXBRDNZycFEQ70T6IgGBE0JDeNU00JDvdnsiIb6deaOaDin4QYaScMlNCBpuIhG0nARjaThIho2afjsFli5ZZNZz27ZxNCzWzbJ8ux2srBY3fIOYLL8V3frJot0DbeTpbSG28mCV8PtZFmq4Rbe7zasd4SGTTZ90n9+C3f/t/D3fwuEUh11fuw3bi6fFX7RLuZi6tLmAq0OF0EI1TT69ZH6zXPI1wWBydX99GNaR1/dm9aHfG+LD8G8GH2Wj1AeI4RVfuuLA/lrAz7uaGLsrhg1rHLS7hOEsf9h6y3M/d/i+vTodP5VuM1d4VffAveDVNgT0Kn12+NCw/Pp+uwyGDb3Qjy9226wy3O7M7CZTp/VOFJqPCk1gZSaSEpNoqSmsMNdLzWalBpDSo0lpYbUXBxIzcWB1FwcSM3FgdRcHI6ei2G5adwFtVMTFSk1mpSag+din1/Yq7RXY0mpAVJqDp5vvF3OUfHW7tSkgz/Fm/NFwhU1hpQaS0oNkFJz10Rxfgd/93cId3+HW6v5+R+l2/+RU+r/+UeFL78P15bbrgMw66FOZjNYXx3tfFRrEdON9Q4HsExdpx/tj1frHa6wn8Aw8u3Y8mFs+W5s+X5s+WFs+XFs+Wlo+YWn+IeRP3bV1WNXXT121dXU532fVylgs0yxyDfUv7p5O+rTcoveyz/+q+uzoKB9Q75O6w0RCTZ7Lmh7kW/Glm/Hlg/vl29tviRtIb2Qf34Ld/+38Pd/C4R4sp4erF+cHnx1tFcm5hU7p1qTRLSLkNOPcTdJWIRvmQvrdijKNuXnj6lXsSnfrZ9peLVg4awdWDsMrN3R1h78on1zE9+i3Q+sPYyrHdTh2jGnSYQnddbVze3Fy8JNbyot4kGr0BDvT7+nxao3Zi8e3i8+pwXXPJUdlFo+NaBsi3xU+Xz7qNy+hwBP/IMTcwsU0xX2gbh8H6ryI3H5CfKco658eNLQ8h31SbMhX48t34wt344tH8aW78aWT73qNuRTr7oN+WNXXTd21fVjV10/dtX1Y1ddP3bV9WNXXT921fVjV10/dtX11Kuus6t8aIxONl9TSPbKsoqnXqPLZp/kB+o1uiGfeo1uyKdeoxvyMarEPS/Z1ZcUgycuv76kGAJx+fUqEeLY8qlfrq7Lj2ps+Xps+WZs+XZs+TC2fOpVtyGfetVtyB+76saxq24cu+qmsatuGrvqJupVF3NdIlGv0fXWMlGv0Q351Gt0Qz71Gt2QT/1Jp+rjEl4Rf1zCmbys4qzZyyf+pJNToSqf+pNOa5Fz1raqhFHLNyUZ6/dmqT8XVX0yxysYWz71p5Eb8qk/ldaQT/1p5IZ86k8jN+RTr9F1+eSfRm7Ip/40ckM+9RrdkD921dVjV109dtUl/yx4Q/7YVVePXXXNwRu/+bydmA+rmuftxLwxpNRYUmqAlBpHSo0npSaQUhNJqUmU1FhFSg2pudiSmostqbnYkpqLLam52JKaiy2pudiSmostqbkYSM3FQGouhoPnm6CWCzpBwV6NI6Xm4O9UzHswRB32ahIlNe7g71TMG5WkV7+pKy8c1uPF1s2fTAwX5XpY5WZY5ZaucpPnALO5kScrh2GVu2GVR8LK8843ZrNrz6LcE55bbFjuBLHpinJKByN4T+lgBH/0sXcNNY6UGk9KTSClJpJSkyipOfrYu4YaSofU+EBqLg6k5uJAai4OpObiQGouDqTm4ki4Xz1dmV2S2eaq65LMIuFM2VBOuF9tKKfcr9aVwxjK3V455X61rtwPqzwMq5zyGkFdeSK8RmCXVTy7eTJmUZ4I19CGcsrrMnXlhGtoQznhGtpQTriGNpQTrqEN5YRr6Fb5/tpGIlxDG8oJ11Cb9/a3/opyyjXUuLLyoCjX0LpyyjW0rpxyDa1dlQmKcg2tK6dcQ+vKKdfQunLKNbSunHINrSunXEOryvXB83n1XqugD56jg1k4Bhv2aiwpNZ6UmkBKzcHfvxCWsSHavZpESY1RpNRoUmoMKTWWlBogpeboe4J9VuP3883Rz4M11ARSaiIpNYmSmqOfB2uo0aTUGFJqLCk1QEoNqbnYkpqLLam52FJ6diVYSs+uhKOfB2uo0aTUGFJqgJQaR0qNJ6UmUFJTeDrtltOTtTfLdobap9b5ycalZbQ5rUk0Rmtl89nMp59hY8C4a+Ojzxjj5kzvJw97MtlkNHE79AxG8wWTYsovrfZkQMgUyDghUyDj+ZLRyuR9qBSoHZogaEpooqApoUmCpoDGM440LTSMQ00LjRE0JTRW0JTQAGc0kF0qF3ZoGIfhFhrWabiOhnUarqNhnYbraFin4SqawDoN19FIGi6ikTRcinxB0nARDQiaEhrWabiORtaGi2hkbbiIRtaGi2hkbbiEJsracBGNpOEiGknDRTSShotoJPIV0UjkK6KRyFdEI5GvhCaRL95arWh0eoHmbIB8iW0ZIF8IWwZgdAPk623LAPmq2DJAvna1DJCvMC0D5Fv/uoGoyDfoLQODV+KoBq/EUQ1eiaMavBJHNXgljmrwShwV9Uq87vx6MqBeGrjWKuXt+XR0m7PZtLnYpV63b7RrdLZrrH/V7EVFvcijutXUEwGuW+rxAdct9axxq1uXp2Xz4miFi1vqZfFGt+ux9qcf979b6jUU1+1kBbfhdrJ661Wepbx1O7eT1du6WzNZvW24nazeNtxOVm8bbqkvBOC6BVZuJ8tSDbeTZamG28myVMMtqyxlWGUpyypLWVZZys6WpVy+wcSHsHM7W5aquwVWbmfLUnW3s2WputvZslTVLUxWgWzKbkG/WIXbD67tZhdhsgntFjD1WycjTDb7YaKZbKq8Cc0JyDJYu921HJhsXsVEM1lDi4lmsu4XEQ35jWg7omGcalpoJmvCMdFM1rFjogFBU0LDOQ030EgaLqKRNFxEI2m4iEbScAkN+T2MO6KRNFxEI2m4iIZNGj67BVZu2WTWs1s2MfTslk2yPLtlExbPbifLf2BNdgu7+0XIb8SL63aylNZwO1nwaridLEs13AIrt7M9o1Z3O9szanW3sz2jVnc7WZZquGWVpchv44rrllWWIr/ZKuqTtOT3T8V1C6zcjpwuzgZGDgxnAyNngLOBkcv6kwHy+3r2uiOb/H6hdwRTPSs6kt8Gsx8ZxrdZNMhwvsuifhM/+S1Bu6FJ5Dcb7YiG810WDTSc77JooOF8z3EDDQiaEhp5Aq+IhvM9x9XTW9NsW9xiomGdhutoWKfhKprZNtrFRMM6DdfRsE7DdTSShotoQNAUIt9su0RjomGdhutoWKfhOhpZGy6ikbXhEprZtsHGRCNrw0U0sjZcRCNpuIgGBE0JjaThIhqJfEU0EvmKaCTyldDMtls3JhqM4h30isY0zILTy03i4OwGjVLXXvsWIRbMIsRC3FK/DuaOp7rX7hBMKJtQC/PXg6s3kiWU/ZIF+o3Qo0A/HnoS6HeA3iikoIR6B+paqHegboR6B+oS1XtQB6HegboT6h2oe6Hegbp0pvehXr2HC6Q17UFdetMO1J30pj2oS2/ag7r0pj2oS2/agzoI9Xvn9SvUpTft0CU56U17UJfetAd16U17UJfetAN1L71pD+rSm/agLr1pD+rSm/agDkK9A3XpTXtQl960B3XpknpQly6pA/UgXVIP6tIl9aAOjKlrtVLXu13XU+Cc71psOKewFhvO6/gtNpxzZIsN57TXYBM5Z7IWG8bJ6caHuaONOTk5vY7W5kKS8ZrxjSSNziSNfX1oU4qMl4FxQYKAxAHJOMzjgmSc/G8F6XLhNsHuQDKOe5gnBKbEOBvigpQgiQRScuRbQXqVi423bgdSciQSSBCQOCAlRyKBlByJBJLxcjMuSMZr07ggpbNBAXmSL60NFknpbbBISnODRVK6GyySICSRSEp/g0VSGpw3k3T5HjUfwp6kdDhYJKXFwSIpPQ4SSS09DhZJ6XGwSEoKeivJW87HqJ3UcIIuxeke0OtPAJywSyXrgd1I2bsL9hPsZbB2do9damQX7LJo2AW7rDB2wQ6CvQd2Se1dsMtCZxfssiraBbt0qV2wS5faA7uVLrULdulSu2CXLrULdulSu2AHwd4Du3SpXbBLl9oFu3Sp78d+ISmNJxZJ6SWRSHI+iBuZpHR8WCSlicMiKX3ZW0mCNZkk7O8F53ywNTJJ6Z6wSEpDhEVSehwsktLjYJGUHgeJJOcDnZFJSo+DRVJ6HCyS0uNgkQQhiURSehwsktLjvJlkbUfDp6O5hSQSSelxkEhyPs62RvICR8J2BY7k5wocicQVOJIo3jp74z0Z7iV83AN6iim/tNpT53wOYkfqUrd7UJdAcA/qrU0QgkSNLthBsPfALut6XbBLZO+CXUJ7F+yyvNgFu9xv0QM753Nh74odsu7TpZ89dmlSu2CXLrULdulSu2AHwd4Du3SpXbBLl9oFu3Spd8/t17BLl9qlXZIutQd2OaG6D3bpUrtgly61C3bpUrtgB8HeA7t0qV2wS5faBbt0qV2wS5faBbt0qR2wazkiuw92aZe6YJd2qQt2EOwHY/9x+tN/Pv71+PGXz5++nf7N01/+/eXX749fvzz/8ft//7z8zWnw/wA=","brillig_names":["constructor"],"assert_messages":{"835":"attempt to add with overflow","759":"Array index out of bounds","564":"Array index out of bounds","692":"Array index out of bounds","942":"Array index out of bounds","683":"attempt to subtract with overflow","747":"attempt to add with overflow","229":"attempt to add with overflow","741":"attempt to add with overflow","930":"attempt to add with overflow","1009":"attempt to add with overflow","665":"Array index out of bounds","211":"Array index out of bounds","1104":"attempt to add with overflow","909":"Array index out of bounds","775":"Array index out of bounds","708":"attempt to add with overflow","958":"Array index out of bounds","1083":"Array index out of bounds","821":"Array index out of bounds","687":"attempt to subtract with overflow","617":"attempt to add with overflow","803":"Array index out of bounds","995":"Array index out of bounds","218":"Array index out of bounds","596":"attempt to add with overflow","721":"Array index out of bounds","462":"Initializer address is not the contract deployer","526":"SharedImmutable already initialized","456":"Initialization hash does not match","788":"attempt to add with overflow","901":"Array index out of bounds","767":"Array index out of bounds","572":"attempt to add with overflow","889":"attempt to add with overflow","950":"Array index out of bounds","971":"attempt to add with overflow","977":"Array index out of bounds","173":"attempt to add with overflow","1075":"Array index out of bounds","1063":"attempt to add with overflow","676":"attempt to add with overflow","606":"Array index out of bounds","728":"Array index out of bounds","917":"Array index out of bounds","207":"attempt to add with overflow","588":"Array index out of bounds","1091":"Array index out of bounds"}},{"name":"redeem_linode_entitlement","is_unconstrained":false,"custom_attributes":["private"],"abi":{"error_types":{"1756802668388977958":{"error_kind":"fmtstring","item_types":[],"length":17}},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"body","type":{"kind":"array","length":768,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"body_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"header","type":{"kind":"array","length":1024,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"header_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"pubkey","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"pubkey_redc","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"from_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"subject_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"amount_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"amount_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"receipt_id_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}}},{"name":"public_teardown_call_request","type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":"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2sWtn2z1rffaxf2cbPWt99rFTZps9Uvvtfv5/vHp/arB6pfea+nql95r6eqX3mvp6pfea9nq1/ZI0tUvvdfS1S+919LVL73X0tUvvdfS1bfea9e2KNLVt95r1/Yd0tW33mvXNhPS1bfea9d2CNLVt95r17b90dW33mvX9vLR1bfea9c26NHVt95r13bd0dW33mvXttLR1bfea9f2x9HVt95r1za90dW33mvXdrLR1Xfea/e17Wl09Z332n1tzxldfee9dn903mv3tTVjdPWd99p9bSEYXX3nvXZfW93FVr+2j4uuvvVeu7Y5i66+9V67tuOKrr71Xru2jYquvvVeu7Y3iq6+9V67tjeKrr71Xru2N4quvvVeu7Y3iq6+9V67tjeKrr71Xru2N4quvvVeu7Y3iq5+7b32Ol9fq3+//7r6tfdatvq191q2+rX3Wrb6tfdatvq191q2+rX3Wrb6tfdatvq191qy+rW9UXT1rffatb1RdPWt99q1vVF09a332rW9UXT1rffatb1RdPWt99q1vVF09a332rW9UXT1rffatb1RdPWt99q1vVF09a332rW9UXT1rffatb1RdPWt99q1vVF09a332rW9UXT1rffaxb1RbPWt99rFvVFs9a332sW9UWz1rffaxb1RbPWt99rFvVFs9a332sW9UWz1rffaxb1RbPWt99rFvVFs9a332sW9UWz1rffaxb1RbPWt99rFvVFs9a332sW9UWz1rffaxb1RbPWt99rFvVFs9a332sW9UWz1rffaxb1RbPWt99rFvVFs9Z332ufi3ii2+s577XNxbxRbfee99vnovNc+F/dGsdV33mufi3uj2Oo777XPxb1RZPWLe6PY6lvvtYt7o9jqW++1i3uj2Opb77WLe6PY6lvvtYt7o9jqW++1i3uj2Opb77WLe6PY6lvvtYt7o9jqW++1i3uj2Opb77WLe6PY6lvvtYt7o9jqW++1rb1Rz9beqGdrb9SztTfq2dob9WztjXq29kY9W3ujnq29Uc/W3qhna2/Us7U36tnaG/Vs7Y16tvZGPVt7o56tvVHP1t6oZ2tv1LO1N+rZ2hv1bO2Nerb2Rj1be6Oerb1Rz9beqGdrb9SztTfq2dob9WztjXq29kY9W3ujnq29Uc/W3qhna2/Us7U36tnaG/Vs7Y16tvZGPVt7o56tvVHP1t6oZ2tv1LO1N+rZ2hv1bO2Nerb2Rj1be6Oerb1Rz9beqGdrb9SztTfq2dob9WztjXq29kY9W3ujnq29Uc/W3qhna2/Us7U36tnaG/Vs7Y16tvZGPVt7o56tvVHP1t6oZ2tv1LO1N6pae6OqtTeqWnujqrU3qh6d99pq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjarW3qhq7Y2q1t6oau2NqtbeqGrtjTpae6OO1t6oo7U36mjtjToenffao7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6OO1t6oo7U36mjtjTpae6PO1t6os7U36mztjTpbe6POR+e99mztjTpbe6PO1t6os7U36mztjTpbe6PO1t6os7U36mztjTpbe6PO1t6os7U36mztjTpbe6POtb1R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20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVEdvN9XR20119HZTHb3dVGdvN9XZ20119nZTnb3dVOej9a579nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVGdvN9XZ20119nZTnb3dVOfabqrn47F9ffp4/bz8v354ex/7j4W8X8+/ZL3WFlndnHXp/fzmrEtv/jdnXbop3Jy1jLIu3UFuzrp0Ybk569Lt5u/M+qivrPs1yLp0Fbo5q1JvIlnXVpHdnFW0N13HIKtobxpmFe1Nw6zls7+u7Vq7OatRb1rb4nZzVqXexLIazZvWlsndnNVo3rS2pu7vyro/tueP+fBjfw+y6vQmnrWMsur0Jp5VqTeR8+vaHr6bsxrNm9Y2/N2bdW0d4L1n9bXdgTdnNfp7urWthDdnLaOsRvOmteWIN2c1mjetrV28OavRvGltoeO9Z7q17Y83ZzWaN63tlbw5axllNZo3ra23vDmrTm/iWY3mTWtbNu/NuraS8+asSvMmltXoftPaZtCbs5bPmW5t5+jNWY3mTWvbTG/OajRvWtuTem/WtaWqN2c1ut+0tq713jPd2m7Xm7OWUVajedPaitmbsxrNm9aW196cVac30axra3HvncGs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f+29nC5/7Q2aLn/tXZcuv/euu7hjmS6/9667uA2ZLr/3rru4t5guv/euu7hhmC6/9667uAuYLr/3rru4tZcuv/Wu+1zcr0uX33rXfS5uwqXLb73rPh+td93n4iJauvzWu+5zcWUsXX7rXfe5uNyVLX9xYytdfu9dd3G3Kl1+7113cQsqXX7vXXdxXyldfu9dd3GzKF1+7113cQcoXX7vXXdxWyddfu9dd3GvJl3+0rvufr5/fHq/arT8pXddvvyld12+/KV3Xb78pXdduvy1rZJ8+Uvvunz5S++6fPlL77p8+Uvvunz5vXfdtZ2KfPm9d9217Yd8+b133bU9hXz5vXfdtY2CfPm9d9213X98+b133bUtfXz5vXfdtX16fPm9d921zXd8+b133bUddXz5vXfdtW1yfPm9d921vW98+b133bUNbXz5vXfdtV1qfPm9d921rWd8+b133bX9ZHz5vXfdtU1ifPm9d921nV98+b133bXtXHz5vXfdtT1afPm9d921jVd8+b133bXdVHz5vXfdtd1UfPm9d9213VR8+b133bXdVHz5vXfdtd1UfPm9d9213VR8+b133bXdVHz5vXfdtd1UfPlr77rX+fpa/vs9WP7auy5d/tq7Ll3+2rsuXf7auy5d/tq7Ll3+2rsuXf7auy5d/tq7Lll+re2m4stvvevW2m4qvvzWu249Wu+6tbabii+/9a5ba7up+PJb77q1tpuKLn9tNxVffu9dd203FV9+7113bTcVX37vXXdtNxVffu9dd203FV9+7113bTcVX37vXXdtNxVffu9dd203FV9+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7113cTcVXX7vXXdxNxVdfu9dd3E3FV1+7123t5uqerupqrebqnq7qaq3m6p6u6mqt5uqerupjt5uqqO3m+ro7aY6erupjkfrXffo7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqqO3m+ro7aY6erupjt5uqrO3m+rs7aY6e7upzt5uqvPRetc9e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rs7aY6e7upzt5uqrO3m+rq7aa6eruprt5uqqu3m+p6tN51r95uqqu3m+rq7aa6eruprt5uqqu3m+rq7aa6eruprt5uqqu3m+rq7aa6eruprt5uqqu3m+rq7aa6eruprt5uqqu3m+rq7aa6eruprt5uqqu3m+rq7aa6eruprt5uqqu3m+rq7aa6eruprt5uqqu3m+rq7aa6eruprt5u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wwaj8sKptca9fFpr3MundfVsayIvnFuL9iaRF86tRXuTyAvHVpEXzq1Fe5PKC6fWonfhIi8cv+lEXji3Fu1NIi+cW4v2JpEXjq0iL5xbi96Fq7xw2GBUXji1rqLWGvfyaa35OytPa83fWXlai/YmkReOrSIvnFuL9iaRF86tRXuTygun1qJ34SIvHL/pRF44txbtTSIvnFo3kRfOrT170ybywrm15134c7qaDWZTeeHU2uNebiovnFpr/s7K09rzd1Y2kRdO33SbyAvn1p69aRN54dy6ilp79qZN5YVTa8+78E3kheM3ncgLx1aRF86tRXuTyAvn1qK9SeSFc2vPu/BN5YXDBqPywqm1x73cVF44tIq8cNzWRF44txbtTSIvnFtXUWvR3iTywrm1aG9SeeHU2vMufBN54fhNJ/LCubVobxJ54dy6ilqL9iaRF86tPe/CN5UXDhuMyguHVpUXTq097uUm8sJxWxN54dy6er7pRF44txbtTSIvnFuL9iaRF46tKi+cWovehYu8cPymE3nh3LqKWov2JpEXzq1Fe5PIC+fWonfhIi+cW4v+PZ3IC+fWot9NRV74VuSFb8O98P0+//2nn13hl+PP/imEx5/96waPP/sHCx1/uL29vvt/xz/Pv/93fh3/zhnXef1SOvsXyJuls39/vFk6+9fHm6WrpnT2L483S2f/7nizdPZPlDdLZ/+aebN09g+fF0uHO9tvltb8RhpubL9ZWvMbabiv/WZpzW+k4bb2m6U1v5GGu9pvlrb8RvoMN7XfLG35jfQZ7mm/WdryG+nzs2pKW34jfYY72m+WtvxG+gw3tN8srfmNNNzPfrO05jfScDv7zdKa30jD3ew3S2t+Iw03s98srfmNNNzLfrO05jfScCv7zdKa30jDnew3S2t+Iw03st8srfmNNNzHfrO05jfScBv7zdKa30jDXew3S2t+Iw03sd8srfmNNNzDfrO05jfScAv7zdKa30jDHew3S2t+Iw03sN8srfmNNNy/frO05jfScPv6zdKa30jD3es3S2t+Iw03r98srfmNNNy7frO05jfScOv6zdKa30jDnes3S2t+Iw03rt8srfmNNNy3frO05jfScNv6zdKa30jDXes3S2t+Iw03rd8srfmNNNyzfrO05jfScMv6zdKa30jDHes3S2t+Iw03rN8srfmNNNyvfrO05jfScLv6zdKa30jDRew3S2t+I9U4258aZ/tT42x/apztT42z/alxtj81zvanxtn+1Djbnxpn+1PjbH9qnO1PjbP9qXG2PzXO9qfG2f7UONufGmf7U+Nsf2qc7b3G2d5rnO29xtnea5zt/WfVlLb8RtprnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnea5ztvcbZ3muc7b3G2d5rnO29xtnepzvb+/qv9Np+Of7sHz77ff53/O37y/Fn/5rB48/+iULHH25X4/Fn/5jA48/+hYDHn33t4/Fn3+V4/NkXNB5/9q2Lx8++dYcby3j87Ft3uIaMx8++dYe7xXj87Ft3uDCMx8++dYdbwHj87Ft3uNqLx8++dYf7unj87Ft3uISLx8++dYebtXj87Ft3uC6Lx8++dYc7sHj87Ft3uNiKx8++dYfbqnj87Ft3uIKKx8++dYd7pXj87Ft3uCyKx4++dddwAxSPH33rruFaJx4/+tZdP9G37pqNZX6O+99/+nOu344/+tbl44++dfn4o29dPv7oWxePP1uV5OOPvnX5+KNvXT7+6FuXjz/61uXjZ9+6s01FPn72rTtbP+TjZ9+6s51CPn72rTtbFOTjZ9+6s+0/Pn72rTtb6ePjZ9+6sz09Pn72rTtbvuPjZ9+6s406Pn72rTtbk+PjZ9+6s903Pn72rTtbaOPjZ9+6sy01Pn72rTtbPePjZ9+6s30yPn72rTtbEuPjZ9+6s80vPn72rTtb5+LjZ9+6sx0tPn72rTtbvOLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjz751z+P67/j3/cvxZ9+6ePzZty4ef/ati8effevi8Wffunj82bcuHn/2rYvHn33r0vFn21R8/Oxbd7ZNxcfPvnVn21R8/Oxbd7ZNxcfPvnVn21R8/Oxbd7ZNxcfPvnVn21R8/Oxbd7ZNxcfPvnVn21R8/Oxbd7ZNxcePvnW/s20qPn70rfudbVPx8aNv3e9P9K37HW5T4fGjb93vcJsKjx99636H21R0/OE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR5/zz5+9q073KbC42ffusNtKjx+9q073Kai4w+3qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bfucJsKj5996w63qfD42bdutk31zbapvtk21Tfbpvpm21TfbJvqm21TfbNtqm+2TfXNtqm+2TbVN9um+mbbVN9sm+qbbVN9s22qb7ZN9c22qb7ZNtU326b6ZttU32yb6pttU32zbapvtk31zbapvtk21Tfbpjqybaoj26Y6sm2qI9umOn6ib90j26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqybaoj26Y6sm2qI9umOrJtqiPbpjqzbaoz26Y6s22qM9umOn+ib90z26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbpjqzbaoz26Y6s22qM9umOrNtqjPbprqybaor26a6sm2qK9umun6ib90r26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaor26a6sm2qK9umurJtqivbprqybaprtk21//xs//3T3+v/Pf7//Ye3+/v59yD3tf/f1tmQ1cuto+/zl1tHX/4vt47+pfBy6ypqHf0b5OXW0T9YXm4d/evmf2z9Wf+1fs5fWkf/FHq51fS7CVpnU2Qvt0p/N53fX1qlv5t+bZX+bvq1dfXcr7OttZdbi343zVbcXm41/W6i1qK9aTYm93Jr0d40m6n7n1o/P9v+7z788/llH55t2r3cuopaPb+buNX0uwm+X2c7fC+3Fu1Ns4W/d1tnc4DvfqvPtgNfbi3693SzVcKXW1dRa9HeNBtHfLm1aG+azS6+3NqzN92zQcdXv+nu2frjy609e9M925V8uXUVtfbsTfds3vLlVs/vJm7t2Zvu2crmu62zSc6XW017E7X2vG+6Z8ugL7eunm+62eboy609e9M9WzN9ubVnb7pnO6nvts5GVV9u7XnfdM/mWt/9ppttu77cuopai/am2cTsy61Fe9NsvPblVs/vJmydzeK+u8HMNnRfbjXtTdRq2puodfVsa7Pd35dbi/am2aLwy61Fe9Nsq/jd1tmw8cutRXvTbDL55daed+H3bIz53W+62XLzy61Fe9NsE/rl1qK9abY2/W7rbJr65daid+Gz0et3N5jZQvbLrauo1bQ3Uat0b/ptW5uter/cWrQ3FXnhd5EXfhd54XeRF34XeeF3kRd+F3nht8gLx286kRfOrUV7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Hz/71p1tU/Hxs2/d2TYVHz/71p1tU/Hxs2/d2TYVHz/71p1tU/Hxs2/d2TYVHz/71h1uU+Hxs2/d4TYVHj/71h1uU+Hxs2/d4TYVHj/71h1uU+Hxs2/d4TYVHj/71h1uU+Hxo2/dY7hNhcePvnWP4TYVHj/61j1+om/dY7hNhcePvnWP4TYVHj/61j2G21R0/OE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9bNtqmObJvqyLapjmyb6si2qY5sm+rItqmObJvqyLapjmyb6si2qY5sm+rItqmObJvqyLapjmyb6si2qY5sm+rItqmObJvqyLapjmyb6si2qY5sm+rItqmObJvqyLapjmyb6si2qY5sm+rItqmObJvqyLapjmyb6si2qY5sm+rItqmObJvqyLapjmyb6si2qY5sm+rItqmObJvqyLapjmyb6si2qY5sm+rMtqnObJvqzLapzmyb6vyJvnXPbJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rMtqnObJvqzLapzmyb6sy2qc5sm+rKtqmubJvqyraprmyb6vqJvnWvbJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rOtqnubJvqzrap7myb6v6JvnXvbJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe7ZNtX+87P9909/r//3+P/3H97u7+ffg9zX/n9bZ0NWL7eOvs9fbh19+b/cOvqXwsutq6h19G+Ql1tH/2B5uXX0r5v/sfVn/df6OX9pHf1T6OVW0+8maJ1Nkb3cKv3ddH5/aZX+bvq1Vfq76dfW1XO/zrbWXm4t+t00W3F7udX0u4lai/am2Zjcy61Fe9Nspu5/av38bPu/+/DP55d9eLZp93LrKmr1/G7iVtPvJvh+ne3wvdxatDfNFv7ebZ3NAb77rT7bDny5tejf081WCV9uXUWtRXvTbBzx5daivWk2u/hya9HeNBt0fPebbrb++HJr0d4025V8uXUVtRbtTbN5y5dbPb+buLVob5qtbL7bOpvkfLnVtDdRa9H7ptky6Mutq+ebbrY5+nJr0d40WzN9ubVob5rtpL7Zev7MRlVfbq153/S01uxNT2vN3vS0rqLWmr3paa3Zm57Wmr3pafX8buJWz+8mbJ3N4r65wTytNXvT02ram6jVtDdR62rZ1p5W6d70a2vN3vS01uxNT2vN3vS0Fu1Ns2Hjl1uL9qbZZPLLrTXvwp/W1fNNN1tufrm1aG+abUK/3Fq0N83Wpt9tnU1Tv9xa8y78aS3am2YL2S+3rqJW095ErdK96bdtbbbq/XJr0d7U44Wf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hXNrz970EXnh3NqzN31EXji2qrxwau15F/4ReeH0TfcReeHcuopae/amj8gL59aevekj8sK5tedd+EflhcMGo/LCqbXHvfyovHBqXT3bmsgL59aivUnkhXNr0d4k8sKxVeSFc2vR3qTywqm15134R+SF4zedyAvn1qK9SeSFc2vR3iTywrFV5IVza8+78I/KC4cNRuWFU+sqau1xLz8iLxy3NZEXzq1Fe5PIC8dWkRfOrUV7k8gL59aivUnlhVNr0btwkReO33QiL5xbi/YmkReOrSIvnFuL9iaRF86tRe/CVV44bDAqL5xae9zLj8oLp9aev7PyEXnh2CrywvGbTuSFc2vR3iTywrl1FbUW7U0qL5xai96Fi7xw/KYTeeHYKvLCubVobxJ54dxatDeJvHBuLXoXrvLCYYNReeHU2uNeflReOLSKvHDc1kReOLcW7U0iL5xbV1Fr0d4k8sK5tWhvUnnh1NrzLnwXeeH0TbeLvHBu7dmbdpEXzq2rqLVnb9pFXji39rwL31Ve+N8bzK7ywqFV5YVTa497uYu8cNrWdpEXzq2r55tO5IVza8/etIu8cG7t2Zt2kReOrSovnFp73oXvIi8cv+lEXji3rqLWor1J5IVza9HeJPLCubXnXfgu8sK5tejf04m8cG4t+t1U5IXvRV74PtwL3+/z3396bb/MoMMJcDz+7F83ePzZP1jo+MPt7fXd/zv+ef79v/Pr+HfOuM7rl9LZv0DeLJ39++PN0tm/Pt4sXTWls395vFk6+3fHm6Wzf6K8WTr718ybpbN/+LxYOtzZfrO05jfScGP7zdKa30jDfe03S2t+Iw23td8srfmNNNzVfrO05jfScFP7zdKa30jDPe03S2t+Iw23tN8srfmNNNzRfrO05jfScEP7zdKa30jD/ew3S2t+Iw23s98srfmNNNzNfrO05jfScDP7zdKa30jDvew3S2t+Iw23st8srfmNNNzJfrO05jfScCP7zdKa30jDfew3S2t+Iw23sd8srfmNNNzFfrO05jfScBP7zdKa30jDPew3S2t+Iw23sN8srfmNNNzBfrO05TfSGm5gv1na8htpDfev3yxt+Y20flZNactvpDXcvX6ztOU30hpuXr9ZWvMbabh3/WZpzW+k4db1m6U1v5GGO9dvltb8RhpuXL9ZWvMbabhv/WZpzW+k4bb1m6U1v5GGu9Zvltb8RhpuWr9ZWvMbabhn/WZpzW+k4Zb1m6U1v5GGO9Zvltb8RhpuWL9ZWvMbabhf/WZpzW+k4Xb1m6U1v5GGi9hvltb8RqpxtleNs71qnO1V42yvGmd71Tjbq8bZXjXO9qpxtleNs71qnO1V42yvGmd71Tjbq8bZXjXO9qpxtleNs71qnO1V42yvGmd71Tjbq8bZXjXO9qpxtleNs71qnO1V42yvGmd71Tjbq8bZXjXO9qpxtleNs71qnO1V42yvGmd71Tjbq8bZXjXO9qpxtleNs71qnO1V42yvGmd71Tjbq8bZXjXO9qpxtleNs71qnO1V42yvGmd71Tjbq8bZXjXO9qpxtleNs71qnO1V42x/a5ztb42z/a1xtr81zvb3Z9WUtvxG+tY4298aZ/tb42x/a5ztb42z/a1xtr81zva3xtn+1jjb3xpn+zvd2d7Xf6XX9svxZ//w2e/zv+Nv31+OP/vXDB5/9k8UOv5wuxqPP/vHBB5/9i8EPP7sax+PP/sux+PPvqDx+LNvXTx+9q073FjG42ffusM1ZDx+9q073C3G42ffusOFYTx+9q073ALG42ffusPVXjx+9q073NfF42ffusMlXDx+9q073KzF42ffusN1WTx+9q073IHF42ffusPFVjx+9q073FbF42ffusMVVDx+9q073CvF42ffusNlUTx+9q073ADF42ffusO1Tjx+9q073NXE44++dT/H/e8//TnXb8cffevy8Uffunz80bcuH3/0rYvHn61K8vFH37p8/NG3Lh9/9K3Lxx996/Lxs2/d2aYiHz/71p2tH/Lxs2/d2U4hHz/71p0tCvLxs2/d2fYfHz/71p2t9PHxs2/d2Z4eHz/71p0t3/Hxs2/d2UYdHz/71p2tyfHxs2/d2e4bHz/71p0ttPHxo2/dY7alxsePvnWP2eoZHz/61j1+om/dYzY6xsePvnWP2TwYHz/61j1mQ154/Nk6Fx8/+9ad7Wjx8bNv3dniFR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR9/9q17Htd/x7/vX44/+9bF48++dfH4s29dPP7sWxePP/vWxePPvnXx+LNvXTz+7FuXjj/bpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH70rXsOt6nw+NG37jncpsLjR9+650/0rXsOt6nw+NG37jncpsLjR9+653Cbio4/3KbC42ffusNtKjx+9q073KbC42ffusNtKjx+9q073KbC42ffusNtKjx+9q073KbC42ffusNtKjx+9q073KbC42ffusNtKjx+9q073KbC42ffutk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU53ZNtWZbVOd2TbVmW1Tndk21ZltU13ZNtWVbVNd2TbVlW1TXT/Rt+6VbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1TXdk2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6+LxZ9+6ePzZty4ef/atS8efbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3dk2FR8/+9adbVPx8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+9YdblPh8bNv3eE2FR4/+ta9httUePzoW/cablPh8aNv3esn+ta9httUePzoW/cablPh8aNv3Wu4TUXHH25T4fGzb91sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyraprmyb6sq2qa5sm+rKtqmubJvqyrap7myb6s62qe5sm+rOtqnun+hb9862qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqzrap7myb6s62qe5sm+rOtqnubJvqjraptp9om+o5fvKt+xw/+dZ9jp986z7HT751n+Mn37rP8ZNv3ef4ybfuc/zkW/c5fvatG21TPcfPvnWjbarn+Nm3brRN9Rw/+9aNtqme42ffutE21XP87Fs32qZ6jp9960bbVM/xs2/daJvqOX72rRttUz3Hz751o22q5/jZt260TfUcP/vWjbapnuNn37rRNtVz/OxbN9qmeo6ffetG21TP8bNv3Wib6vnvy751o22q578v+9aNtqme/77sWzfapnr++7Jv3Wib6vnvy751o22q5/jZt260TfUcP/vWjbapnuNn37rRNtVz/OxbN9qmeo6ffetG21TP8bNv3Wib6jl+9q0bbVM9x8++daNtquf42bdutE31HD/71o22qZ7jZ9+60TbVc/zsWzfapnqOn33rRttUz/Gzb91om+o5fvatG21TPcfPvnWjbarn+Nm3brRN9Rw/+9aNtqme42ffutE21XP87Fs32qZ6jp9960bbVM/xs2/daJvqOX72rRttUz3Hz751o22q5/ijb93952f775/+Xv/v8f/vP7zd38+/B7mv/f+0brMhq5dbR9/nL7eOvvxfbh39S+Hl1lXUOvo3yMuto3+wvNw6+tfN/9j6s/5r/Zy/tI7+KfRyq+l3E7TOpshebpX+bjq/v7RKfzf92ir93fRr6+q5X2dbay+3Fv1umq24vdxq+t1ErUV702xM7uXWor1pNlP3P7V+frb9333453P/0ur53cStq6jV87uJW02/m+D7dbbD93Jr0d40W/h7t3U2B/jut/psO/Dl1qJ/TzdbJXy5dRW1Fu1Ns3HEl1uL9qbZ7OLLrUV702zQ8d1vutn648utRXvTbFfy5dZV1Fq0N83mLV9u9fxu4taivWm2svlu62yS8+VW095ErUXvm2bLoC+3rp5vutnm6MutRXvTbM305daivWm2k/pu62xU9eXWovdNs7nWd7/pZtuuL7euotaivWk2Mftya9HeNBuvfbnV87sJW2ezuO9uMLMN3ZdbTXsTtZr2JmpdPdvabPf35daivWm2KPxya9HeNNsqfrd1Nmz8cmvR3jSbTH65tehd+GyM+d1vutly88utRXvTbBP65daivWm2Nv1u62ya+uXWonfhs9HrdzeY2UL2y62rqNW0N1GrdG/6bVubrXq/3Fq0NxV54Z8iL/xT5IV/irzwT5EX/vlZRa0978I/Ii+cvuk+Ii+cW3v2po/IC8dWkRfOrT1700fkhXNrz7vwj8oL/3uD+ai8cGrtcS8/Ki+cWqV70y/b2sfqhf/WWuSFf4q88I/IC+fWor1J5IVza9HepPLCqbXnXfhH5IXjN53IC8dWkRfOrUV7k8gL59aivUnkhXNrz7vwj8oLhw1G5YVTa497+VF54dAq8sJxWxN54dxatDeJvHBuXUWtRXuTyAvn1qK9SeWFU2vRu3CRF47fdCIvnFuL9iaRF86tq6i1aG8SeeHcWvQuXOWFwwaj8sKhVeWFU2uPe/kReeG4rYm8cG5dPd90Ii+cW4v2JpEXzq1Fe5PIC8dWlRdOrUXvwkVeOH7Tibxwbl1FrUV7k8gL59aivUnkhXNr0btwlRcOG4zKC6fWHvfyo/LCqXX1bGsiL5xbi/YmkRfOrUV7k8gLx1aRF86tRXuTygun1qJ34SIvHL/pRF44txbtTSIvnFuL9iaRF06tu8gL59aed+G7ygv/e4PZVV44ta6i1h73chd54bSt7SIvnFt79qZd5IVjq8gL59aevWkXeeHc2rM37SovnFp73oXvIi8cv+lEXji39uxNu8gLx1aRF86tRXuTyAvn1p534bvKC4cNRuWFU2uPe7mrvHBq7fk7K7vIC8dWkReO33QiL5xbi/YmkRfOrauotWhvUnnh1NrzLnwXeeH4TSfywrFV5IVza9HeJPLCubVobxJ54dza8y58V3nhsMGovHBq7XEvd5UXDq0iLxy3NZEXzq1Fe5PIC+fWVdRatDeJvHBuLdqbVF44tRa9Cxd54fhNJ/LCubVobxJ54dy6ilqL9iaRF86tRe/CVV44bDAqLxxaVV44tfa4l7vIC8dtTeSFc+vq+aYTeeHcWrQ3ibxwbi3am0ReOLaqvHBqLXoXLvLC8ZtO5IVz6ypqLdqbRF44txbtTSIvnFuL3oWrvHDYYFReOLUWuZcqL5xaV8+2JvLCubVobxJ54dxatDeJvHBqXSIvnFt79qal8sKptedd+PpZNd90S+SFc2vP3rREXji39uxNS+SFY6vIC+fWnnfhS+WF/73BLJUXTq2rqLXHvVwiL5y2tSXywrm1Z29aIi8cW0VeOLcW7U0iL5xbi/YmlRdOrT3vwpfIC8dvOpEXzq1Fe5PIC8dWkRfOrUV7k8gL59aed+FL5YXDBqPywqm1x71cKi+cWnv+zsoSeeHYKvLC8ZtO5IVza9HeJPLCuXUVtRbtTSovnFp73oUvkReO33QiLxxbRV44txbtTSIvnFuL9iaRF86tRe/CVV44bDAqL5xae9zLpfLCoVXkheO2JvLCubVobxJ54dy6ilqL9iaRF86tRXuTygun1qJ34SIvHL/pRF44txbtTSIvnFtXUWvR3iTywrm16F24yguHDUblhUOrygun1h73com8cNzWRF44t66ebzqRF86tRXuTyAvn1qK9SeSFY6vKC6fWonfhIi8cv+lEXji3rqLWor1J5IVza9HeJPLCubXnXfhX5YX/vcF8VV44tfa4l1+VF06tq2Zb+4q8cG7t2Zu+Ii+cW3v2pq/IC8dWkRfOrT1701flhVNrz7vwr8gLx286kRfOrT1701fkhXNrz970FXnh2Crywrm15134V+WFwwaj8sKpdRW19riXX5EXjtuayAvn1qK9SeSFY6vIC+fWor1J5IVza9HepPLCqbXnXfhX5IXjN53IC+fWor1J5IVjq8gL59aivUnkhXNrz7vwr8oLhw1G5YVTa497+VV54dTa83dWviIvHFtFXjh+04m8cG4t2ptEXji3rqLWor1J5YVTa9G7cJEXjt90Ii8cW0VeOLcW7U0iL5xbi/YmkRfOrUXvwlVeOGwwKi+cWnvcy6/KC4dWkReO25rIC+fWor1J5IVz6ypqLdqbRF44txbtTSovnFqL3oWLvHD8phN54dxatDeJvHBuXUWtRXuTyAvn1qJ34SovHDYYlRcOrSovnFqL3EuRF47bmsgL59bV800n8sK5tWhvEnnh3Fq0N4m8cGo9VF44tfa8Cz9EXjh90x0iL5xbV1Frz950iLxwbu3Zmw6RF86tPe/CD5UX/vcGc6i8cGrtcS8PlRdOratmWztEXji39uxNh8gL59aevekQeeHYKvLCubVob1J54dTa8y78EHnh+E0n8sK5tWhvEnnh3Fq0N4m8cGwVeeHc2vMu/FB54bDBqLxwal1FrT3u5SHywnFbE3nh3Fq0N4m8cGwVeeHcWrQ3ibxwbi3am1ReOLX2vAs/RF44ftOJvHBuLdqbRF44toq8cG4t2ptEXji3Fr0LV3nhsMGovHBq7XEvD5UXTq09f2flEHnh2CrywvGbTuSFc2vR3iTywrl1FbUW7U0qL5xai96Fi7xw/KYTeeHYKvLCubVobxJ54dxatDeJvHBuLXoXrvLCYYNReeHU2uNeHiovHFpFXjhuayIvnFuL9iaRF86tq6i1aG8SeeHcWrQ3qbxwai16Fy7ywvGbTuSFc2vR3iTywrl1FbUW7U0iL5xbi96Fq7xw2GBUXvjfrafKC6fWHvfyFHnhtK2dIi+cW1fNN90p8sK5tWdvOkVeOLf27E2nyAvHVpUXTq0978JPkRdO33SnyAvn1lXU2rM3nSIvnFt79qZT5IVza8+78FPlhcMGo/LCqbXHvTxVXji1rp5tTeSFc2vR3iTywrm1aG8SeeHYKvLCubVob1J54dTa8y78FHnh+E0n8sK5tWhvEnnh3Fq0N4m8cGwVeeHc2vMu/FR54bDBqLxwal1FrT3u5SnywnFbE3nh3Fq0N4m8cGwVeeHcWrQ3ibxwbi3am1ReOLUWvQsXeeH4TSfywrm1aG8SeeHYKvLCubVobxJ54dxa9C5c5YXDBqPywqm1x708VV44tfb8nZVT5IVjq8gLx286kRfOrUV7k8gL59ZV1Fq0N6m8cGotehcu8sLxm07khWOryAvn1qK9SeSFc2vR3iTywrm16F24yguHDUblhVNrj3t5qrxwaBV54bitibxwbi3am0ReOLeuotaivUnkhXNr0d6k8sKptedd+CXywumb7hJ54dzaszddIi+cW1dRa8/edIm8cG7teRd+qbzwvzeYS+WFQ6vKC6fWHvfyEnnhtK1dIi+cW1fPN53IC+fWnr3pEnnh3NqzN10iLxxbVV44tfa8C79EXjh+04m8cG5dRa1Fe5PIC+fWor1J5IVza8+78EvlhcMGo/LCqbXHvbxUXji1rp5tTeSFc2vR3iTywrm1aG8SeeHYKvLCubVob1J54dTa8y78Ennh+E0n8sK5tWhvEnnh3Fq0N4m8cGwVeeHcWvQuXOWFwwaj8sKpdRW19riXl8gLx21N5IVza9HeJPLCsVXkhXNr0d4k8sK5tWhvUnnh1Fr0LlzkheM3ncgL59aivUnkhWOryAvn1qK9SeSFc2vRu3CVFw4bjMoLp9Ye9/JSeeHU2vN3Vi6RF46tIi8cv+lEXji3Fu1NIi+cW1dRa9HepPLCqbXoXbjIC8dvOpEXjq0iL5xbi/YmkRfOrUV7k8gL59aid+EqLxw2GJUXTq1F7qXKC/+79RZ54bSt3SIvnFt79qZb5IVz6ypq7dmbbpEXzq09e9Ot8sKptedd+C3ywumb7hZ54dzaszfdIi+cW1dRa8/edIu8cG7teRd+q7xw2GBUXji0qrxwau1xL2+RF47bmsgL59bV800n8sK5tWhvEnnh3Fq0N4m8cGxVeeHU2vMu/BZ54fhNJ/LCuXUVtRbtTSIvnFuL9iaRF86tPe/Cb5UXDhuMygun1h738lZ54dS6erY1kRfOrUV7k8gL59aivUnkhWOryAvn1qK9SeWFU2vRu3CRF47fdCIvnFuL9iaRF86tRXuTyAvHVpEXzq1F78JVXjhsMCovnFpXUWuPe3mLvHDc1kReOLcW7U0iLxxbRV44txbtTSIvnFuL9iaVF06tRe/CRV44ftOJvHBuLdqbRF44toq8cG4t2ptEXji3Fr0LV3nhsMGovHBq7XEvb5UXTq09f2flFnnh2CrywvGbTuSFc2vR3iTywrl1FbUW7U0qL5xai96Fi7xw/KYTeeHQ+vkReeHcWrM3Pa01e9PTWrM3Pa2rqLXmXfjTWrM3Pa01e9PTWuNePq017uXzP+eav7PytNb8nZWntWZv+udKKmpdRa01e9PTWrM3Pa01e9PTWvMu/GmteRf+fPsU7U0iL5xbi/YmkRfOrauotWhvEnnh3FrzLvz5vxXtTSovHFpVXji11riXT2vN31l5Wmv+zsrTunq+6UReOLcW7U0iL5xbi/YmkReOrSovnFpr3oU/rUV7k8gL59ZV1Fq0N4m8cG4t2ptEXji3Fr0LV3nhsMGovHBqrXEvn9Ya9/JpXT3bmsgL59aivUnkhXNr0d4k8sKxVeSFc2vR3qTywqm16F24yAvHbzqRF86tRXuTyAvn1qK9SeSFY6vIC+fWonfhKi8cNhiVF06tq6i1xr18Wmv+zsrTWvN3Vp7Wor1J5IVjq8gL59aivUnkhXNr0d6k8sKptehduMgLx286kRfOrUV7k8gLx1aRF86tRXuTyAvn1qJ34SovHDYYlRdOrUXupcoLp9aav7PytNb8nZXPJvLC6ZtuE3nh3NqzN20iL5xbV1Frz960qbxwau15F76JvHD6pttEXji2irxwbu3ZmzaRF86tPXvTJvLCubXnXfim8sL/3mA2lRdOrT3u5abywqFV5IXjtibywrm1aG8SeeHcuopai/YmkRfOrUV7k8oLp9aed+GbyAvHbzqRF86tRXuTyAvn1lXUWrQ3ibxwbu15F76pvHDYYFReOLSqvHBq7XEvN5EXjtuayAvn1tXzTSfywrm1aG8SeeHcWrQ3ibxwbFV54dRa9C5c5IXjN53IC+fWVdRatDeJvHBuLdqbRF44txa9C1d54bDBqLxwau1xLzeVF06tq2dbE3nh3Fq0N4m8cG4t2ptEXji2irxwbi3am1ReOLUWvQsXeeH4TSfywrm1aG8SeeHcWrQ3ibxwbBV54dxa9C5c5YXDBqPywql1FbX2uJebyAvHbU3khXNr0d4k8sKxVeSFc2vR3iTywrm1aG9SeeHUWvQuXOSF4zedyAvn1qK9SeSFU+tH5IVza8/e9BF54dza8y7887NqNpiPygun1h738qPywqm15++sfEReOLaKvHD6pvuIvHBu7dmbPiIvnFtXUWvP3vRReeHU2vMu/CPywvGbTuSFY6vIC+fWor1J5IVza9HeJPLCubXnXfhH5YXDBqPywqm1x738qLxwaBV54bitibxwbi3am0ReOLeuotaivUnkhXNr0d6k8sKptedd+EfkheM3ncgL59aivUnkhXPrKmot2ptEXji39rwL/6i8cNhgVF44tKq8cGrtcS8/Ii8ctzWRF86tq+ebTuSFc2vR3iTywrm1aG8SeeHYqvLCqbXoXbjIC8dvOpEXzq2rqLVobxJ54dxatDeJvHBuLXoXrvLCYYNReeHU2uNeflReOLWunm1N5IVza9HeJPLCubVobxJ54dgq8sK5tWhvUnnh1Fr0LlzkheM3ncgL59aivUnkhXNr0d4k8sKxVeSFc2vRu3CVFw4bjMoLp9ZV1FrkXoq8cNzWRF44txbtTSIvnFp3kRfOrT170y7ywrm1Z2/af1ZRa8+78F3khdM33S7ywrm1Z2/aRV44toq8cG7t2Zt2kRfOrT3vwneVF/73BrOrvHBq7XEvd5UXTq09f2dlF3nh2CrywvGbTuSFc2vR3iTywrl1FbUW7U0qL5xae96F7yIvHL/pRF44toq8cG4t2ptEXji3Fu1NIi+cW3vehe8qLxw2GJUXTq097uWu8sKhVeSF47Ym8sK5tWhvEnnh3LqKWov2JpEXzq1Fe5PKC6fWonfhIi8cv+lEXji3Fu1NIi+cW1dRa9HeJPLCubXoXbjKC4cNRuWFQ6vKC6fWHvdyF3nhuK2JvHBuXT3fdCIvnFuL9iaRF86tRXuTyAvHVpUXTq1F78JFXjh+04m8cG5dRa1Fe5PIC+fWor1J5IVza9G7cJUXDhuMygun1h73cld54dS6erY1kRfOrUV7k8gL59aivUnkhWOryAvn1qK9SeWFU2vRu3CRF47fdCIvnFuL9iaRF86tRXuTyAun1iXywrm15134Unnhf28wS+WFU+sqau1xL5fIC6dtbYm8cG7t2ZuWyAvHVpEXzq09e9MSeeHc2rM3LZUXTq0978KXyAvHbzqRF86tPXvTEnnh2Crywrm1aG8SeeHc2vMufKm8cNhgVF44tfa4l0vlhVNrz99ZWSIvHFtFXjh+04m8cG4t2ptEXji3rqLWor1J5YVTa8+78CXywvGbTuSFY6vIC+fWor1J5IVza9HeJPLCubXnXfhSeeGwwai8cGrtcS+XyguHVpEXjtuayAvn1qK9SeSFc+sqai3am0ReOLcW7U0qL5xai96Fi7xw/KYTeeHcWrQ3ibxwbl1FrUV7k8gL59aid+EqLxw2GJUXDq0qL5xae9zLJfLCcVsTeeHcunq+6UReOLcW7U0iL5xbi/YmkReOrSovnFqL3oWLvHD8phN54dy6ilqL9iaRF86tRXuTyAvn1qJ34SIvnFuL/j2dyAvn1qLfTUVe+CrywtdwL3y/z3//6bX9MoMOJ8Dx+LN/3eDxZ/9ggeN/h9vb67v/d/zz/Pt/59fx75xxndcvpbN/gbxZOvv3x5uls399vFm6akpn//J4s3T27443S2f/RHmzdPavmTdLZ//webF0uLP9ZmnNb6ThxvabpTW/kYb72m+W1vxGGm5rv1la8xtpuKv9ZmnNb6ThpvabpTW/kYZ72m+W1vxGGm5pv1la8xtpuKP9ZmnNb6ThhvabpTW/kYb72W+W1vxGGm5nv1la8xtpuJv9ZmnNb6ThZvabpTW/kYZ72W+W1vxGGm5lv1la8xtpuJP9ZmnNb6ThRvabpTW/kYb72G+W1vxGGm5jv1la8xtpuIv9ZmnNb6ThJvabpTW/kYZ72G+W1vxGGm5hv1la8xtpuIP9ZmnNb6ThBvabpTW/kYb712+W1vxGGm5fv1la8xtpuHv9ZmnNb6Th5vWbpTW/kYZ712+W1vxGGm5dv1la8xtpuHP9ZmnNb6ThxvWbpTW/kYb71m+W1vxGGm5bv1la8xtpuGv9ZmnNb6ThpvWbpTW/kYZ71m+W1vxGGm5Zv1la8xtpuGP9ZmnNb6ThhvWbpTW/kYb71W+W1vxGGm5Xv1la8xtpuIj9ZmnLb6Sjxtk+apzto8bZPmqc7eNn1ZS2/EY6apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T5qnO2jxtk+apzto8bZPmqc7aPG2T6mO9v7+q/02n45/uwfPvt9/nf87fvL8Wf/msHjz/6JQscfblfj8Wf/mMDjz/6FgMeffe3j8Wff5Xj82Rc0Hn/2rYvHz751hxvLePzsW3e4hozHz751h7vFePzsW3e4MIzHz751h1vAePzsW3e42ovHj751z+G+Lh4/+tY9h0u4ePzoW/f8ib51z+EQLR4/+tY9h5OxePzoW/ccjrvS8YeLrXj87Ft3uK2Kx8++dYcrqHj87Ft3uFeKx8++dYfLonj87Ft3uAGKx8++dYdrnXj87Ft3uKuJxx996/6zgP////TnXL8df/Sty8cffevy8Uffunz80bcuHn+2KsnHH33r8vFH37p8/NG3Lh9/9K3Lx8++dWebinz87Ft3tn7Ix8++dWc7hXz87Ft3tijIx8++dWfbf3z87Ft3ttLHx8++dWd7enz87Ft3tnzHx8++dWcbdXz87Ft3tibHx8++dWe7b3z87Ft3ttDGx8++dWdbanz87Ft3tnrGx8++dWf7ZHz87Ft3tiTGx8++dWebX3z87Ft3ts7Fx8++dWc7Wnz87Ft3tnjFx8++dWfbVHz87Ft3tk3Fx8++dWfbVHz87Ft3tk3Fx8++dWfbVHz87Ft3tk3Fx8++dWfbVHz87Ft3tk3Fx5996z5Dzn/Hv+9fjj/71sXjz7518fizb108/uxbF48/+9bF48++dfH4s29dPP7sWxeOf822qfj40bfuNdum4uNH37rXT/Ste822qfj40bfuNdum4uNH37rXbJsKjz/bpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvbpuLjZ9+6s20qPn72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+6w20qPH72rTvcpsLjZ9+62TbVlW1TXdk21ZVtU13ZNtWVbVNd2TbVlW1T3dk21Z1tU93ZNtWdbVPdP9G37p1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVnW1T3dk21Z1tU93ZNtWdbVPd2TbVHW1T7T/RNtVz/ORb9zl+8q37HD/51n2On3zrPsdPvnWf4yffus/xk2/d5/jJt+5z/OxbN9qmeo6ffetG21TP8bNv3Wib6jl+9q0bbVM9x8++daNtquf42bdutE31HD/71o22qZ7jZ9+60TbVc/zsWzfapnqOn33rRttUz/Gzb91om+o5fvatG21TPcfPvnWjbarn+Nm3brRN9Rw/+9aNtqme42ffutE21XP87Fs32qZ6jp9960bbVM/xs2/daJvqOX72rRttUz3Hz751o22q5z8s+9aNtqme/7DsWzfapvrnPyz7+Nm3brRN9fyHZd+60TbV/hNtUz3Hz751o22q5/jZt260TfUcP/vWjbapnuNn37rRNtVz/OxbN9qmeo6ffetG21TP8bNv3Wib6jl+9q0bbVM9x8++daNtquf42bdutE31HD/71o22qZ7jZ9+60TbVc/zsWzfapnqOn33rRttUz/Gzb91om+r5T8i+daNtquc/IfvWjbap/vlPyD5+9q0bbVM9/wnZt262TbVl21Rbtk21ZdtUW7ZN9fwXZh8/+tbdsm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qbbZNtf/8bP/909/r/z3+//2Ht/v7+fcg97X/39bZkNXLraPv85dbR1/+L7eO/qXwcusqah39G+Tl1tE/WF5uHf3r5n9s/Vn/tX7OX1pH/xR6udX0uwlaZ1NkL7dKfzed319apb+bfm2V/m76tXX13K+zrbWXW4t+N81W3F5uNf1uotaevekzG5N7ubVnb/rMZur+p9bn/2/7v/vwz+f+pdXzu4lbV1Gr53cTt5p+N/39/fqZ7fC93NqzN31mC3/vts7mAF/9Vv/MtgNfbu3593Sf2Srhy62rqLVnb/rMxhFfbu3Zmz6z2cWXW4v2ptmg47vfdLP1x5dbi/am2a7ky62rqLVob5rNW77c6vndxK1Fe9NsZfPd1tkk58utpr2JWnveN31my6Avt66eb7rZ5ujLrUV702zN9OXWor1ptpP6butsVPXl1qL3TbO5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bVM9x8++daNtquf42bdutE31HD/71o22qZ7jZ9+60TbVc/zsWzfapnqOn33rRttUz/Gzb91om+o5fvStu2XbVFu2TbVl21Rbtk31/BdmHz/61t2ybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum2rJtqi3bptqybaot26basm2qLdum+mTbVJ9sm+qTbVN9sm2qz0/0rfvJtqk+2TbVJ9um+mTbVJ9sm+qTbVN9sm2qT7ZN9cm2qT7ZNtUn26b6ZNtUn2yb6pNtU32ybapPtk31ybapPtk21Sfbpvpk21SfbJvqk21TfbJtqk+2TfXJtqk+2TbVJ9um+mTbVJ9sm+qTbVN9sm2qT7ZN9cm2qT7ZNtUn26b6ZNtUn2yb6pNtU32ybapPtk31ybapPtk21Sfbpvpk21SfbJvqk21TfbJtqk+2TfXJtqk+2TbVJ9um+mTbVJ9sm+qTbVN9ZttU+8/P9t8//b3+3+P/3394u7+ffw9yX/v/bZ0NWb3cOvo+f7l19OX/cuvoXwovt66i1tG/QV5uHf2D5eXW0b9u/sfWn/Vf6+f8pXX0T6GXW02/m6B1NkX2cqv0d9P5/aVV+rvp11bp76ZfW1fP/TrbWnu5teh302zF7eVW0+8mai3am2Zjci+3Fu1Ns5m6/6n187Pt/+7DP59f9uHZpt3Lrauo1fO7iVtNv5vg+3W2w/dya9HeNFv4e7d1Ngf47rf6bDvw5daif083WyV8uXUVtRbtTbNxxJdbi/am2eziy609e9M+G3R89Ztun60/vtzaszfts13Jl1tXUWvP3rTP5i1fbvX8buLWnr1pn61s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Hh6/t3zHx5996/Y26vj4s2/d3pocH3/2rdvbfePjz751ewttfPzZt25vS42PP/vW7a2e8fFn37q9fTI+/uxbt7ckxseffev2Nr/4+LNv3d46Fx9/9q3b29Hi48++dXuLV3z82bdub5uKjz/71u1tU/HxZ9+6vW0qPv7sW7e3TcXHn33r9rap+Pizb93eNhUff/at29um4uPPvnV721R8/N637n09/x3/fX85fu9bF4/f+9bF4/e+dfH4vW9dPH7vWxeP3/vWxeP3vnXx+L1vXTp+b5uKjz/71u1tU/HxZ9+6vW0qPv7sW7e3TcXHn33r9rap+Pizb93eNhUff/at29um4uPPvnV721R8/Nm3bm+bio8/+9btbVPx8Wffur1tKj7+7Fu3t03Fx5996/a2qfj4s2/d5jYVHn/2rdvcpsLjz751m9tUePzZt25zmwqPP/vWbW5T4fFn37rNbSo8/uxbt7lNhceffOveP81tKjz+5Fv3O/7kW/c7/uRb9zv+5Fv3O/7kW/c7/uRb9zv+5Fv3O/7kW/c7/uxbt7lNhceffes2t6nw+LNv3eY2FR5/9q3b3KbC48++dZvbVHj82bduc5sKjz/71m1uU+HxZ9+6zW0qPP7sW7e5TYXHn33rNrep8Pizb93mNhUef/at29ymwuPPvnWb21R4/Nm3bnObCo8/+9ZtblPh8Wffus1tKjz+7Fu3uU2Fx5996za3qfD4s2/d5jYVHn/2rdvcpsLjz751m9tUePzZt+5om+o7/uxbd7RN9R1/9q072qb6jj/71h1tU33Hn33rjrapvuPPvnVH21Tf8WffuqNtqu/4s2/d0TbVd/zZt+5om+o7/uxbd7RN9R1/9q072qb6jj/71h1tU33Hn33rjrapvuPPvnVH21Tf8WffuqNtqu/4s2/d0TbVd/zZt+5om+o7/uxbd7RN9R1/9q072qb6jj/71h1tU33Hn33rjrapvuPPvnVH21Tf8WffuqNtqu/4s2/d0TbVd/zRt+4226baZttU22ybapttU33/g7OPP/rW3WbbVNtsm2qbbVNts22qbbZNtc22qbbZNtU226baZttU22ybapttU22zbapttk21zbapttk21Tbbptpm21TbbJtqm21TbbNtqm22TbXNtqm22TbVNtum2mbbVNtsm2qbbVNts22qbbZNtc22qbbZNtU226baZttU22ybapttU22zbapttk21zbapttk21Tbbptpm21TbbJtqm21TbbNtqm22TbXNtqm22TbVNtum2mbbVNtsm2qbbVNts22qbbZNtc22qbbZNtU226baZttU22ybapttU22zbapttk21zbapttk21Tbbptpm21TbbJtqm21TbbNtqm22TbXNtqm22TbVNtum2mbbVNtsm2qbbVNts22qbbZNtc22qbbZNtU226baZttU22ybapttU22zbapttk21zbapttk21Tbbptpm21TbbJtqm21TbbNtqm22TbXNtqn22TbVPtum2mfbVPtsm2r/GX3r7rNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJvqmG1THbNtqmO2TXXMtqmOn9G37jHbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVEdvm+r777bbf//0+fz/x/+///D2nvu/B3mf4/+29oasFre2vs8Xt7a+/Be3tv6lsLi1glpb/wZZ3Nr6B8vi1ta/bv7H1p/6r3W/f2lt/VNocavpdxO09qbIFrdKfzfd5y+t0t9Nv7ZKfzf92lo592tva21xa9Dvpt6K2+JW0+8mag3am3pjcotbg/am3kzd/9S6/2zHv/vwz/7LPtzbtFvcWkGtnt9N3Gr6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D/n4s2/d3k4hH3/2rdtbFOTjz751e9t/fPzZt25vpY+PP/vW7e3p8fFn37q95Ts+/uxbt7dRx8effev21uT4+LNv3d7uGx9/9q3bW2jj40++dd+f3pYaH3/yrfsdf/Kt+x1/8q37HX/yrfsdf/Kt+x1/8q37HX/yrfsdf/Kt+x1/9q3bW+fi48++dXs7Wnz82bdub/GKjz/71u1tU/HxZ9+6vW0qPv7sW7e3TcXHn33r9rap+Pizb93eNhUff/at29um4uPPvnV721R8/Nm3bm+bio/f+9a9r+e/47/vL8fvfevi8Xvfunj83rcuHr/3rYvH733r4vF737p4/N63Lh6/961Lx+9tU/HxZ9+6vW0qPv7sW7e3TcXHn33r9rap+Pizb93eNhUff/at29um4uPPvnV721R8/Nm3bm+bio8/+9btbVPx8Wffur1tKj7+7Fu3t03Fx5996/a2qfj4s2/d3jYVH3/2rdvcpsLjz751m9tUePzZt25zmwqPP/vWbW5T4fFn37rNbSo8/uxbt7lNhceffes2t6nw+LNv3eY2FR5/9q3b3KbC48++dZvbVHj82bduc5sKjz/71m1uU+HxZ9+6zW0qPP7sW7e5TYXHn33rNrep8Pizb93mNhUef/at29ymwuOPvnW35jYVHn/0rbs1t6nw+KNv3e9/cPbxR9+6W3ObCo8/+tbdmttUePzZt25zmwqPP/vWbW5T4fFn37rNbSo8/uxbt7lNhceffes2t6nw+LNv3eY2FR5/9q3b3KbC48++dZvbVHj82bduc5sKjz/71m1uU+HxZ9+6zW0qPP7sW3e2TbXNtqm22TbVNtum2mbbVNtsm2qbbVNts22qbbZNtc22qbbZNtU226baZttU22ybapttU22zbapttk21zbapttk21Tbbptpm21TbbJtqm21TbbNtqm22TbXNtqm22TbVNtum2mbbVNtsm2qbbVNts22qbbZNtc22qbbZNtU226baZttU22ybapttU22zbapttk21zbapttk21Tbbptpm21TbbJtqm21TbbNtqm22TbXNtqm22TbVNtum2mbbVNtsm2qbbVNts22qbbZNtc22qbbZNtU226baZttU22ybapttU22zbapttk21zbapttk21Tbbptpn21T7bJtqn21T7bNtqv1n9K27z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbapjtk11zLapjtk21THbpjp+Rt+6x2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26aq2TZVzbaparZNVbNtqvoZfevWbJuqZttUNdumqtk2Vc22qWq2TVWzbaqabVPVbJuqZttUNdumqtk2Vc22qWq2TVW9barj52f7758+n///+P/3H97ec//3IO9z/N/W3pDV4tbW9/ni1taX/+LW1r8UFrdWUGvr3yCLW1v/YFnc2vrXzf/Y+lP/te73L62tfwotbjX9boLW3hTZ4lbp76b7/KVV+rvp11bp76ZfWyvnfu1trS1uDfrd1FtxW9xq+t1ErUF7U29MbnFr0N7Um6n7n1r3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73f9dvzWty4fv/Wty8dvfevy8Vvfunj83qokH7/1rcvHb33r8vFb37p8/Na3Lh9/9q3b21Tk48++dXvrh3z82bdub6eQjz/71u0tCvLxZ9+6ve0/Pv7sW7e30sfHn33r9vb0+Pizb93e8h0ff/at29uo4+PPvnV7a3J8/Nm3bm/3jY8/+9btLbTx8Wffur0tNT7+7Fu3t3rGx5996/b2yfj4s2/d3pIYH3/2rdvb/OLjz751e+tcfPzZt25vR4uPP/vW7S1e8fFn37q9bSo+/uxbt7dNxccffetuvW0qPv7oW3frbVPx8Uffut//4Ozjj751t942FR9/9K279bap+Pizb93eNhUfv/ete1/Pf8d/31+O3/vWxeP3vnXx+L1vXTx+71sXj9/71sXj97518fi9b108fu9bl47f26bi48++dXvbVHz82bdub5uKjz/71u1tU/HxZ9+6vW0qPv7sW7e3TcXHn33r9rap+Pizb93eNhUff/at29um4uPPvnV721R8/Nm3bm+bio8/+9btbVPx8Wffur1tKj7+7Fu3uU2Fx5996za3qfD4s2/d5jYVHn/2rdvcpsLjz751m9tUePzZt25zmwqPP/vWbW5T4fFn37rNbSo8/uxbt7lNhceffes2t6nw+LNv3eY2FR5/9q3b3KbC48++dZvbVHj82bduc5sKjz/71m1uU+HxZ9+6zW0qPP7sW7e5TYXHn33rNrep8Pizb93mNhUef/at29ymwuPPvnWb21R4/Nm3bnObCo8/+9ZtblPh8Wffus1tKjz+7Fu3uU2Fx5996za3qfD4s2/d5jYVHn/0rbs3t6nw+KNv3b25TYXHH33r7j+jb929uU2Fxx996+7NbSo8/uhbd29uU9Hxm9tUePzZt+5sm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21T7bJtqn21T7bNtqn22TbXPtqn22TbVPtum2mfbVPtsm2qfbVPts22qfbZNtc+2qfbZNtU+26baZ9tU+2ybap9tU+2zbap9tk21z7ap9tk21T7bptpn21THbJvqmG1THbNtqmO2TXX8jL51j9k21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk1Vs22qmm1T1WybqmbbVPUz+tat2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6p621THz8/23z99Pv//8f/vP7y95/7vQd7n+D+tZ2/IanFr6/t8cWvry39xa+tfCotbK6i19W+Qxa2tf7Asbm396+Z/bP2p/1r3+5fW1j+FFreafjdBa2+KbHGr9HfTff7SKv3d9Gur9HfTr62Vc7/2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x2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbapjtk11zLapjtk21THbpjpm21THbJvqmG1THbNtqmO2TXXMtqmO2TbVMdumOmbbVMdsm+qYbVMds22qY7ZNdcy2qY7ZNtUx26Y6ZttUx2yb6phtUx2zbaqabVPVbJuqZttUNdumqp/Rt27Ntqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpqrZNlXNtqlqtk1Vs22qmm1T1WybqmbbVDXbpjpn21TnbJvqnG1TnbNtqvNn9K17zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21dnbpjp+frb//unz+f+P/3//4e09938P8j7H/23tDVktbm19ny9ubX35L25t/UthcWsFtbb+DbK4tfUPlsWtrX/d/I+tP/Vf637/0tr6p9DiVtPvJmjtTZEt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qpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TZVzbaparZNVbNtqpptU9Vsm6pm21Q126aq2TbVOdumOmfbVOdsm+qcbVOdP6Nv3XO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TXbNtqmu2TXXNtqmu2TbV9TP61r1m21TXbJvqmm1TXbNtqmu2TXXNtqmu2TbVNdumumbbVNdsm+qabVNds22qa7ZNdc22qa7ZNtU126a6ZttU12yb6pptU12zbaprtk11zbaprtk21TXbprpm21TXbJvqmm1TXbNtqmu2TXXNtqmu2TbVNdumumbbVNdsm+qabVNds22qa7ZNdc22qa7ZNtU126a6ZttU12yb6pptU12zbaprtk11zbaprtk21TXbprpm21TXbJvqmm1TXbNtqmu2TXXNtqmu3jbV8fOz/fdPn8//f/z/+w9v77n/e5D3Of5va2/IanFr6/t8cWvry39xa+tfCotbK6i19W+Qxa2tf7Asbm396+Z/bP2p/1r3+5fW1j+FFreafjdBa2+KbHGr9HfTff7SKv3d9Gur9HfTr62Vc7/2ttYWtwb9buqtuC1uNf1uotagvak3Jre4NWhv6s3U/U+t+892/LsP/+y/7MO9TbvFrRXU6vndxK2m303w/drb4VvcGrQ39Rb+1rb25gDXfqv3tgMXtwb9d7reKuHi1gpqDdqbeuOIi1uD9qbe7OLi1py96e4NOi79prt764+LW3P2pru3K7m4tYJac/amuzdvubjV87uJW3P2pru3srm2tTfJubjVtDdRa877pru3DLq4tXK+6Xqbo4tbc/amu7dmurg1Z2+6ezupa1t7o6qLW3PeN929uda133S9bdfFrRXUGrQ39SZmF7cG7U298drFrZ7fTdjam8Vdu8H0NnQXt5r2Jmo17U3UWjnbWm/3d3Fr0N7UWxRe3Bq0N/W2ite29oaNF7cG7U29yeTFrTnvwu/eGPPab7recvPi1qC9qbcJvbg1aG/qrU2vbe1NUy9uDXoX3hu9XrvB9BayF7dWUKtpb6JW6d7027bWW/Ve3Bq0NwV54XeQF34HeeF3kBd+B3nhd5AXfgd54bfIC8dvOpEXzq1Be5PIC8dWkRfOrUF7k8gL59agd+EqLxw2GJUXTq057uWt8sKpVbo3/batWb3w31qDvPA7yAu/RV44twbtTSIvnFuD9iaVF06tQe/CRV44ftOJvHBsFXnh3Bq0N4m8cG4N2ptEXji3Br0LV3nhsMGovHBqDXIvVV74362PyAunbe0ReeHcmrM3PSIvnFsrqDVnb3pEXji35uxNj8oLp9acd+GPyAunb7pH5IVza87e9Ii8cG6toNacvekReeHcmvMu/FF54bDBqLxwaFV54dSa414+Ii8ctzWRF86tlfNNJ/LCuTVobxJ54dwatDeJvHBsVXnh1JrzLvwReeH4TSfywrm1glqD9iaRF86tQXuTyAvn1px34Y/KC4cNRuWFU2uOe/movHBqrZxtTeSFc2vQ3iTywrk1aG8SeeHYKvLCuTVob1J54dQa9C5c5IXjN53IC+fWoL1J5IVza9DeJPLCsVXkhXNr0LtwlRcOG4zKC6fWCmrNcS8fkReO25rIC+fWoL1J5IVjq8gL59agvUnkhXNr0N6k8sKpNehduMgLx286kRfOrUF7k8gLx1aRF86tQXuTyAvn1qB34SovHDYYlRdOrTnu5aPywqk15++sPCIvHFtFXjh+04m8cG4N2ptEXji3VlBr0N6k8sKpNehduMgLx286kRdOra/IC+fWnL3pFXnh3JqzN32ft0GtOe/CX5UX/vcG86q8cGrNcS9flRcOrSIvnLa1V+SFc2vO3vSKvHBuraDWnL3pFXnh3JqzN70qL5xac96FvyIvHL/pRF44twbtTSIvnFsrqDVobxJ54dya8y78VXnhsMGovHBoVXnh1JrjXr4iLxy3NZEXzq2V800n8sK5NWhvEnnh3Bq0N4m8cGxVeeHUmvMu/BV54fhNJ/LCubWCWoP2JpEXzq1Be5PIC+fWoHfhKi8cNhiVF06tOe7lq/LCqbVytjWRF86tQXuTyAvn1qC9SeSFY6vIC+fWoL1J5YVTa9C7cJEXjt90Ii+cW4P2JpEXzq1Be5PIC8dWkRfOrUHvwlVeOGwwKi+cWiuoNce9fEVeOG5rIi+cW4P2JpEXjq0iL5xbg/YmkRfOrUF7k8oLp9agd+EiLxy/6UReOLcG7U0iLxxbRV44twbtTSIvnFuD3oWrvHDYYFReOLUGuZcqL5xac/7OyivywqH1+hF54fBN97XG7E1fa8ze9LXG7E1fawW1xuxNX2vMu/CvNeZd+Ncaszd9rTF70/Uj8sK5NWZv+lpj9qavNWZv+lorqDXmXfjXGrM3fa0xe9PXGuNefq0x7uX1I/LCcVsTeeHcGrQ3ibxwbq2g1qC9SeSFc2vQ3qTywqk15l349SPywvGbTuSFc2vQ3iTywrm1glqD9iaRF86tMe/Cv9agvUnlhUOrygun1hj38muN+TsrX2vM31n5Wivnm07khXNr0N4k8sK5NWhvEnnh2Krywqk16F24yAvHbzqRF86tFdQatDeJvHBuDdqbRF44twa9C1d54bDBqLxwao1xL7/WGPfya62cbU3khXNr0N4k8sK5NWhvEnnh2Crywrk1aG9SeeHUGvQuXOSF4zedyAvn1qC9SeSFc2vQ3iTywrFV5IVza9C7cJUXDhuMygun1gpqjXEvv9aYv7Pytcb8nZWvNWhvEnnh2Crywrk1aG8SeeHcGrQ3qbxwag16Fy7ywvGbTuSFc2vQ3iTywql1E3nh3JqzN20iL5xbc96Ff6eL2WA2lRdOrTnu5abywqk15u+sfK05f2dlE3nh9E23ibxwbs3ZmzaRF86tFdSaszdtKi+cWnPehW8iLxy/6UReOLaKvHBuDdqbRF44twbtTSIvnFtz3oVvKi8cNhiVF06tOe7lpvLCoVXkheO2JvLCuTVobxJ54dxaQa1Be5PIC+fWoL1J5YVTa8678E3kheM3ncgL59agvUnkhXNrBbUG7U0iL5xbc96FbyovHDYYlRcOrSovnFpz3MtN5IXjtibywrm1cr7pRF44twbtTSIvnFuD9iaRF46tKi+cWoPehYu8cPymE3nh3FpBrUF7k8gL59agvUnkhXNr0LtwlRcOG4zKC6fWHPdyU3nh1Fo525rIC+fWoL1J5IVza9DeJPLCsVXkhXNr0N6k8sKpNehduMgLx286kRfOrUF7k8gL59agvUnkhWOryAvn1qB34SovHDYYlRdOrRXUGuReirxw3NZEXji3Bu1NIi+cWneRF86tOXvTLvLCuTVnb9p/Kqg15134LvLC6ZtuF3nh3JqzN+0iLxxbRV44t+bsTbvIC+fWnHfhu8oL/3uD2VVeOLXmuJe7ygun1py/s7KLvHBsFXnh+E0n8sK5NWhvEnnh3FpBrUF7k8oLp9acd+G7yAvHbzqRF46tIi+cW4P2JpEXzq1Be5PIC+fWnHfhu8oLhw1G5YVTa457uau8cGgVeeG4rYm8cG4N2ptEXji3VlBr0N4k8sK5NWhvUnnh1Br0LlzkheM3ncgL59agvUnkhXNrBbUG7U0iL5xbg96Fq7xw2GBUXji0qrxwas1xL3eRF47bmsgL59bK+aYTeeHcGrQ3ibxwbg3am0ReOLaqvHBqDXoXLvLC8ZtO5IVzawW1Bu1NIi+cW4P2JpEXzq1B78JVXjhsMCovnFpz3Mtd5YVTa+VsayIvnFuD9iaRF86tQXuTyAvHVpEXzq1Be5PKC6fWoHfhIi8cv+lEXji3Bu1NIi+cW4P2JpEXTq2HyAvn1px34YfKC/97gzlUXji1VlBrjnt5iLxw2tYOkRfOrTl70yHywrFV5IVza87edIi8cG7N2ZsOlRdOrTnvwg+RF47fdCIvnFtz9qZD5IVjq8gL59agvUnkhXNrzrvwQ+WFwwaj8sKpNce9PFReOLXm/J2VQ+SFY6vIC8dvOpEXzq1Be5PIC+fWCmoN2ptUXji15rwLP0ReOH7TibxwbBV54dwatDeJvHBuDdqbRF44t+a8Cz9UXjhsMCovnFpz3MtD5YVDq8gLx21N5IVza9DeJPLCubWCWoP2JpEXzq1Be5PKC6fWoHfhIi8cv+lEXji3Bu1NIi+cWyuoNWhvEnnh3Br0LlzlhcMGo/LCoVXlhVNrjnt5iLxw3NZEXji3Vs43ncgL59agvUnkhXNr0N4k8sKxVeWFU2vQu3CRF47fdCIvnFsrqDVobxJ54dwatDeJvHBuDXoXrvLCYYNReeHUGuReqrxwaq2cbU3khXNr0N4k8sK5NWhvEnnh1FoiL5xbc/amUnnh1JrzLrx+KuabrkReOLfm7E0l8sK5NWdvKpEXjq0iL5xbc96Fl8oL/3uDKZUXTq0V1JrjXpbIC6dtrUReOLfm7E0l8sKxVeSFc2vQ3iTywrk1aG9SeeHUmvMuvEReOH7Tibxwbg3am0ReOLaKvHBuDdqbRF44t+a8Cy+VFw4bjMoLp9Yc97JUXji15vydlRJ54dgq8sLxm07khXNr0N4k8sK5tYJag/YmlRdOrTnvwkvkheM3ncgLx1aRF86tQXuTyAvn1qC9SeSFc2vQu3CVFw4bjMoLp9Yc97JUXji0irxw3NZEXji3Bu1NIi+cWyuoNWhvEnnh3Bq0N6m8cGoNehcu8sLxm07khXNr0N4k8sK5tYJag/YmkRfOrUHvwlVeOGwwKi8cWlVeOLXmuJcl8sJxWxN54dxaOd90Ii+cW4P2JpEXzq1Be5PIC8dWlRdOrUHvwkVeOH7Tibxwbq2g1qC9SeSFc2vQ3iTywrk15134qfLC/95gTpUXTq057uWp8sKptWK2tVPkhXNrzt50irxwbs3Zm06RF46tIi+cW3P2plPlhVNrzrvwU+SF4zedyAvn1py96RR54dyaszedIi8cW0VeOLfmvAs/VV44bDAqL5xaK6g1x708RV44bmsiL5xbg/YmkReOrSIvnFuD9iaRF86tQXuTygun1px34afIC8dvOpEXzq1Be5PIC8dWkRfOrUF7k8gL59acd+GnyguHDUblhVNrjnt5qrxwas35OyunyAvHVpEXjt90Ii+cW4P2JpEXzq0V1Bq0N6m8cGoNehcu8sLxm07khWOryAvn1qC9SeSFc2vQ3iTywrk16F24yguHDUblhVNrjnt5qrxwaBV54bitibxwbg3am0ReOLdWUGvQ3iTywrk1aG9SeeHUGvQuXOSF4zedyAvn1qC9SeSFc2sFtQbtTSIvnFuD3oWrvHDYYFReOLSqvHBqDXIvRV44bmsiL5xbK+ebTuSFc2vQ3iTywrk1aG8SeeHUeqm8cGrNeRd+ibxw+qa7RF44t1ZQa87edIm8cG7N2ZsukRfOrTnvwi+VF/73BnOpvHBqzXEvL5UXTq0Vs61dIi+cW3P2pkvkhXNrzt50ibxwbBV54dwatDepvHBqzXkXfom8cPymE3nh3Bq0N4m8cG4N2ptEXji2irxwbs15F36pvHDYYFReOLVWUGuOe3mJvHDc1kReOLcG7U0iLxxbRV44twbtTSIvnFuD9iaVF06tOe/CL5EXjt90Ii+cW4P2JpEXjq0iL5xbg/YmkRfOrUHvwlVeOGwwKi+cWnPcy0vlhVNrzt9ZuUReOLaKvHD8phN54dwatDeJvHBuraDWoL1J5YVTa9C7cJEXjt90Ii8cW0VeOLcG7U0iL5xbg/YmkRfOrUHvwlVeOGwwKi+cWnPcy0vlhUOryAvHbU3khXNr0N4k8sK5tYJag/YmkRfOrUF7k8oLp9agd+EiLxy/6UReOLcG7U0iL5xbK6g1aG8SeeHcGvQuXOWFwwaj8sL/br1VXji15riXt8gLp23tFnnh3Fox33S3yAvn1py96RZ54dyaszfdIi8cW1VeOLXmvAu/RV44fdPdIi+cWyuoNWdvukVeOLfm7E23yAvn1px34bfKC4cNRuWFU2uOe3mrvHBqrZxtTeSFc2vQ3iTywrk1aG8SeeHYKvLCuTVob1J54dSa8y78Fnnh+E0n8sK5NWhvEnnh3Bq0N4m8cGwVeeHcmvMu/FZ54bDBqLxwaq2g1hz38hZ54bitibxwbg3am0ReOLaKvHBuDdqbRF44twbtTSovnFqD3oWLvHD8phN54dwatDeJvHBsFXnh3Bq0N4m8cG4Neheu8sJhg1F54dSa417eKi+cWnP+zsot8sKxVeSF4zedyAvn1qC9SeSFc2sFtQbtTSovnFqD3oWLvHD8phN54dgq8sK5NWhvEnnh3Bq0N4m8cG4Neheu8sJhg1F54dSa417eKi8cWkVeOG5rIi+cW4P2JpEXzq0V1Bq0N4m8cG4N2ptUXji15rwLf0ReOH3TPSIvnFtz9qZH5IVzawW15uxNj8gL59acd+GPygv/e4N5VF44tKq8cGrNcS8fkRdO29oj8sK5tXK+6UReOLfm7E2PyAvn1py96RF54diq8sKpNedd+CPywvGbTuSFc2sFtQbtTSIvnFuD9iaRF86tOe/CH5UXDhuMygun1hz38lF54dRaOduayAvn1qC9SeSFc2vQ3iTywrFV5IVza9DepPLCqTXnXfgj8sLxm07khXNr0N4k8sK5NWhvEnnh2Crywrk16F24yguHDUblhVNrBbXmuJePyAvHbU3khXNr0N4k8sKxVeSFc2vQ3iTywrk1aG9SeeHUGvQuXOSF4zedyAvn1qC9SeSFY6vIC+fWoL1J5IVza9C7cJUXDhuMygun1hz38lF54dSa83dWHpEXjq0iLxy/6UReOLcG7U0iL5xbK6g1aG9SeeHUGvQuXOSF4zedyAvHVpEXzq1Be5PIC+fWoL1J5IVza9C7cJUXDhuMygun1iD3UuWF/936irxw2tZekRfOrTl70yvywrm1glpz9qZX5IVza87e9Kq8cGrNeRf+irxw+qZ7RV44t+bsTa/IC+fWCmrN2ZtekRfOrTnvwl+VFw4bjMoLh1aVF06tOe7lK/LCcVsTeeHcWjnfdCIvnFuD9iaRF86tQXuTyAvHVpUXTq0578JfkReO33QiL5xbK6g1aG8SeeHcGrQ3ibxwbs15F/6qvHDYYFReOLXmuJevygun1srZ1kReOLcG7U0iL5xbg/YmkReOrSIvnFuD9iaVF06tQe/CRV44ftOJvHBuDdqbRF44twbtTSIvHFtFXji3Br0LV3nhsMGovHBqraDWHPfyFXnhuK2JvHBuDdqbRF44toq8cG4N2ptEXji3Bu1NKi+cWoPehYu8cPymE3nh3Bq0N4m8cGwVeeHcGrQ3ibxwbg16F67ywmGDUXnh1JrjXr4qL5xac/7OyivywrFV5IXjN53IC+fWoL1J5IVzawW1Bu1NKi+cWoPehYu8cPymE3nh0Hr/iLxwbo3Zm77WmL3pa43Zm77WCmqNeRf+tcbsTV9rzN70tca4l19rjHt5/4i8cNjWvtaYv7PytcbsTV9rzN70tVZQa8ze9LXG7E1fa8ze9LXGvAv/WmPehd8/Ii8cv+lEXji3Bu1NIi+cWyuoNWhvEnnh3BrzLvxrDdqbVF44tKq8cGqNcS+/1pi/s/K1xvydla+1cr7pRF44twbtTSIvnFuD9iaRF46tKi+cWmPehX+tQXuTyAvn1gpqDdqbRF44twbtTSIvnFuD3oWLvHBuDfrvdCIvnFuDfjfleOFfa9DvpuZe+PHe//7Ttf0ygzYnwPH4vX/d4PF7/2Ch4ze3t+s8/jv+ff/9f+fP9e+c8dzPL6W9f4GsLO39+2Nlae9fHytLK6a09y+PlaW9f3esLO39E2Vlae9fMytLe//wWVja3NleWRrzG6m5sb2yNOY3UnNfe2VpzG+k5rb2ytKY30jNXe2VpTG/kZqb2itLY34jNfe0V5bG/EZqbmmvLI35jdTc0V5ZGvMbqbmhvbI05jdScz97ZWnMb6TmdvbK0pjfSM3d7JWlMb+RmpvZK0tjfiM197JXlqb8RtqaW9krS1N+I23NneyVpSm/kb6zxZSm/EbamvvYK0tTfiNtzW3slaUxv5Gau9grS2N+IzU3sVeWxvxGau5hryyN+Y3U3MJeWRrzG6m5g72yNOY3UnMDe2VpzG+k5v71ytKY30jN7euVpTG/kZq71ytLY34jNTevV5bG/EZq7l2vLI35jdTcul5ZGvMbqblzvbI05jdSc+N6ZWnMb6TmvvXK0pjfSM1t65WlMb+RmrvWK0tjfiM1N61Xlsb8RmruWa8sjfmN1NyyXlka8xupuWO9sjTmN1Jzw3placxvpOZ+9crSmN9Ize3qlaUxv5Gai9grS2N+I8U421uMs73FONtbjLO9xTjbW4yzvcU421uMs73FONtbjLO9xTjbW4yzvcU421uMs73FONtbjLO9xTjbW4yzvcU421uMs73FONtbjLO9xTjbW4yzvcU421uMs73FONtbjLO9xTjbW4yzvcU421uMs73FONtbjLO9xTjbW4yzvcU421uMs73FONtbjLO9xzjbe4yzvcc423uMs73/VExpym+kPcbZ3mOc7T3G2d5jnO09xtneY5ztPcbZ3mOc7T3G2d5jnO09xtneY5ztPcbZ3mOc7T3G2d5jnO09xtneY5ztPcbZ3mOc7T3G2d5jnO09xtneY5ztPcbZ3mOc7T3G2d5jnO09xtneY5ztvbuzfdR/pc/2y/F7//A53vu/42/nL8fv/WsGj9/7Jwodv7ldjcfv/WMCj9/7FwIev/e1j8fvfZfj8Xtf0Hj83rcuHn/2rdvcWMbjz751m2vIePzZt25ztxiPP/vWbS4M4/Fn37rNLWA8/uxbt7nai8effes293Xx+LNv3eYSLh5/9q3b3KzF48++dZvrsnj82bducwcWjz/71m0utuLxZ9+6zW1VPP7sW7e5gorHn33rNvdK8fizb93msigef/at29wAxePPvnWba514/Nm3bnNXE4/f+tb9Pkf+/ae/nze/Hb/1rcvHb33r8vFb37p8/Na3Lh6/tyrJx2996/LxW9+6fPzWty4fv/Wty8effev2NhX5+LNv3d76IR9/9K179HYK+fijb92jtyjIxx996x4/o2/dozfox8cffesevek9Pv7oW/fojeTh8XvLd3z82bdub6OOjz/71u2tyfHxZ9+6vd03Pv7sW7e30MbHn33r9rbU+Pizb93e6hkff/at29sn4+PPvnV7S2J8/Nm3bm/zi48/+9btrXPx8Wffur0dLT7+7Fu3t3jFx5996/a2qfj4s2/d3jYVH3/2rdvbpuLjz751e9tUfPzZt25vm4qPP/vW7W1T8fFn37q9bSo+/uxbt7dNxcfvfeve1/Pf8d/3l+P3vnXx+L1vXTx+71sXj9/71sXj97518fi9b108fu9bF4/f+9al4/e2qfj4s2/d3jYVH3/2rdvbpuLjz751e9tUfPzZt25vm4qPP/vW7W1T8fFn37q9bSo+/uxbt7dNxceffev2tqn4+LNv3d42FR9/9q3b26bi48++dXvbVHz82bdub5uKjz/71m1uU+HxZ9+6zW0qPP7sW7e5TYXHn33rNrep8Pizb93mNhUef/at29ymwuPPvnWb21R4/NG3bjW3qfD4o2/dam5T4fFH37r1M/rWreY2FR5/9K1bzW0qPP7oW7ea21R0/OY2FR5/9q3b3KbC48++dZvbVHj82bduc5sKjz/71m1uU+HxZ9+6zW0qPP7sW7e5TYXHn33rNrep8Pizb93mNhUef/at29ymwuPPvnWb21R4/Nm3bnObCo8/+9ZtblPh8Wffus1tKjz+7Fu3uU2Fx5996za3qfD4s2/d5jYVHn/2rdvcpsLjz751m9tUePzZt25zmwqPP/vWbW5T4fFn37qzbaqabVPVbJuqZttUNdumqtk2Vc22qWq2TVWzbaqabVPVbJuqZttUNdumqtk2Vc22qWq2TVWzbaqabVPVbJuqZttUNdumqtk2Vc22qWq2TVWzbaqabVPVbJuqZttUNdumqtk2Vc22qWq2TVWzbaqabVPVbJuqZttUNdumqtk2Vc22qWq2TVWzbaqabVPVbJuqZttUNdumqtk2Vc22qWq2TXXOtqnO2TbVOdumOmfbVOfP6Fv3nG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TnbJvqnG1TnbNtqnO2TXXOtqnO2TbVOdumOmfbVOdsm+qcbVOds22qc7ZNdc62qc7ZNtU526Y6Z9tU52yb6pxtU52zbapztk11zrapztk21Tnbpjpn21TXbJvqmm1TXbNtqmu2TXX9jL51r9k21TXbprpm21TXbJvqmm1TXbNtqmu2TXXNtqmu2TbVNdumumbbVNdsm+qabVNds22qa7ZNdc22qa7ZNtU126a6ZttU12yb6pptU12zbaprtk11zbaprtk21TXbprpm21TXbJvqmm1TXbNtqmu2TXXNtqmu2TbVNdumumbbVNdsm+qabVNds22qa7ZNdc22qa7ZNtU126a6ZttU12yb6pptU12zbaprtk11zbaprtk21TXbprpm21TXbJvqmm1TXbNtqmu2TXXNtqmu2TbVNdumumbbVNdsm+qabVNds22qa7ZNdc22qa7ZNtU126a6ZttU12yb6pptU12zbaprtk11zbaprtk21TXbprpm21TXbJvqmm1TXbNtqmu2TXXNtqmu2TbVNdumumbbVNdsm+qabVNds22qa7ZNdc22qa7ZNtU126a6ZttU12yb6pptU12zbaprtk11z7ap7tk21T3bprpn21T3z+hb955tU92zbap7tk11z7ap7tk21T3bprpn21T3bJvqnm1T3bNtqnu2TXXPtqnu2TbVPdumumfbVPdsm+qebVPds22qe7ZNdc+2qe7ZNtU926a6Z9tU92yb6p5tU92zbap7tk11z7ap7tk21T3bprpn21T3bJvqnm1T3bNtqru3TXX8/Gz//dPn8/8f///+w9t77v8e5H2O/9vaG7Ja3Nr6Pl/c2vryX9za+pfC4tYKam39G2Rxa+sf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6zFztl+PmbP9esyc7ddj5my/HjNn+/WYOduvx8zZfj1mzvbbMXO2346Zs/12zJztt2PmbL/9Wsd80lMa6e2YOdtvx8zZfjtmzvbbMXO2346Zs/12zJztt2PmbL8dM2f77Zg522/HzNl+233O9tv680k/Xx4cf+/wefv6/ef4L+8Pjr93zYzH3ztRpuNvPrt6PP7eMTEef+9CGI+/92t/PP7e7/Lx+Hu/oMfj7/3WHY9/77fu5jOWx+Pf+627+TTk8fj3futuPrd4PP6937qbTxgej3/vt+7ms4DH49/7rbv51N7x+Pd+624+X3c8/r3fuptPwh2Pf++37uYza8fj3/utu/l02fH4937rbj4Hdjz+vd+6m09sHY9/77fu5rNVx+Pf+627+RTU8fj3futuPq90PP6937qbTxYdj3/vt+7mM0DH49/7rbv5tM7x+Pd+624+V3M8/tZv3bVe/zrHP/7PB3+OtPcEzPn4W79119frXw/P+nr/9eD4W7915+Nv/dZ9//Xy1x8Svv96ffCXhHtPlZyPv/Vb9/3X15/jv7w9eHj2nv84H3/rt+58/K3fuvPxt37rzsff+q07H3/rt+58/K3fuvPxN3/rDsffe07hfPx7v3X3nig4H//eb929Z//Nx7/3W3fvKX3z8e/91t17nt58/Hu/dfeefDcf/95v3b1n1M3Hv/dbd+9pcvPx7/3W3Xvu23z8e791957QNh//1m/dtfcstfn4t37rrr2nns3Hv/Vbd/269Vt37T10bD7+rd+6a+/xYPPxb/3WXXsP8hqPv/d0rvn4937r7j1Haz7+vd+6e0+8mo9/77fu3rOp5uPf+62792yq+fj3fuvuPZtqPv6937p7z6aaj3/vt+7es6nm49/7rbv3bKr5+Pd+6+49m2o+/r3funvPppqPf++37t6zqebj3/utu/dsqvn4937r7j2baj7+vd+6e8+men/7/Gve9/vb18eD4+/91p2Ov/dsqvd//I/08fd+6476e791x+Pv/dYdH56937qj/t5v3fH4e791x4dn77fuqL/5W3fSv/dbd+/ZVKP+3rOpZv3N37qT/uZv3Un/3m/dvWdTzQ/P5m/dSf/eb929Z1PND8+937p7z6aaj7/5W3d4ePaeTTXr3/utu/dsqvnhufddd+/ZVPPxN3/rTg/PvX/DvPlsqun4m8+mmh6ezWdTjfr3futuPptqfHg2f+tO+vd+624+m2p8eO591918NtV4/M3fusPDs/lsqkl/89lU4/Hv/RvmzWdTjfr3futuPptqfHjufdfdfDbVePx7/4Z589lUk/7ms6nG49/7N8ybz6Ya9e/91t18NtX48Nz7rrv5bKrx+Pf+DfPms6lG/Vu/dd83n001PDzvm8+mGvVv/dZ933w21fjwbP7WnfRv/dZ933w21fjw3Pqu+775bKrx+Lf+DfP75rOpJv3NZ1ONx7/1b5jfN59NNerf+627+Wyq8eG59V33ffPZVOPxb/0b5vfNZ1NN+pvPphqPf+vfML9vPptq1L/3W3fz2VTjw3Pvu+7ms6nG49/6N8zvm8+mGvXv/dbdfDbV9PBsPptq1L/3W3fz2VTjw7P5W3fSv/dbd/PZVOPDc++77r1nU73vPptqeHh2n0016N97NtX77rOppofn3nfde8+met99NtX08Nz7rnvv2VTv955N9X7v2VTvu8+mmo5/798w7z6batK/91t399lU08Nz77vuvWdTve8+m2p6eO591733bKr33WdTDQ/P7rOpJv17v3V3n001PTybv3Un/Xu/dXefTTU9PPe+6+4+m2rSv/dbd/fZVNPx733XvfdsqvfdZ1NNx9/8rTs9PPd+6+4+m2o6/r3vuveeTfW++2yq4fi7z6YaHp57z6Z633021XT8e9917z2b6n332VTT8e991733bKr33WdTTce/919T3Xs21fvus6mm49/7r6nuPZvq/d6zqd7vPZvq/d6zqd7vPZvq/d6zqd7vPZvq496zqT7uPZvq496zqT7uPZvq49fmb91J/9Zv3Y97z6b6uPdsqo97z6b6uPdsqo97z6b6uPdsqo97z6b6uPdsqo97z6b6uPdsqo97z6b6uPdsqo97z6b6uPdsqo97z6b6uPdsqo97z6b6uPdsqo97z6b62Hw21e9fn38d//fro+Pv/dYdj7/3W3c8/t5v3fH4e791f7/++U/39/r9fx9/89lU4/H3fuuOx9/7rTsef++37u/fH3+O//X14Ph7v3XH42/+1p2Ov/lb9+/jf/56f3D8zd+60/E3f+tOx9/8rTscf/PZVJ+v68/x18uD4+/91h2Pv/dbdzz+3m/d8fh7v3XH4+/91h2Pv/dbdzz+3m/d8fj3vutuPptqOv7ms6nG429+152Of++77uazqcbj7/3WHY+/+V13Ov5t7roPr+qbz6Yaj3+bu+7j49/7rrv5bKrx+Ju/dafjb/7WnY5/77vu5rOpxuPf+667+Wyq8fj3vutuPptqPP7eb93p+JvPphqPf++77uazqcbjb37XnY6/91t3PP6977qbz6Yaj7/5XXc6/uZ33en4t7nrPryqbz6bajz+be66j49/77vu5rOpxuNv/tadjn+bv6Z6fPx733U3n001Hv/ed93NZ1NNx998NtV4/Hv/NdXms6nG49/7N8ybz6aa7rqbz6Yaj3/vfzm0+Wyq8fj3vutuPptqOP7vzWdTjce/9b8c+r35bKrhqv5789lU4/E3f+tOx7/1Xff35rOpxuPf+l8O/d58NtV4/FvfdX9vPptqPP6t77q/N59NNR7/1nfd35vPphqPf+u/pvq9+Wyq8fi3vuv+3nw21Xj8W//Lod+bz6Yaj3/vu+7ms6nG49/6Xw793nw21Xj8W0/J+L37bKrp+Lf+l0O/d59NNdx1d59NNRx/99lU0/Fv/S+Hfm8+m2rq/c1nU43H3/utOx7/3nfdzWdTjce/9V9T/d58NtV4/Hv/hnnz2VTTXXfz2VTj8W/9L4d+bz6bajz+3m/d6a67+Wyq8fi3/pdDvzefTTUe/9ZTMn7vPptqOP7us6mm49/7rrv7bKrp+Lf+l0O/d59NNR3/3nfdzWdTjce/911389lU4/HvfdfdfDbVePx7/zXV5rOpxuPf+667+Wyq8fi3/pdDvzefTTUe/9533c1nU43Hv/e/HNp8NtV4/FtPyfi9+2yq6fj3/pdDu8+mGu66u8+mmo5/7385tPtsqun4977rbj6bajr+5rOpxuPf+667+Wyq8fj3/muqzWdTjce/92+Yd59N9fny5/iPkm332VTT8Td/607H3/ytOxx/89lUX29/FpN/vf/bXff//uHPj9d//ezn788Hn3TvF/SVn3Tvd/mVn3Tv1/6Vn3Qd80n3jokrP+ne3XHlJ907Ua78pHvXzJWfdO/wue6Tfm4+SezKT3pKI31uPp/syk96SiN9/lrHfNJTGulz81lqV37SUxrpc/MJbVd+0mMaafO5b1d+0mMaafNpcld+0mMaafMZdVd+0mMaafPJd1d+0mMaafN5eld+0mMaafMpfVd+0mMaafPZf1d+0mMaafOJgld+0mMaafM5hVd+0mMaafPph1d+0mMaafOZild+0mMaafNJjVd+0mMaafP5j1d+0mMaafOpkld+0mMaafNZlVd+0mMaafMJmFd+0mMaafO5mld+0mMaafNpnVd+0mMaafMZoFd+0mMaafPJold+0mMaafN5pVd+0mMaafMpqFd+0mMaafPZqld+0mMaafOJrVd+0mMaafM5sFd+0mMaafPpsld+0mMaafOZtVd+0mMaafNJuFd+0mMaafP5uld+0mMaafOpvVd+0mMaafNZwFd+0mMaafMJw1d+0mMaafO5xVd+0mMaafNpyFd+0mMaafMZy1d+0mMaafPJzVd+0mMaafN50Fd+0mMaafMp01d+0mMaafPZ1Vd+0mMaafOJ2Fd+0mMa6Zg525/HzNn+PGbO9ucxc7Y/j5mz/XnMnO3PY+Zsfx4zZ/vzmDnbn8fM2f46Zs721zFztr+OmbP9dcyc7a9f65hPekojfR0zZ/vrmDnbX8fM2f46Zs721zFztr+OmbP9dcyc7a9j5mx/HTNn++uYOdtfx8zZ/jpmzvbXMXO2v46Zs/11zJztr2PmbH8dM2f765g521/HzNn+OmbO9tcxc7a/jpmz/XXMnO2vY+Zsfx0zZ/vrmDnbX8fM2f46Zs721zFztr+OmbP9dcyc7a9j5mx/HTNn++uYOdtfx8zZ/jpmzvbXMXO2v46Zs/11zJztr2PmbH8dM2f765g521/HzNn+OmbO9tcxc7a/jpmz/XXMnO2vY+Zsfx0zZ/vrmDnbX8fM2f46Zs721zFztr+OmbP9dcyc7a9j5mx/HTNn++uYOdtfx8zZ/jpmzvbX7nO2X9afT/rx8uD4e4fP5+df/9vvn19fD46/d82Mx987Uabjbz67ejz+3jExHn/vQhiPv/drfzz+3u/y8fh7v6DH4+/91h2Pf++37uYzlsfj3/utu/k05PH4937rbj63eDz+vd+6m08YHo9/77fu5rOAx+Pf+627+dTe8fj3futuPl93PP6937qbT8Idj3/vt+7mM2vH49/7rbv5dNnx+Pd+624+B3Y8/o3fuuvXr80nto7Hv/Fb95/Hv/Fb95/Hv/Fb95/Hv/Fb95/Hv/Fb95/Hv/Fb95/Hv/Fb95/Hv/Fb95/Hv/dbd/MZoOPx7/3W3Xxa53j8e791N5+rOR5/8z+8+vz91/H/8fvMB8ff/K+ppuNv/db9+PX21zk+fn29Pjj+1m/d+fhbv3XH4+89VXI+/tZv3fn4W7915+Nv/dadj7/1W3c+/tZv3fn4W7915+Pf+6279/TD+fj3fuvuPadwPv6937p7TxScj3/vt+7es//m49/7rbv3lL75+Pd+6+49T28+/r3funtPvpuPf++37t4z6ubj3/utu/c0ufn4937r7j33bT7+vd+6e09om49/77fu3rPU5uPf+62799Sz+fj3fuvuPZ9sPv6937p7TxKbj3/vt+7eM7/m49/7rbv3dK75+Pd+6+49R2s+/r3funtPvJqPf++37t6zqebj3/utu/dsqvn4937r7j2baj7+vd+6e8+mmo9/77fu3rOp5uPf+62792yq+fj3fuvuPZtqPv6937p7z6aaj3/vt+7es6k+Xn/9Of7ry8eD4+/91h2Pv/dbdzz+3m/d8fh7v3Vf33//Of7no/90937rjsff+6379uvjr+O/vb09OP7eb93p2d97NtV8/L3fuuPx7/3W3Xs21fjNs/dsqvn4e791py/OvWdTzc/+5m/d6fh7v3XH49/6rfuy92yq6ZvnZe/ZVPPx937rDl+cL3vPppqf/c3futPxb33Xfdl7NtV8/FvfdV/2nk01H3/vt+70xbn3bKrx2d97NtV8/FvfdV/2nk01H3/zt+7wzbP3bKr5+Hu/dccvzlvfdV82n001Hv/ed93NZ1ONx7/3XXfz2VTj8fd+605fnJvPphqf/XvfdTefTTUe/95v3c1nU43fPJu/dYfjbz6bavri3Hw21fTsbz6bajz+ve+6m8+mGo9/77vu5rOpxuPv/dYdvzjvfdfdfDbVdPzNZ1ONx7/3W3fz2VTTN8/ms6nG4+/91p2+ODefTTU++/e+624+m2o8/r3fupvPppq+eTafTTUef++37vTFuflsqunZ33w21Xj8vd+64/Hv/dbdfDbV+M1z77+m2nw21fjFee+77uazqcbj3/uuu/lsqvH4977rbj6bajz+rf/l0Mvms6nGZ//ed93NZ1ONx7/3W3fz2VTTN8/ms6nG49/7Xw5tPptqfPY3f+tOx7/3XXfz2VTj8e991918NtV4/Hv/y6HNZ1NNz/7ms6nG49/7rnvv2VQvu8+mGr55dp9NNR3/3v9yaPfZVNOzf++77r1nU73cezbVy+6zqYZvnt1nU03Hv/e/HNp9NtX07N/7rnvv2VQv955N9bL7bKrpm+fWf031uvlsquGL83X32VT97L9uPptqPP6t77qvv2791n3dfTbV9M1z67+met18NtX4xXnru+7r5rOppuPfezbV671nU73uPptq+ObZfTbVdPy937rTF+fus6mmZ//Wd93Xe8+mer33bKrX3WdTDd88u8+mmo5/63859Lr7bKrh2d98NtV4/L3fuuPx7/3W3X021fTNc+u/pnrdfDbV+MV577vu5rOpxuPf+65779lUr7vPphq+eXafTTUd/9b/cuh199lU07N/77vuvWdTvd57NtXr7rOphm+e3WdTTce/9b8cet19NtX07G/+1p2Of++77r1nU73uPptq+ua59V9TvW4+m2r64tx9NtXw7G8+m2o8/r3vuveeTfW6+2yq4Ztn99lU0/Fv/S+HXnefTTU9+/e+6957NtXrvWdTve4+m2r45tl9NtV0/Fv/y6HX3WdTTc/+ve+6955N9Xrv2VSvu8+mmr557v3XVJvPppq+OHefTTU8+5vPphqPf++77r1nU73uPptq+ua5919TbT6bavzivPddd/PZVNPx7z2b6vXes6led59NNXzz7D6bajr+3m/d6Ytz99lU07N/77vuvWdTvd57NtXr7rOphm+e3WdTTce/978c2n021fDsbz6bajz+3m/d8fj3fuvuPptq+ua5919TbT6bavzivPVd923z2VTj8W99132792yqt91nU/U3z9uvzd+60/Fv/S+H3nafTTU9+7e+677dezbV271nU73tPptq+ObZfTbVdPxb/8uht91nU03P/uZv3en4t77rvt17NtXb7rOppm+eW/811dvms6mmL87dZ1MNz/7ms6nG49/7rnvv2VRvu8+mGr55dp9NNR3/1v9y6G332VTTs3/vu+69Z1O93Xs21dvus6mGb57dZ1NNx7/1vxx623021fTs3/uue+/ZVG/3nk31tvtsqumb59Z/TfW2+Wyq6Ytz99lUw7O/+Wyq8fj3vuveezbV2+6zqaZvnlv/NdXb5rOpxi/Oe991N59NNR3/3rOp3u49m+pt99lUwzfP7rOppuPv/dadvjh3n001Pfv3vuveezbV271nU73tPptq+ObZfTbVdPxb/8uht91nUw3P/uazqcbj7/3WHY9/77fu7rOppm+ee/811eazqcYvznvfdTefTTUe/9533XvPpnrbfTbV8M2z+2yq6fj3/pdDu8+mmp79e9917z2b6u3es6nedp9NNXzz7D6bajr+vf/l0O6zqaZnf/O37nT8e9917z2b6m332VTTN8+9/5pq89lU0xfn7rOphmd/89lU4/Hvfde992yqt91nUw3fPLvPppqOf+9/ObT7bKrp2b/3Xffes6nWvWdTrd1nU/U3z9p9NtV0/Fv/y6F//H/3fvZvfddd955Nte49m2rtPptq+ua59V9Trc1nU01fnLvPphqe/c1nU43Hv/Vdd917NtXafTbV9M1z67+mWpvPphq/OG99112bz6aajn/v2VTr3rOp1u6zqYZvnt1nU03H3/utO31x7j6banr2733XvfdsqnXv2VRr99lUwzfP7rOppuPf+l8Ord1nUw3P/uazqcbj7/3WHY9/77fu7rOppm+eW/811dp8NtX4xXnvu+7ms6nG49/7rnvv2VRr99lUwzfP7rOppuPf+l8Ord1nU03P/r3vuveeTbXuPZtq7T6bavjm2X021XT8W//LobX7bKrp2d/8rTsd/9533XvPplq7z6aavnnu/ddUm8+mmr44d59NNTz7m8+mGo9/77vuvWdTrd1nUw3fPLvPppqOf+t/ObR2n001Pfv3vuveezbVuvdsqrX7bKrhm2f32VTT8e/9L4c2n0318bH+Ov7H//nTf46/91t3PP7eb93x+Hu/dcfj7/3W/f3r66/j/377+j+P/3//8Ofr+1+f9fP19+fwwx+vf/3sv//ov1j2fpt/F8vms7S+jWXv+vg2lr2r5ttY9q6lb2NZWB6x7F1338aydzV+G8veNfptLCr3IYvKfcSy+ey6b2NRuQ9ZVO5DFpX7kGVhecSich+yqNyHLCr3IYvKfciich+wvG8+K/LbWFTuQxaV+5BF5T5kWVgesajchywq9yGLyn3IonIfsqjcRyybz2b9NhaV+5BF5T5kUbkPWRaWRywq9yGLyn3IonIfsqjchywq9xHL5rOQv41F5T5kUbkPWVTuQ5aF5RGLyn3IonIfsqjchywq9yGLyn3Esvns8W9jUbkPWVTuQxaV+5BlYXnEonIfsqjchywq9yGLyn3IonIfsWw+6//bWFTuQxaV+5BF5T5kWVgesajchywq9yGLyn3IonIfsqjcRyyb79b4NhaV+5BF5f5+xKJyH7IsLI9YVO5DFpX7kEXlPmRRuQ9ZVO4jls132Xwbi8p9yKJyH7Ko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P7ePfm4f/dw++rl99HP62D84+Ojn9tHP7aOf22fxSR/93D76uX30c/vo5/bRz+lj/+Dgo5/bRz+3j35un8UnffRz++jn9tHP7aOf20c/p4/9g4OPfm4f/dw++rl9Fp/00c/to5/bRz+3j35uH/2cPvYPDj76uX30c/vo5/ZZfNJHP7ePfm4f/dw++rl99HP62D84+Ojn9tHP7aOf22fxSR/93D76uX30c/vo5/bRz+lj/+Dgo5/bRz+3j35un8UnffRz++jn9tHP7aOf20c/p4/9g4OPfm4f/dw++rl9Fp/00c/to5/bRz+3j35uH/1cPh/2Dw4++rl99HP76Of2WXzSRz+3j35uH/3cPvq5ffRz+tg/OPjo5/bRz+2jn9tn8Ukf/dw++rl99HP76Of20c/pY//g4KOf20c/t49+bp/FJ330c/vo5/bRz+2jn9tHP6eP/YODj35uH/3cPvq5fRaf9NHP7aOf20c/t49+bh/9nD72Dw4++rl99HP76Of2WXzSRz+3j35uH/3cPvq5ffRz+tg/OPjo5/bRz+2jn9tn8Ukf/dw++rl99HP76Of20c/pY//g4KOf20c/t49+bp/FJ330c/vo5/bRz+2jn9tHP6eP/YODj35uH/3cPvq5fRaf9NHP7aOf20c/t49+bh/9nD72Dw4++rl99HP76Of2WXzSRz+3j35uH/3cPif38+v6ePvXz7++vv96HX7+759en19/fvb14y/Kk1P7n5OA/lD+4//V8L+jPHqr4cWUJwf8xZQnt/7FlCdfCy6mXCivojz5snEx5cn3kospT77CXEx59G3nWkq3nYsofx+9g/JiSredyyjddi6jdNu5jHKhvIrSbecySredyyjddi6jdNu5jNJt5yrKozeGXkzptnMZpdvOZZRuO5dRLpRXUbrtXEbptnMZpdvOZZRuO5dRuu1cRXn0fteLKd12LqM8+bazfv39V9Hr5fXr337+Xz4nX2Ge8Vkn+7yst799Pt/+y/8UT76XPPOonXzZeMbn5BvEMz4nXwue8Tm59a/9Kj96F+0Tj9rRu2if8VHl7aPK22f5Kr/qq1yV96OmyttHlbePKm+fo6t89jl6be21r7qjN9w+86ip8vZR5e2z+KSP1G6fo1P72ledKu9HTZW3jypPn6OX4T7jI7XbR2q3z9GpfWkKHL0395lHTZW3j1+At4/U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9tHP7aOf08f+wcFHP7ePfm4f/dw+i0/66Of20c/to5/bRz+3j35OH/sHBx/93D76uX30c/ssPumjn9tHP7ePfm4f/dw++jl97B8cfPRz++jn9tHP7bP4pI9+bh/93D76uX30c/vo5/J5tX9w8NHP7aOf20c/t8/ikz76uX30c/vo5/bRz+2jn9PH/sHBRz+3j35uH/3cPotP+ujn9tHP7aOf20c/t49+Th/7Bwcf/dw++rl99HP7LD7po5/bRz+3j35uH/3cPvo5fewfHHz0c/vo5/bRz+2z+KSPfm4f/dw++rl99HP76Of0sX9w8NHP7aOf20c/t8/ikz76uX30c/vo5/bRz+2jn9PH/sHBRz+3j35uH/3cPotP+ujn9tHP7aOf20c/t49+Th/7Bwcf/dw++rl99HP7LD7po5/bRz+3j35uH/3cPvo5fewfHHz0c/vo5/bRz+2z+KSPfm4f/dw++rl99HP76Of0sX9w8NHP7aOf20c/t8/ikz76uX30c/vo5/bRz+2jn9PH/sHBRz+3j35uH/3cPotP+ujn9tHP7aOf20c/t49+Lp83+wcHH/3cPvq5ffRz+yw+6aOf20c/t49+bh/93D76OX3sHxx89HP76Of20c/ts/ikj35uH/3cPvq5ffRz++jn9LF/cPDRz+2jn9tHP7fP4pM++rl99HP76Of20c/to5/Tx/7BwUc/t49+bh/93D6LT/ro5/bRz+2jn9tHP7ePfk4f+wcHH/3cPvq5ffRz+yw+6aOf20c/t49+bh/93D76OX3sHxx89HP76Of20c/ts/ikj35uH/3cPvq5ffRz++jn9LF/cPDRz+2jn9tHP7fP4pM++rl99HP76Of20c/to5/Tx/7BwUc/t49+bh/93D7/H/b+KLetJF2jbbsk0b9ksUG3/124WThpeWfCZ8bycRTIUow3PxAJa1SYnLGK0Dd80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/lM/YHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDR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bh/93D76OX2efHD48T76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl9nnxF+PE++rl99HP76Of2GT7po5/bRz+3j35uH/3cPvo5fZ58GvjxPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX2efMT38T76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++rl87k8+t/t4H/3cPvq5ffRz+wyf9NHP7aOf20c/t49+bh/9nD5PPoz7eB/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+J++2XvLRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pc/J65CUf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c//7/7vL282B9c+Ojn9tHP7aOf22f4pI9+bh/93D76uX30c/vo5/SxP7jw0c/to5/bRz+3z/BJH/3cPvq5ffRz++jn9tHP6WN/cOGjn9tHP7ePfm6f4ZM++rl99HP76Of20c/to5/Tx/7gwkc/t49+bh/93D7DJ330c/vo5/bRz+2jn9tHP6eP/cGFj35uH/3cPvq5fYZP+ujn9tHP7aOf20c/t49+Th/7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/l82p/cOGjn9tHP7ePfm6f4ZM++rl99HP76Of20c/to5/Tx/7gwkc/t49+bh/93D7DJ330c/vo5/bRz+2jn9tHP6eP/cGFj35uH/3cPvq5fYZP+ujn9tHP7aOf20c/t49+Th/7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/l8/N/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+nj/3BhY9+bh/93D76uX2GT/ro5/bRz+2jn9tHP7ePfi6fb/YHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+Yz9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uD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uX30c/vo5/bRz+Xz/tzDuE/go5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf0+fk3dZLPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX1OXo+85KOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+Xz3f7gwkc/t49+bh/93D7DJ330c/vo5/bRz+2jn9tHP6eP/cGFj35uH/3cPvq5fYZP+ujn9tHP7aOf20c/t49+Th/7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j34unw/7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76uXzu9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+nj/3BhY9+bh/93D76uX2GT/ro5/bRz+2jn9tHP7ePfk4f+4MLH/3cPvq5ffRz+wyf9NHP7aOf20c/t49+bh/9nD72Bxc++rl99HP76Of2GT7po5/bRz+3j35uH/3cPvo5fewPLnz0c/vo5/bRz+0zfNJHP7ePfm4f/dw++rl99HP4vL/YH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+Xzan9w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of2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DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/l8/N/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+nj/3BhY9+bh/93D76uX2GT/ro5/bRz+2jn9tHP7ePfi6fb/YHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+Yz9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30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nnwa+PE++rl99HP76Of2GT7po5/bRz+3j35uH/3cPvo5fZ587/fxPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX2efJn38T76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl9nnxD9/E++rl99HP76Of2GT7po5/bRz+3j35uH/3cPvo5fZ58wvbxPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX1O3hS95KOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn8vnfvKy4SUf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OXw+XuwPLnz0c/vo5/bRz+0zfNJHP7ePfm4f/dw++rl99HP62B9c+Ojn9tHP7aOf22f4pI9+bh/93D76uX30c/vo5/SxP7jw0c/to5/bRz+3z/BJH/3cPvq5ffRz++jn9tHP6WN/cOGjn9tHP7ePfm6f4ZM++rl99HP76Of20c/to5/Tx/7gwkc/t49+bh/93D7DJ330c/vo5/bRz+2jn9tHP6eP/cGFj35uH/3cPvq5fYZP+ujn9tHP7aOf20c/t49+Th/7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn8nm1P7jw0c/to5/bRz+3z/BJH/3cPvq5ffRz++jn9tHP6WN/cOGjn9tHP7ePfm6f4ZM++rl99HP76Of20c/to5/Tx/7gwkc/t49+bh/93D7DJ330c/vo5/bRz+2jn9tHP6eP/cGFj35uH/3cPvq5fYZP+ujn9tHP7aOf20c/t49+Th/7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn8vnZn9w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+Xzzf7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76uXzG/uDCRz+3j35uH/3cPsMnffRz++jn9tHP7aOf20c/p4/9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+nj/3BhY9+bh/93D76uX2GT/ro5/bRz+2jn9tHP7ePfi6fN/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+nj/3BhY9+bh/93D76uX2GT/ro5/bRz+2jn9tHP7ePfk4f+4MLH/3cPvq5ffRz+wyf9NHP7aOf20c/t49+bh/9nD72Bxc++rl99HP76Of2GT7po5/bRz+3j35uH/3cPvq5fN7tDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0OXp/8DbvP/7zt9vby23x+p+vno/752tv7z8oT07t2/vt/ZPy/f/89/+/UZ5c5ZspTw74zZSDchflydeCzZQn3yA2U5582dhMefK9ZDPlyVeYvZRHr0VupnTb2UbptrON0m1nG+Wg3EXptrON0m1nG6XbzjZKt51tlG47uyiP3vbcTOm2s43SbWcbpdvONspBuYvSbWcbpdvONkq3nW2UbjvbKN12dlEevcS6mdJt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bh/93D76uX30c/vo5/J5tT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+nj/3BhY9+bh/93D76uX2GT/ro5/bRz+2jn9tHP7ePfk4f+4MLH/3cPvq5ffRz+wyf9NHP7aOf20c/t49+bh/9nD72Bxc++rl99HP76Of2GT7po5/bRz+3j35uH/3cPvo5fewPLnz0c/vo5/bRz+0zfNJHP7ePfm4f/dw++rl99HP62B9c+Ojn9tHP7aOf22f4pI9+bh/93D76uX30c/vo5/SxP7jw0c/to5/bRz+3z/BJH/3cPvq5ffRz++jn9tHP6WN/cOGjn9tHP7ePfm6f4ZM++rl99HP76Of20c/to5/L52Z/cOGjn9tHP7ePfm6f4ZM++rl99HP76Of20c/to5/Tx/7gwkc/t49+bh/93D7DJ330c/vo5/bRz+2jn9tHP6eP/cGFj35uH/3cPvq5fYZP+ujn9tHP7aOf20c/t49+Th/7gwsf/dw++rl99HP7DJ/00c/to5/bRz+3j35uH/2cPvYHFz76uX30c/vo5/YZPumjn9tHP7ePfm4f/dw++jl97A8ufPRz++jn9tHP7TN80kc/t49+bh/93D76uX30c/rYH1z46Of20c/to5/bZ/ikj35uH/3cPvq5ffRz++jn9LE/uPDRz+2jn9tHP7fP8Ekf/dw++rl99HP76Of20c/pY39w4aOf20c/t49+bp/hkz76uX30c/vo5/bRz+2jn9PH/uDCRz///9JHP7ePfm6f4ZM++rl99HP76Of20c/to5/L55v9wYWPfm4f/dw++rl9hk/66Of20c/to5/bRz+3j35OH/uDCx/93D76uX30c/sMn/TRz+2jn9tHP7ePfm4f/Zw+9gcXPvq5ffRz++jn9hk+6aOf20c/t49+bh/93D76OX3sDy589HP76Of20c/tM3zSRz+3j35uH/3cPvq5ffRz+tgfXPjo5/bRz+2jn9tn+KSPfm4f/dw++rl99HP76Of0sT+48NHP7aOf20c/t8/wSR/93D76uX30c/vo5/bRz+ljf3Dho5/bRz+3j35un+GTPvq5ffRz++jn9tHP7aOf08f+4MJHP7ePfm4f/dw+wyd99HP76Of20c/to5/bRz+nj/3BhY9+bh/93D76uX2GT/ro5/bRz+2jn9tHP7ePfk4f+4MLH/3cPvq5ffRz+wyf9NHP7aOf20c/t49+bp//P3t3m6s5bm1buksSxQ+p/x27igtHOI0jcG7DROZacxD1r8pwcdB5UtTafB/t8/Nsf+r+/qDYn31+nu/PPj/P92efn+f7U/f+TPdnn5/n+7PPz/P92efn+f7s8/N8f/b5ebo/+/uDYn/2+Xm+P/v8PN+ffX6e70/d+zPdn31+nu/PPj/P92efn+f7s8/P8/3Z5+fp/uzvD4r92efn+f7s8/N8f/b5eb4/de/PdH/2+Xm+P/v8PN+ffX6e788+P8/3Z5+fp/uzvz8o9mefn+f7s8/P8/3Z5+f5/tS9P9P92efn+f7s8/N8f/b5eb4/+/w83599fp7uz/7+oNiffX6e788+P8/3Z5+f5/tT9/5M92efn+f7s8/P8/3Z5+f5/uzz83x/9vl5uj/7+4Nif/b5eb4/+/w83599fp7vT937M92ffX6e788+P8/3Z5+f5/uzz8/z/dnn5+n+7O8Piv3Z5+f5/uzz83x/9vl5vj917890f/b5eb4/+/w83599fp7vzz4/z/dnn5+n+7O/Pyj2Z5+f5/uzz8/z/dnn5/n+1L0/0/3Z5+f5/uzz83x/9vl5vj/7/Dzfn31+nu7P/v6g2J99fp7vzz4/z/dnn5/n+1P3/kz3Z5+f5/uzz8/z/dnn5/n+7PPzfH/2+Xm6P/v7g2J/9vl5vj/7/Dzfn31+nu9P3fsz3Z99fp7vzz4/z/dnn5/n+7PPz/P92efn2f60/f1BsT/7/Dzfn31+nu/PPj/P96fu/Znuzz4/z/dnn5/n+7PPz/P92efn+f7s8/N0f/b3B8X+7PPzfH/2+Xm+P/v8PN+fuvdnuj/7/Dzfn31+nu/PPj/P92efn+f7s8/P0/3Z3x8U+7PPz/P92efn+f7s8/N8f+ren+n+7PPzfH/2+Xm+P/v8PN+ffX6e788+P0/3Z39/UOzPPj/P92efn+f7s8/P8/2pe3+m+7PPz/P92efn+f7s8/N8f/b5eb4/+/w83Z/9/UGxP/v8PN+ffX6e788+P8/3p+79me7PPj/P92efn+f7s8/P8/3Z5+f5/uzz83R/9vcHxf7s8/N8f/b5eb4/+/w835+692e6P/v8PN+ffX6e788+P8/3Z5+f5/uzz8/T/dnfHxT7s8/P8/3Z5+f5/uzz83x/6t6f6f7s8/N8f/b5eb4/+/w83599fp7vzz4/T/dnf39Q7M8+P8/3Z5+f5/uzz8/z/al7f6b7s8/P8/3Z5+f5/uzz83x/9vl5vj/7/Dzdn/39QbE/+/w83599fp7vzz4/z/en7v2Z7s8+P8/3Z5+f5/uzz8/z/dnn5/n+7PPzdH/29wfF/uzz83x/9vl5vj/7/Dzfn7r3Z7o/+/w83599fp7vzz4/z/dnn5/n+7PPz7P96fv7g2J/9vl5vj/7/Dzfn31+nu9P3fsz3Z99fp7vzz4/z/dnn5/n+7PPz/P92efn6f7s7w+K/dnn5/n+7PPzfH/2+Xm+P3Xvz3R/9vl5vj/7/Dzfn31+nu/PPj/P92efn6f7s78/KPZnn5/n+7PPz/P92efn+f7UvT/T/dnn5/n+7PPzfH/2+Xm+P/v8PN+ffX6e7s/+/qDYn31+nu/PPj/P92efn+f7U/f+TPdnn5/n+7PPz/P92efn+f7s8/N8f/b5ebo/+/uDYn/2+Xm+P/v8PN+ffX6e70/d+zPdn31+nu/PPj/P92efn+f7s8/P8/3Z5+fp/uzvD4r92efn+f7s8/N8f/b5eb4/de/PdH/2+Xm+P/v8PN+ffX6e788+P8/3Z5+fp/uzvz8o9mefn+f7s8/P8/3Z5+f5/tS9P9P92efn+f7s8/N8f/b5eb4/+/w83599fp7uz/7+oNiffX6e788+P8/3Z5+f5/tT9/5M92efn+f7s8/P8/3Z5+f5/uzz83x/9vl5uj/7+4Nif/b5eb4/+/w83599fp7vT937M92ffX6e788+P8/3Z5+f5/uzz8/z/dnn5+n+7O8Piv3Z5+f5/uzz83x/9vl5vj917890f/b5eb4/+/w83599fp7vzz4/z/dnn59n+zP29wfF/uzz83x/9vl5vj/7/Dzfn7r3Z7o/+/w83599fp7vzz4/z/dnn5/n+7PPz9P92d8fFPuzz8/z/dnn5/n+7PPzfH/q3p/p/uzz83x/9vl5vj/7/Dzfn31+nu/PPj9P92d/f1Dszz4/z/dnn5/n+7PPz/P9qXt/pvuzz8/z/dnn5/n+7PPzfH/2+Xm+P/v8PN2f/f1BsT/7/Dzfn31+nu/PPj/P96fu/Znuzz4/z/dnn5/n+7PPz/P92efn+f7s8/N0f/b3B8X+7PPzfH/2+Xm+P/v8PN+fuvdnuj/7/Dzfn31+nu/PPj/P92efn+f7s8/P0/3Z3x8U+7PPz/P92efn+f7s8/N8f+ren+n+7PPzfH/2+Xm+P/v8PN+ffX6e788+P0/3Z39/UOzPPj/P92efn+f7s8/P8/2pe3+m+7PPz/P92efn+f7s8/N8f/b5eb4/+/w83Z/9/UGxP/v8PN+ffX6e788+P8/3p+79me7PPj/P92efn+f7s8/P8/3Z5+f5/uzz83R/9vcHxf7s8/N8f/b5eb4/+/w835+692e6P/v8PN+ffX6e788+P8/3Z5+f5/uzz8/T/dnfHxT7s8/P8/3Z5+f5/uzz83x/6t6f6f7s8/N8f/b5eb4/+/w83599fp7vzz4/z/bn3t8fFPuzz8/z/dnn5/n+7PPzfH/q3p/p/uzz83x/9vl5vj/7/Dzfn31+nu/PPj9P92d/f1Dszz4/z/dnn5/n+7PPz/P9qXt/pvuzz8/z/dnn5/n+7PPzfH/2+Xm+P/v8PN2f/f1BsT/7/Dzfn31+nu/PPj/P96fu/Znuzz4/z/dnn5/n+7PPz/P92efn+f7s8/N0f/b3B8X+7PPzfH/2+Xm+P/v8PN+fuvdnuj/7/Dzfn31+nu/PPj/P92efn+f7s8/P0/3Z3x8U+7PPz/P92efn+f7s8/N8f+ren+n+7PPzfH/2+Xm+P/v8PN+ffX6e788+P0/3Z39/UOzPPj/P92efn+f7s8/P8/2pe3+m+7PPz/P92efn+f7s8/N8f/b5eb4/+/w83Z/9/UGxP/v8PN+ffX6e788+P8/3p+79me7PPj/P92efn+f7s8/P8/3Z5+f5/uzz83R/9vcHxf7s8/N8f/b5eb4/+/w835+692e6P/v8PN+ffX6e788+P8/3Z5+f5/uzz8/T/dnfHxT7s8/P8/3Z5+f5/uzz83x/6t6f6f7s8/N8f/b5eb4/+/w83599fp7vzz4/T/dnf39Q7M8+P8/3Z5+f5/uzz8/z/al7f6b7s8/P8/3Z5+f5/uzz83x/9vl5vj/7/Dzbn2d/f1Dszz4/z/dnn5/n+7PPz/P9qXt/pvuzz8/z/dnn5/n+7PPzfH/2+Xm+P/v8PN2f/f1BsT/k83Op/fq9P6UdRfzn//2frvfz5z9b+u+tJB+1Sy/9z1b23v7HrSSfyhdvZd1buWor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0utP/vwN7l/p9Sd//gb3r/T6kz9/g/tXZfT7z/r/+t/9Z/3Bn79y/cGfv3L9wZ+/cv3Bn79y/cGfv3L9wZ+/cv3Bn79q/cH9K73+4M9fuf7kz9/g/pVef/Lnb3D/Sq8/+fM3uH+l15/8+Rvcv5LrD+5f6fUnf/4G96/0+pM/f4P7V3r9yZ+/wf0rvf7kz9/g/pVef/Lnb3D/Sq8/+fM3uH+l15/8+Rvcv9LrT/78je5fyfUnf/5G96/k+pM/f6P7V3L9yZ+/0f0ruf7kz9/o/pVcf/Lnb3T/Sq4/+fM3un8l15/8+Rvdv5LrT/78je5fyfUnf/5G96/k+pM/f6P7V3L9yZ+/0f0ruf7kz9/o/pVcf/Lnb3T/Sq4/+fM3un8l15/8+Rvdv5LrT/78je5fyfUnf/5G96/k+pM/f6P7V3L9yZ+/0f0ruf7kz9/o/pVcf/Lnb3T/Sq4/9/O3Rvev5PpzP39rdP9Krj/387ceuZ+/Nbp/Jdef+/lbo/tXcv25n781un+l1h/dv5LrT/78je5fyfUnf/5G96/k+pM/f6P7V3L9yZ+/0f0ruf7kz9/o/pVcf/Lnb3L/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevanL/qib3r2py/6om969qcv+qJvevWnL/qiX3r1py/6ol96/akfv525L7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7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4P6VXn/y529w/0qvP/nzN7p/Jdef/Pkb3b+S60/+/I3uX8n1J3/+Rvev5PqTP3+j+1dy/cmfv9H9K7n+5M/f6P6VXH/y5290/0quP/nzN7p/Jdef/Pkb3b+S60/+/I3uX8n1J3/+Rvev5PqTP3+j+1dy/cmfv9H9K7n+5M/f6P6VXH/y5290/0quP/nzN7p/Jdef/Pkb3b+S60/+/I3uX8n1J3/+Rvev5PqTP3+j+1dy/cmfv9H9K7n+5M/f6P6VXH/y5290/0quP/nzN7p/Jdef/Pkb3b+S60/+/I3uX8n1J3/+Rvev5PqTP3+j+1dy/cmfv9H9K7n+5M/f6P6VXH/y5290/0quP/fzt0X3r+T6cz9/W3L/qiX3r9qR+/nbkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1ctuX/VkvtXLbl/1ZL7Vy25f9WS+1c9uX/Vk/tXPbl/1ZP7V/3I/fztyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9q57cv+rJ/aue3L/qyf2rnty/6sn9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Sq4/+fM3un8l15/8+Rvdv5LrT/78je5fyfUnf/5G96/k+pM/f6P7V3L9yZ+/0f0ruf7kz9/o/pVcf/Lnb3T/Sq4/+fM3un8l15/8+Rvdv5LrT/78je5fyfUnf/5G96/k+pM/f6P7V3L9yZ+/0f0ruf7kz9/o/pVcf/Lnb3T/Sq4/+fM3un8l15/8+Zvcv2rJ/auW3L9qyf2rlty/asn9q5bcv2rJ/auW3L9qyf2rlty/asn9q5bcv2rJ/auW3L9qyf2rlty/asn9q57cv+rJ/aue3L/qyf2rfuR+/vbk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+VU/uX/Xk/lVP7l/15P5VT+5f9eT+1UjuX43k/tVI7l+N5P7VOHI/f0dy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPevRnL/aiT3r0Zy/2ok969Gcv9qJPev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Pn/4/Tvcv+Lzh9+/w/0rPn/4/Tvcv8LzD/ev+Pzh9+9w/4rPH37/Dvev+Pzh9+9w/4rPH37/Dvev+Pzh9+9w/4rPH37/Dvev+Pzh9+9w/4rPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPH37/Tvev8Pzh9+90/wrPn33/3tP9Kzx/9v17T/ev8PzZ9+/9y75/7+n+FZ4/+/69p/tXeP7s+/ee7l/R+af7V3j+8Pt3un+F5w+/f6f7V3j+8Pt3un+F5w+/f6f7V3j+8Pt3un+F5w+/f8P9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/usP9qzvcv7rD/as73L+6w/2rO9y/esL9qyfcv3rC/asn3L96ftn37xPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+1RPuXz3h/tUT7l894f7VE+5fPeH+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2f7Ve/7w+zfbv3rPH37/ZvtX7/nD799s/+o9f/j9m+1fvecPv3+z/av3/OH3b7Z/9Z4//P7N9q/e84ffv9n+1Xv+8Ps32796zx9+/2b7V+/5w+/fbP/qPX/4/ZvtX73nD79/s/2r9/zh92+2f/WeP/z+zfav3vOH37/Z/tV7/vD7N9u/es8ffv9m+1fv+cPv32z/6j1/+P2b7V+95w+/f7P9q/f84fdvtn/1nj/8/s32r97zh9+/2f7Ve/7w+zfbv3rPH37/ZvtX7/nD799s/+o9f/j9m+1fvecPv3+z/av3/OH3b7Z/9Z4//P7N9q/e84ffv9n+1Xv+8Ps32796zx9+/2b7V+/5w+/fbP/qPX/4/ZvtX73nD79/s/2r9/zh92+2f/WeP/z+zfav3vOH37/Z/tV7/vD7N9u/es8ffv9m+1fv+cPv32z/6j1/+P2b7V+958++f5dw/2oJ96+WcP9qCfevll/2/buE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V0u4f7WE+1dLuH+1hPtXS7h/tYT7V2u4f7WG+1druH+1hvtX6y/7/l3D/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXcv1rD/as13L9aw/2rNdy/WsP9qzXc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OO/H5w+/f4dDfHz+8Pt3OJnH5w+/f4fjdnz+8Pt3OEPH5w+/f4eDcXz+8Pt3OO3G5w+/f4cjbHz+8Pt3OJfG5w+/f4fDZnz+8Pt3OEHG5w+/f4djYXz+8Pt3OOvF5w+/f4cDXHz+8Pt3OJXF5w+/f4f7V3z+8Pt3uH/F5w+/f4f7V3z+8Pt3uH/F5w+/f4f7V3z+8Pt3uH/F5w+/f4f7V3z+8Pt3uH+1Xuf93/n/98/+7/zD7188//D7F88//P7F8w+/f/H8w+9fPP/w+xfPP/z+pfMP96/4/MPvXzx/+P073L/i84ffv8P9Kz5/+P073L/i84ffv8P9Kzz/cP+Kzx9+/w73r/j84ffvcP+Kzx9+/w73r/j84ffvcP+Kzx9+/w73r/j84ffvcP+Kzx9+/w73r/j84ffvdP8Kzx9+/073r/D80ffv/pvuX+H5o+/f9/zR9+97/uj79z1/9P37nj/6/n3PH33/vuePvn/f80ffv+/5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/f6f4Vnj/8/p3uX+H5w+/fbP/qPX/4/ZvtX73nD79/s/2r9/zh92+2f/WeP/z+zfav3vOH37/Z/tV7/vD7N9u/es8ffv9m+1fv+cPv32z/6j1/+P2b7V+95w+/f7P9q/f84fdvtn/1nj/8/s32r97zh9+/2f7Ve/7w+zfbv3rPH37/ZvtX7/nD799s/+o9f/j9m+1fvecPv3+z/av3/Nn37xLuXy3h/tUS7l8t4f7V8su+f5dw/2oJ96+WcP9qCfevlnD/agn3r5Zw/2oJ96+WcP9qCfevlnD/agn3r5Zw/2oJ96+WcP9qCfevlnD/agn3r5Zw/2oJ96+WcP9qCfevlnD/agn3r5Zw/2oJ96+WcP9qCfevlnD/agn3r5Zw/2oJ96+WcP9qCfevlnD/agn3r5Zw/2oJ96+WcP9qCfevlnD/agn3r5Zw/2oJ96+WcP9qCfevlnD/agn3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UD/5/L2O9aX/auu7/r//8azn1z896zXBH4/69bd//dP/d13YuVofuy7k+4WPXRfyfcjHrgv5/uZj16Xndbm9LuT7sY9dF/J93seuC/n+8WPXhXxf+rHrkvvdu+tS2Tl2H7suud+9vy65372/Lrnfvb8uPa/L7XXJ/e79dcn97v11yf3u/XXJ/e79dcn97u11YedGfuy65H73/rrkfvf+uuR+9/669Lwut9cl97v31yX3u/fXJfe799cl97v31yX3u7fXhZ3T+rHrkvvd++uS+93765L73fvr0vO63F6X3O/eX5fc795fl9zv3l+X3O/eX5fc795eF3Yu8seuS+53769L7nfvr0vud++vS8/rcntdcr97f11yv3t/XXK/e39dcr97f11yv3t7Xdg55B+7Lrnfvb8uud+9vy65372/Lj2vy+11yf3u/XXJ/e79dcn97v11yf3u/XXJ/e7tdWHn/n/suuR+9/665H73/rrkfvf+uvS8LrfXJfe799cl97v31yX3u/fXJfe799cl97u314X9dzY+dl1yv3t/XXK/e39dcr97f116Xpfb65L73fvrkvvd++uS+93765L73fvrkvvd2+vC/rs2H7suud+9vy65372/Lrnfvb8uPa/L7XXJ/e79dcn97v11yf3u/XXJ/e79dcn97u11Yf8dqY9dl9zv3l+X3O/eX5fc795fl57X5fa65H73/rrkfvf+uuR+9/665H73/rrkfvf2uuTvq/2P65L73fvrkvvd++uS+93769Lzutxel9zv3l+X3O/eX5fc795fl9zv3l+X3O/eXZeWv6/2P65L7nfvr0vud++vS+53769Lz+tye11yv3t/XXK/e39dcr97f11yv3t/XXK/e3td8vfV/sd1yf3u/XXJ/e79dcn97v116Xldbq9L7nfvr0vud++vS+53769L7nfvr0vud2+vS/6+2v+4Lrnfvb8uud+9vy65372/Lj2vy+11yf3u/XXJ/e79dcn97v11yf3u/XXJ/e7tdcnfV/sf1yX3u/fXJfe799cl97v316Xndbm9Lrnfvb8uud+9vy65372/Lrnfvb8uud+9vS75+2r/47rkfvf+uuR+9/665H73/rr0vC631yX3u/fXJfe799cl97v31yX3u/fXJfe7t9clf1/tf1yX3O/eX5fc795fl9zv3l+Xntfl9rrkfvf+uuR+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ZPA1Jxdfc3LxNScXX3Ny8TUnH37X8vbjzdecXHzNycXXnFx8zcnF15xMvuZk8jUnk685mXzNyfPvWsI7bvI1J5OvOZl8zcnka04mX3Oy+JqTxdecLL7mZPE1J8+/a4k/3nzNyeJrThZfc7L4mpNF15zMg645mQddczIPuuZkHnTNyTw638ebrjmZB11zMg+65mQedM3JPOiak1nompNZ6JqTWeiak1nompP5/LuW8I4rdM3JLHTNySx0zcksdM3JLHTNyax0zcmsdM3JrHTNyax0zcn88O9a3n686ZqTWemak1npmpP5/LuWry9Kv/76dRi5k7ToJD3/ruV3Se3u4/38u5ZY0uOr9zzfi8C87pbK59+1/C5p9TtJne/jffJJGnwf74tP0uS74xbdHdcPuo93L3ySKt3H+/l3LbGkTnfHPf+uJb7jNqze43hLGucFJNU5v4Krq5x3ki4+SfN5SfUtqd4dB3a8a/l/l9Tv7rgd71r+qaTr11U67iQVPkmV7rO0413L3Z+lzhfcySdp8H2WLr7P0uQLbtFJGgfdZ2kUus/SqHzBNT5Jne+zdPJ9lgZfcBefJL699+Dbe198e++Lb+998e29L76999X5guPbe198e++Lb+998e29L7699+Tbe0++vffk23tPvr337HyfJb699+Tbe0++vffk23tPvr334tt7L7699+Lbey++vffqfMHx7b0X39578e29F9/ee9HtvddBt/deB93eex10e+910O2910G3914H3d57HXR773XQ7b3XQbf3Xgfd3nsVur33KnR771Xo9t6r0O29V+l8wdHtvVeh23uvQrf3XoVu770K39678u29K9/eu/LtvSvf3rt2vs8S39678u29K9/eu/LtvSvf3rvx7b0b39678e29G9/eu3W+4Pj23o1v79349t6Nb+/d+PbenW/v3fn23p1v79359t69832W+PbenW/v3fn23nzvWi6+dy0X37uWi+9dy8X3ruXie9dy8b1rufjetVx871ouvnctF9+7lovvXcvF967l4nvXcvG9a7n43rVcfO9aLr53LRffu5aL713Lxfeu5eJ713LxvWu5+N61XHzvWi6+dy0X37uWi+9dy8X3ruXie9dy8b1rufjetVx871ouvnctF9+7lovvXcvF967l4nvXcvG9a7n43rVcfO9aLr53LRffu5aL713Lxfeu5eJ713LxvWu5+N61XHzvWi6+dy0X37uWi+5dy3rQvWv5ksS2935JYtt7vySx7b1fktj23i9JbHvvlyS2vfdLEtve+yWJbe/9ksS2964H3buWL0lse++XJLa990sS2977JYlt7/2SxLb3fkli23u/JLHtvV+S2PbeL0l8e2+6dy1fkvj23nTvWr4k8e296d61fEni23vTvWv5ksS396Z71/IliW/vTfeu5UsS396b7l3LlyS+vTfdu5YvSXx7b7p3LV+S+PbedO9aviTx7b3p3rV8SeLbe9O9a/mSxLf3pnvX8iWJb+9N967lSxLf3pvuXcuXJL69N927li9JfHtvunctX5L49t5071q+JPHtvenetXxJ4tt7071r+ZLEt/eme9fyJYlv7033ruVLEt/em+5dy5ckvr033buWL0l8e2+6dy1fkvj23nTvWr4k8e296d61fEni23vTvWv5ksS396Z71/IliW/vTfeu5UsS396b7l3LlyS+vTfdu5YvSXx7b7p3LV+S+PbedO9aviTx7b3p3rV8SeLbe9O9a/mSxLf3pnvX8iWJb+9N967lSxLf3pvuXcuXJL69N927li9JdHvvwveuZeF717LwvWtZ+N61LAfd3rvwvWtZ+N61LHzvWha+dy0L37uWhe9dy8L3rmXhe9ey8L1rWfjetSx871oWvnctC9+7loXvXcvC965l4XvXsvC9a1n43rUsfO9aFr53LQvfu5aF713LwveuZeF717LwvWtZ+N61LHzvWha+dy0L37uWhe9dy8L3rmXhe9ey8L1rWfjetSx871oWvnctC9+7loXvXcvC965l4XvXsvC9a1n43rUsfO9aFr53LQvfu5bl8Xct2+v7tq9/+rXNvpNU+CTVj0o67yQ1Pkn9eUn1LanfLQKPv2v5DyQNPkkXn6SnV+/W+vz6p9u57iStT0oad3fc4+9att7W1z/d+7yTVPgk1ecl9V+S7j5Lj79r+RdJ5+1nqfNJOvkkDT5Jj6/e56877jzvdpWPv2v5DyQtOkmPv2v5DyQ9vnqf7xPKa+ped5Iqn6THV+9xff11G/PuhPL4u5b/QNLJJ2nwSXp89R5zvCWt20Vg8kladJIef9fyH0gqz3+8j1+S7pbKx9+1/AeSHl+9r/N9jruuv55Q/v7X53F8DenzqL/+uo4v/V1c/ymuf4jrv8T1T3H9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tirQKmWIq5QhrlKGuEoZ4ipliKuUYdLN4CUcd87/+jsKgcqqQHVVoLYqUF8UaNIt6P8iUFwViFYFSqsC8apAq5SBVikDrVIGWqUMtEoZ0iplSKuUIa1ShrRKGdIqZUirlCGtUoa0ShnSKmVIq5SBVykDr1IGXqUMvEoZeJUy8Cpl4FXKwKuUgVcpA69ShrxKGfIqZcirlCGvUoa8ShnyrHnU+iNQD8+BJt1mVR4P9//6uwiBJmldbvUIVGITAk3SutIfgSprD8anUPjPx29/Pr79fnMPT7oVanpazWZa3WRak156MT2taDMtsplWspkW20wr20zLpspXmypfbap8tanyzabKN5sq32yqfLOp8s2myjebKt9sqnyzqfLNpso3myrfbap8t6ny3abKd5sq322qfLep8t2mynebKt9tqnw3qfI5mFT5HEyqfA4mVT4Hkyqfg0mVz8GkyudgUuVzMKnyOZhU+Rxsqny0qfLRpspHmyofbap8tKny0abKR5sqH22qfLSp8tGmypNNlSebKk82VZ5sqjzZVHmyqfJkU+XJpsqTTZUnmyqfbKp8sqnyyabKJ5sqn2yqfLKp8smmyiebKs97dCvG+63EKaYgpLVnJj7uB05UqpDWgpn4ESivClRWBZp0/tf6KVD/+/O/2Uyrm0xr1tMes9OKNtMim2klm2mxzbSyzbSKzbRsqny2qfLZpsoXmypfbKp8sanyxabKF5sqX2yqfLGp8sWmyhebKl9sqny1qfLVpspXmypfbap8tany1abKV5sqX22qfLWp8tWmyjebKt9sqnyzqfLNpso3myrfbKp8s6nyzabKN5sq32yqfLep8t2mynebKt9tqny3qfLdpsp3myrfbap8t6ny3aTKl2BS5UswqfIlmFT5EkyqfAkmVb4EkypfgkmVL8GkypdgUuVLsKny0abKR5sqH22qfLSp8tGmykebKh9tqny0qfLRpsrTHt1SbnAutGcmKjc4F1owEz8ClVWB6qpAk87/RnQEapmVz3PJ6c/HubQm/KLdZFqznpeanVa0mRbZTCvZTIt3pHWT+fLn47c/BW2d9bzU7LSKzbSqzbSazbS6ybQ42Ewr2kyLbKaVbKZlU+XZpsqzTZVnmyrPNlWebap8tqny2abKZ5sqn22qfLap8tmmymebKp9tqny2qfLZpsoXmypfbKp8sanyxabK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","brillig_names":["get_notes_internal","get_collapse_hints","decompose_hint","get_key_validation_request","notify_nullified_note","split_60_bits","build_msg_block_iter","pad_msg_block","attach_len_to_msg_block","__mul_impl","__compute_quadratic_expression_with_borrow_flags","build_msg_block_iter","get_public_data_witness","lt_32_hint","lte_16_hint","directive_invert","directive_integer_quotient"]},{"name":"redeem_entitlement","is_unconstrained":false,"custom_attributes":["private"],"abi":{"error_types":{"1756802668388977958":{"error_kind":"fmtstring","item_types":[],"length":17}},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}}},{"name":"public_teardown_call_request","type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":"","brillig_names":["get_notes_internal","get_collapse_hints","decompose_hint","get_key_validation_request","notify_nullified_note","get_public_data_witness","lt_32_hint","lte_16_hint","directive_invert","directive_integer_quotient"]}],"outputs":{"globals":{"notes":[{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000850bb34d"},{"kind":"string","value":"AddressNote"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000be5b3a47"},{"kind":"string","value":"TransparentNote"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000008c1acdbf"},{"kind":"string","value":"TokenNote"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000be5b3a47"},{"kind":"string","value":"TransparentNote"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000850bb34d"},{"kind":"string","value":"AddressNote"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000d8f1a923"},{"kind":"string","value":"RecurringEntitlementNote"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000008c1acdbf"},{"kind":"string","value":"TokenNote"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000000c0c5aaf"},{"kind":"string","value":"UintNote"}],"kind":"tuple"}],"storage":[{"fields":[{"name":"admin","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"minters","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}}],"kind":"struct"}},{"name":"balances","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}}],"kind":"struct"}},{"name":"total_supply","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000004"}}],"kind":"struct"}},{"name":"pending_shields","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000005"}}],"kind":"struct"}},{"name":"public_balances","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000006"}}],"kind":"struct"}},{"name":"symbol","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000007"}}],"kind":"struct"}},{"name":"name","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000008"}}],"kind":"struct"}},{"name":"decimals","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000009"}}],"kind":"struct"}}],"kind":"struct"},{"fields":[{"name":"definition","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"entitlements","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000005"}}],"kind":"struct"}}],"kind":"struct"}]},"structs":{"functions":[{"fields":[{"name":"parameters","type":{"fields":[{"name":"to","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"amount","type":{"kind":"field"}}],"kind":"struct","path":"ZImburse::give_entitlement_parameters"}}],"kind":"struct","path":"ZImburse::give_entitlement_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"body","type":{"kind":"array","length":768,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"body_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"header","type":{"kind":"array","length":1024,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"header_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"pubkey","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"pubkey_redc","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"from_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"subject_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"amount_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"amount_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"receipt_id_length","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"ZImburse::redeem_linode_entitlement_parameters"}}],"kind":"struct","path":"ZImburse::redeem_linode_entitlement_abi"},{"fields":[{"name":"parameters","type":{"fields":[],"kind":"struct","path":"ZImburse::get_title_parameters"}},{"name":"return_type","type":{"kind":"array","length":60,"type":{"kind":"integer","sign":"unsigned","width":8}}}],"kind":"struct","path":"ZImburse::get_title_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"usdc_token","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"title","type":{"kind":"string","length":60}}],"kind":"struct","path":"ZImburse::constructor_parameters"}}],"kind":"struct","path":"ZImburse::constructor_abi"},{"fields":[{"name":"parameters","type":{"fields":[],"kind":"struct","path":"ZImburse::redeem_entitlement_parameters"}}],"kind":"struct","path":"ZImburse::redeem_entitlement_abi"}]}},"file_map":{"100":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/context/public_context.nr","source":"use crate::hash::{compute_secret_hash, compute_message_hash, compute_message_nullifier};\nuse dep::protocol_types::address::{AztecAddress, EthAddress};\nuse dep::protocol_types::constants::MAX_FIELD_VALUE;\nuse dep::protocol_types::traits::{Serialize, Deserialize, Empty};\nuse dep::protocol_types::abis::function_selector::FunctionSelector;\nuse crate::context::gas::GasOpts;\nuse crate::hash::ArgsHasher;\n\npub struct PublicContext {\n    args_hash: Option<Field>,\n    compute_args_hash: fn () -> Field,\n}\n\nimpl PublicContext {\n    pub fn new(compute_args_hash: fn() -> Field) -> Self {\n        PublicContext { args_hash: Option::none(), compute_args_hash }\n    }\n\n    pub fn emit_unencrypted_log<T, let N: u32>(_self: &mut Self, log: T) where T: Serialize<N> {\n        emit_unencrypted_log(Serialize::serialize(log).as_slice());\n    }\n\n    pub fn note_hash_exists(_self: Self, note_hash: Field, leaf_index: Field) -> bool {\n        note_hash_exists(note_hash, leaf_index) == 1\n    }\n\n    pub fn l1_to_l2_msg_exists(_self: Self, msg_hash: Field, msg_leaf_index: Field) -> bool {\n        l1_to_l2_msg_exists(msg_hash, msg_leaf_index) == 1\n    }\n\n    fn nullifier_exists(_self: Self, unsiloed_nullifier: Field, address: AztecAddress) -> bool {\n        nullifier_exists(unsiloed_nullifier, address.to_field()) == 1\n    }\n\n    fn consume_l1_to_l2_message(\n        &mut self,\n        content: Field,\n        secret: Field,\n        sender: EthAddress,\n        leaf_index: Field\n    ) {\n        let secret_hash = compute_secret_hash(secret);\n        let message_hash = compute_message_hash(\n            sender,\n            self.chain_id(),\n            /*recipient=*/ self.this_address(),\n            self.version(),\n            content,\n            secret_hash\n        );\n        let nullifier = compute_message_nullifier(message_hash, secret, leaf_index);\n\n        assert(\n            !self.nullifier_exists(nullifier, self.this_address()), \"L1-to-L2 message is already nullified\"\n        );\n        assert(\n            self.l1_to_l2_msg_exists(message_hash, leaf_index), \"Tried to consume nonexistent L1-to-L2 message\"\n        );\n\n        self.push_nullifier(nullifier);\n    }\n\n    fn message_portal(_self: &mut Self, recipient: EthAddress, content: Field) {\n        send_l2_to_l1_msg(recipient, content);\n    }\n\n    fn call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let results = call(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            function_selector.to_field()\n        );\n        let data_to_return: [Field; RETURNS_COUNT] = results.0;\n        let success: u8 = results.1;\n        assert(success == 1, \"Nested call failed!\");\n\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn static_call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let (data_to_return, success): ([Field; RETURNS_COUNT], u8) = call_static(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            function_selector.to_field()\n        );\n\n        assert(success == 1, \"Nested static call failed!\");\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn delegate_call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        _contract_address: AztecAddress,\n        _function_selector: FunctionSelector,\n        _args: [Field]\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        panic(f\"'delegate_call_public_function' not implemented!\")\n    }\n\n    fn push_note_hash(_self: &mut Self, note_hash: Field) {\n        emit_note_hash(note_hash);\n    }\n    fn push_nullifier(_self: &mut Self, nullifier: Field) {\n        emit_nullifier(nullifier);\n    }\n\n    fn this_address(_self: Self) -> AztecAddress {\n        address()\n    }\n    pub fn storage_address(_self: Self) -> AztecAddress {\n        storage_address()\n    }\n    fn msg_sender(_self: Self) -> AztecAddress {\n        sender()\n    }\n    fn selector(_self: Self) -> FunctionSelector {\n        FunctionSelector::from_u32(function_selector())\n    }\n    fn get_args_hash(mut self) -> Field {\n        if !self.args_hash.is_some() {\n            self.args_hash = Option::some((self.compute_args_hash)());\n        }\n\n        self.args_hash.unwrap_unchecked()\n    }\n    fn transaction_fee(_self: Self) -> Field {\n        transaction_fee()\n    }\n\n    fn chain_id(_self: Self) -> Field {\n        chain_id()\n    }\n    fn version(_self: Self) -> Field {\n        version()\n    }\n    fn block_number(_self: Self) -> Field {\n        block_number()\n    }\n    fn timestamp(_self: Self) -> u64 {\n        timestamp()\n    }\n    pub fn fee_per_l2_gas(_self: Self) -> Field {\n        fee_per_l2_gas()\n    }\n    pub fn fee_per_da_gas(_self: Self) -> Field {\n        fee_per_da_gas()\n    }\n\n    fn l2_gas_left(_self: Self) -> Field {\n        l2_gas_left()\n    }\n    fn da_gas_left(_self: Self) -> Field {\n        da_gas_left()\n    }\n    fn is_static_call(_self: Self) -> bool {\n        is_static_call() == 1\n    }\n\n    fn raw_storage_read<let N: u32>(_self: Self, storage_slot: Field) -> [Field; N] {\n        let mut out = [0; N];\n        for i in 0..N {\n            out[i] = storage_read(storage_slot + i as Field);\n        }\n        out\n    }\n\n    fn storage_read<T, let N: u32>(self, storage_slot: Field) -> T where T: Deserialize<N> {\n        T::deserialize(self.raw_storage_read(storage_slot))\n    }\n\n    fn raw_storage_write<let N: u32>(_self: Self, storage_slot: Field, values: [Field; N]) {\n        for i in 0..N {\n            storage_write(storage_slot + i as Field, values[i]);\n        }\n    }\n\n    fn storage_write<T, let N: u32>(self, storage_slot: Field, value: T) where T: Serialize<N> {\n        self.raw_storage_write(storage_slot, value.serialize());\n    }\n}\n\n// Helper functions\nfn gas_for_call(user_gas: GasOpts) -> [Field; 2] {\n    // It's ok to use the max possible gas here, because the gas will be\n    // capped by the gas left in the (STATIC)CALL instruction.\n    [\n        user_gas.l2_gas.unwrap_or(MAX_FIELD_VALUE),\n        user_gas.da_gas.unwrap_or(MAX_FIELD_VALUE)\n    ]\n}\n\n// Unconstrained opcode wrappers (do not use directly).\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/6420): reconsider.\nunconstrained fn address() -> AztecAddress {\n    address_opcode()\n}\nunconstrained fn storage_address() -> AztecAddress {\n    storage_address_opcode()\n}\nunconstrained fn sender() -> AztecAddress {\n    sender_opcode()\n}\nunconstrained fn portal() -> EthAddress {\n    portal_opcode()\n}\nunconstrained fn function_selector() -> u32 {\n    function_selector_opcode()\n}\nunconstrained fn transaction_fee() -> Field {\n    transaction_fee_opcode()\n}\nunconstrained fn chain_id() -> Field {\n    chain_id_opcode()\n}\nunconstrained fn version() -> Field {\n    version_opcode()\n}\nunconstrained fn block_number() -> Field {\n    block_number_opcode()\n}\nunconstrained fn timestamp() -> u64 {\n    timestamp_opcode()\n}\nunconstrained fn fee_per_l2_gas() -> Field {\n    fee_per_l2_gas_opcode()\n}\nunconstrained fn fee_per_da_gas() -> Field {\n    fee_per_da_gas_opcode()\n}\nunconstrained fn l2_gas_left() -> Field {\n    l2_gas_left_opcode()\n}\nunconstrained fn da_gas_left() -> Field {\n    da_gas_left_opcode()\n}\nunconstrained fn is_static_call() -> Field {\n    is_static_call_opcode()\n}\nunconstrained fn note_hash_exists(note_hash: Field, leaf_index: Field) -> u8 {\n    note_hash_exists_opcode(note_hash, leaf_index)\n}\nunconstrained fn emit_note_hash(note_hash: Field) {\n    emit_note_hash_opcode(note_hash)\n}\nunconstrained fn nullifier_exists(nullifier: Field, address: Field) -> u8 {\n    nullifier_exists_opcode(nullifier, address)\n}\nunconstrained fn emit_nullifier(nullifier: Field) {\n    emit_nullifier_opcode(nullifier)\n}\nunconstrained fn emit_unencrypted_log(message: [Field]) {\n    emit_unencrypted_log_opcode(message)\n}\nunconstrained fn l1_to_l2_msg_exists(msg_hash: Field, msg_leaf_index: Field) -> u8 {\n    l1_to_l2_msg_exists_opcode(msg_hash, msg_leaf_index)\n}\nunconstrained fn send_l2_to_l1_msg(recipient: EthAddress, content: Field) {\n    send_l2_to_l1_msg_opcode(recipient, content)\n}\nunconstrained fn call<let RET_SIZE: u32>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_opcode(gas, address, args, function_selector)\n}\nunconstrained fn call_static<let RET_SIZE: u32>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_static_opcode(gas, address, args, function_selector)\n}\n\nunconstrained pub fn calldata_copy<let N: u32>(cdoffset: u32, copy_size: u32) -> [Field; N] {\n    calldata_copy_opcode(cdoffset, copy_size)\n}\n\nunconstrained fn avm_return<let N: u32>(returndata: [Field; N]) {\n    return_opcode(returndata)\n}\n\nunconstrained fn storage_read(storage_slot: Field) -> Field {\n    storage_read_opcode(storage_slot)\n}\n\nunconstrained fn storage_write(storage_slot: Field, value: Field) {\n    storage_write_opcode(storage_slot, value);\n}\n\nimpl Empty for PublicContext {\n    fn empty() -> Self {\n        PublicContext::new(|| 0)\n    }\n}\n\n// AVM oracles (opcodes) follow, do not use directly.\n#[oracle(avmOpcodeAddress)]\nunconstrained fn address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeStorageAddress)]\nunconstrained fn storage_address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeSender)]\nunconstrained fn sender_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodePortal)]\nunconstrained fn portal_opcode() -> EthAddress {}\n\n#[oracle(avmOpcodeFunctionSelector)]\nunconstrained fn function_selector_opcode() -> u32 {}\n\n#[oracle(avmOpcodeTransactionFee)]\nunconstrained fn transaction_fee_opcode() -> Field {}\n\n#[oracle(avmOpcodeChainId)]\nunconstrained fn chain_id_opcode() -> Field {}\n\n#[oracle(avmOpcodeVersion)]\nunconstrained fn version_opcode() -> Field {}\n\n#[oracle(avmOpcodeBlockNumber)]\nunconstrained fn block_number_opcode() -> Field {}\n\n#[oracle(avmOpcodeTimestamp)]\nunconstrained fn timestamp_opcode() -> u64 {}\n\n#[oracle(avmOpcodeFeePerL2Gas)]\nunconstrained fn fee_per_l2_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeFeePerDaGas)]\nunconstrained fn fee_per_da_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeL2GasLeft)]\nunconstrained fn l2_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeDaGasLeft)]\nunconstrained fn da_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeIsStaticCall)]\nunconstrained fn is_static_call_opcode() -> Field {}\n\n#[oracle(avmOpcodeNoteHashExists)]\nunconstrained fn note_hash_exists_opcode(note_hash: Field, leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNoteHash)]\nunconstrained fn emit_note_hash_opcode(note_hash: Field) {}\n\n#[oracle(avmOpcodeNullifierExists)]\nunconstrained fn nullifier_exists_opcode(nullifier: Field, address: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNullifier)]\nunconstrained fn emit_nullifier_opcode(nullifier: Field) {}\n\n#[oracle(avmOpcodeEmitUnencryptedLog)]\nunconstrained fn emit_unencrypted_log_opcode(message: [Field]) {}\n\n#[oracle(avmOpcodeL1ToL2MsgExists)]\nunconstrained fn l1_to_l2_msg_exists_opcode(msg_hash: Field, msg_leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeSendL2ToL1Msg)]\nunconstrained fn send_l2_to_l1_msg_opcode(recipient: EthAddress, content: Field) {}\n\n#[oracle(avmOpcodeCalldataCopy)]\nunconstrained fn calldata_copy_opcode<let N: u32>(cdoffset: u32, copy_size: u32) -> [Field; N] {}\n\n#[oracle(avmOpcodeReturn)]\nunconstrained fn return_opcode<let N: u32>(returndata: [Field; N]) {}\n\n#[oracle(avmOpcodeCall)]\nunconstrained fn call_opcode<let RET_SIZE: u32>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStaticCall)]\nunconstrained fn call_static_opcode<let RET_SIZE: u32>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStorageRead)]\nunconstrained fn storage_read_opcode(storage_slot: Field) -> Field {}\n\n#[oracle(avmOpcodeStorageWrite)]\nunconstrained fn storage_write_opcode(storage_slot: Field, value: Field) {}\n\npub struct FunctionReturns<let N: u32> {\n    values: [Field; N]\n}\n\nimpl<let N: u32> FunctionReturns<N> {\n    pub fn new(values: [Field; N]) -> FunctionReturns<N> {\n        FunctionReturns { values }\n    }\n\n    pub fn raw(self) -> [Field; N] {\n        self.values\n    }\n\n    pub fn deserialize_into<T>(self) -> T where T: Deserialize<N> {\n        Deserialize::deserialize(self.raw())\n    }\n}\n\nimpl FunctionReturns<0> {\n    pub fn assert_empty(self) {\n        assert(self.values.len() == 0);\n    }\n}\n"},"101":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/context/private_context.nr","source":"use crate::{\n    context::{inputs::PrivateContextInputs, packed_returns::PackedReturns},\n    messaging::process_l1_to_l2_message, hash::{hash_args_array, ArgsHasher},\n    keys::constants::{NULLIFIER_INDEX, OUTGOING_INDEX, NUM_KEY_TYPES, sk_generators},\n    oracle::{\n    key_validation_request::get_key_validation_request, arguments, returns::pack_returns,\n    call_private_function::call_private_function_internal, header::get_header_at,\n    logs::{emit_encrypted_note_log, emit_encrypted_event_log},\n    enqueue_public_function_call::{\n    enqueue_public_function_call_internal, notify_set_min_revertible_side_effect_counter,\n    set_public_teardown_function_call_internal\n}\n}\n};\nuse dep::protocol_types::{\n    abis::{\n    call_context::CallContext, function_selector::FunctionSelector, max_block_number::MaxBlockNumber,\n    validation_requests::{KeyValidationRequest, KeyValidationRequestAndGenerator},\n    private_call_request::PrivateCallRequest, private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_request::PublicCallRequest, read_request::ReadRequest, note_hash::NoteHash,\n    nullifier::Nullifier, log_hash::{LogHash, NoteLogHash, EncryptedLogHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NOTE_HASHES_PER_CALL, MAX_L2_TO_L1_MSGS_PER_CALL, MAX_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_KEY_VALIDATION_REQUESTS_PER_CALL, MAX_ENCRYPTED_LOGS_PER_CALL, MAX_UNENCRYPTED_LOGS_PER_CALL,\n    MAX_NOTE_ENCRYPTED_LOGS_PER_CALL\n},\n    header::Header, messaging::l2_to_l1_message::L2ToL1Message, traits::Empty\n};\n\n// When finished, one can call .finish() to convert back to the abi\npub struct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    min_revertible_side_effect_counter: u32,\n    is_fee_payer: bool,\n\n    args_hash: Field,\n    return_hash: Field,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: BoundedVec<ReadRequest, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>,\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    key_validation_requests_and_generators: BoundedVec<KeyValidationRequestAndGenerator, MAX_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    note_hashes: BoundedVec<NoteHash, MAX_NOTE_HASHES_PER_CALL>,\n    nullifiers: BoundedVec<Nullifier, MAX_NULLIFIERS_PER_CALL>,\n\n    private_call_requests : BoundedVec<PrivateCallRequest, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_requests : BoundedVec<PublicCallRequest, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    public_teardown_call_request: PublicCallRequest,\n    l2_to_l1_msgs : BoundedVec<L2ToL1Message, MAX_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    note_encrypted_logs_hashes: BoundedVec<NoteLogHash, MAX_NOTE_ENCRYPTED_LOGS_PER_CALL>,\n    encrypted_logs_hashes: BoundedVec<EncryptedLogHash, MAX_ENCRYPTED_LOGS_PER_CALL>,\n    unencrypted_logs_hashes: BoundedVec<LogHash, MAX_UNENCRYPTED_LOGS_PER_CALL>,\n\n    // Contains the last key validation request for each key type. This is used to cache the last request and avoid\n    // fetching the same request multiple times.\n    // The index of the array corresponds to the key type (0 nullifier, 1 incoming, 2 outgoing, 3 tagging).\n    last_key_validation_requests: [Option<KeyValidationRequest>; NUM_KEY_TYPES],\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs,\n            side_effect_counter: inputs.start_side_effect_counter + 1,\n            min_revertible_side_effect_counter: 0,\n            is_fee_payer: false,\n            args_hash,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            historical_header: inputs.historical_header,\n            private_call_requests: BoundedVec::new(),\n            public_call_requests: BoundedVec::new(),\n            public_teardown_call_request: PublicCallRequest::empty(),\n            l2_to_l1_msgs: BoundedVec::new(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.tx_context.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.tx_context.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    fn push_note_hash(&mut self, note_hash: Field) {\n        self.note_hashes.push(NoteHash { value: note_hash, counter: self.next_counter() });\n    }\n\n    fn push_nullifier(&mut self, nullifier: Field) {\n        self.nullifiers.push(Nullifier { value: nullifier, note_hash: 0, counter: self.next_counter() });\n    }\n\n    fn push_nullifier_for_note_hash(&mut self, nullifier: Field, nullified_note_hash: Field) {\n        self.nullifiers.push(Nullifier { value: nullifier, note_hash: nullified_note_hash, counter: self.next_counter() });\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn set_return_hash(&mut self, returns_hasher: ArgsHasher) {\n        pack_returns(returns_hasher.fields);\n        self.return_hash = returns_hasher.hash();\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            returns_hash: self.return_hash,\n            min_revertible_side_effect_counter: self.min_revertible_side_effect_counter,\n            is_fee_payer: self.is_fee_payer,\n            max_block_number: self.max_block_number,\n            note_hash_read_requests: self.note_hash_read_requests.storage,\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            key_validation_requests_and_generators: self.key_validation_requests_and_generators.storage,\n            note_hashes: self.note_hashes.storage,\n            nullifiers: self.nullifiers.storage,\n            private_call_requests: self.private_call_requests.storage,\n            public_call_requests: self.public_call_requests.storage,\n            public_teardown_call_request: self.public_teardown_call_request,\n            l2_to_l1_msgs: self.l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            note_encrypted_logs_hashes: self.note_encrypted_logs_hashes.storage,\n            encrypted_logs_hashes: self.encrypted_logs_hashes.storage,\n            unencrypted_logs_hashes: self.unencrypted_logs_hashes.storage,\n            historical_header: self.historical_header,\n            tx_context: self.inputs.tx_context\n        }\n    }\n\n    pub fn set_as_fee_payer(&mut self) {\n        dep::protocol_types::debug_log::debug_log_format(\"Setting {0} as fee payer\", [self.this_address().to_field()]);\n        self.is_fee_payer = true;\n    }\n\n    pub fn end_setup(&mut self) {\n        // dep::protocol_types::debug_log::debug_log_format(\n        //     \"Ending setup at counter {0}\",\n        //     [self.side_effect_counter as Field]\n        // );\n        self.min_revertible_side_effect_counter = self.side_effect_counter;\n        notify_set_min_revertible_side_effect_counter(self.min_revertible_side_effect_counter);\n    }\n\n    // docs:start:max-block-number\n    pub fn set_tx_max_block_number(&mut self, max_block_number: u32) {\n        // docs:end:max-block-number\n        self.max_block_number = MaxBlockNumber::min_with_u32(self.max_block_number, max_block_number);\n    }\n\n    pub fn push_note_hash_read_request(&mut self, note_hash: Field) {\n        let side_effect = ReadRequest { value: note_hash, counter: self.next_counter() };\n        self.note_hash_read_requests.push(side_effect);\n    }\n\n    pub fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.next_counter() };\n        self.nullifier_read_requests.push(request);\n    }\n\n    pub fn request_nsk_app(&mut self, npk_m_hash: Field) -> Field {\n        self.request_sk_app(npk_m_hash, NULLIFIER_INDEX)\n    }\n\n    pub fn request_ovsk_app(&mut self, ovpk_m_hash: Field) -> Field {\n        self.request_sk_app(ovpk_m_hash, OUTGOING_INDEX)\n    }\n\n    fn request_sk_app(&mut self, pk_m_hash: Field, key_index: Field) -> Field {\n        let cached_request = self.last_key_validation_requests[key_index].unwrap_or(KeyValidationRequest::empty());\n\n        if cached_request.pk_m.hash() == pk_m_hash {\n            // We get a match so the cached request is the latest one\n            cached_request.sk_app\n        } else {\n            // We didn't get a match meaning the cached result is stale. We fetch new values from oracle and instruct\n            // protocol circuits to validate them by storing the validation request in context.\n            let request = get_key_validation_request(pk_m_hash, key_index);\n            let request_and_generator = KeyValidationRequestAndGenerator { request, sk_app_generator: sk_generators[key_index] };\n            // We constrain that the pk_m_hash matches the one in the request (otherwise we could get an arbitrary\n            // valid key request and not the one corresponding to pk_m_hash).\n            assert(request.pk_m.hash() == pk_m_hash);\n            self.key_validation_requests_and_generators.push(request_and_generator);\n            self.last_key_validation_requests[key_index] = Option::some(request);\n            request.sk_app\n        }\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        // docs:end:context_message_portal\n        let message = L2ToL1Message { recipient, content, counter: self.next_counter() };\n        self.l2_to_l1_msgs.push(message);\n    }\n\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        // docs:end:context_consume_l1_to_l2_message\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            self.this_address(),\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_nullifier(nullifier)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    // NB: A randomness value of 0 signals that the kernels should not mask the contract address\n    // used in siloing later on e.g. 'handshaking' contract w/ known address.\n    pub fn emit_raw_event_log_with_masked_address<let M: u32>(\n        &mut self,\n        randomness: Field,\n        log: [u8; M],\n        log_hash: Field\n    ) {\n        let counter = self.next_counter();\n        let contract_address = self.this_address();\n        let len = log.len() as Field + 4;\n        let side_effect = EncryptedLogHash { value: log_hash, counter, length: len, randomness };\n        self.encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_event_log(contract_address, randomness, log, counter);\n    }\n\n    pub fn emit_raw_note_log<let M: u32>(&mut self, note_hash_counter: u32, log: [u8; M], log_hash: Field) {\n        let counter = self.next_counter();\n        let len = log.len() as Field + 4;\n        let side_effect = NoteLogHash { value: log_hash, counter, length: len, note_hash_counter };\n        self.note_encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_note_log(note_hash_counter, log, counter);\n    }\n\n    pub fn call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> PackedReturns {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let start_side_effect_counter = self.side_effect_counter;\n        let (end_side_effect_counter, returns_hash) = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            start_side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.side_effect_counter = end_side_effect_counter + 1;\n\n        // TODO (fees) figure out why this crashes the prover and enable it\n        // we need this in order to pay fees inside child call contexts\n        // assert(\n        //     (item.public_inputs.min_revertible_side_effect_counter == 0 as u32)\n        //     | (item.public_inputs.min_revertible_side_effect_counter\n        //         > self.min_revertible_side_effect_counter)\n        // );\n\n        // if item.public_inputs.min_revertible_side_effect_counter\n        //     > self.min_revertible_side_effect_counter {\n        //     self.min_revertible_side_effect_counter = item.public_inputs.min_revertible_side_effect_counter;\n        // }\n\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.private_call_requests.push(\n            PrivateCallRequest {\n            contract_address,\n            call_context,\n            args_hash,\n            returns_hash,\n            start_side_effect_counter,\n            end_side_effect_counter\n        }\n        );\n\n        PackedReturns::new(returns_hash)\n    }\n\n    pub fn call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let counter = self.next_counter();\n\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let call_request = PublicCallRequest { contract_address, call_context, args_hash, counter };\n        self.public_call_requests.push(call_request);\n    }\n\n    pub fn set_public_teardown_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.set_public_teardown_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn set_public_teardown_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let counter = self.next_counter();\n\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        set_public_teardown_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.public_teardown_call_request = PublicCallRequest {\n            contract_address,\n            call_context,\n            args_hash,\n            counter,\n        };\n    }\n\n    fn generate_call_context(\n        self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> CallContext {\n        let msg_sender = if is_delegate_call {\n            self.msg_sender()\n        } else {\n            self.this_address()\n        };\n        let storage_contract_address = if is_delegate_call {\n            self.this_address()\n        } else {\n            contract_address\n        };\n        CallContext { msg_sender, storage_contract_address, function_selector, is_static_call, is_delegate_call }\n    }\n\n    fn next_counter(&mut self) -> u32 {\n        let counter = self.side_effect_counter;\n        self.side_effect_counter += 1;\n        counter\n    }\n}\n\nimpl Empty for PrivateContext {\n    fn empty() -> Self {\n        PrivateContext {\n            inputs: PrivateContextInputs::empty(),\n            side_effect_counter: 0 as u32,\n            min_revertible_side_effect_counter: 0 as u32,\n            is_fee_payer: false,\n            args_hash: 0,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            private_call_requests: BoundedVec::new(),\n            public_call_requests: BoundedVec::new(),\n            public_teardown_call_request: PublicCallRequest::empty(),\n            l2_to_l1_msgs: BoundedVec::new(),\n            historical_header: Header::empty(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n}\n"},"105":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/incoming_body.nr","source":"use crate::note::note_interface::NoteInterface;\nuse crate::event::event_interface::EventInterface;\nuse dep::protocol_types::{scalar::Scalar};\n\nuse std::aes128::aes128_encrypt;\nuse crate::keys::{point_to_symmetric_key::point_to_symmetric_key, public_keys::IvpkM};\n\npub struct EncryptedLogIncomingBody<let N: u32> {\n    plaintext: [u8; N * 32 + 64]\n}\n\nimpl<let N: u32> EncryptedLogIncomingBody<N> {\n    pub fn from_note<T>(note: T, storage_slot: Field) -> Self where T: NoteInterface<N> {\n        let mut plaintext = note.to_be_bytes(storage_slot);\n        EncryptedLogIncomingBody { plaintext }\n    }\n\n    pub fn from_event<T>(event: T, randomness: Field) -> Self where T: EventInterface<N> {\n        let mut plaintext = event.private_to_be_bytes(randomness);\n        EncryptedLogIncomingBody { plaintext }\n    }\n\n    pub fn compute_ciphertext(self, eph_sk: Scalar, ivpk: IvpkM) -> [u8] {\n        let full_key = point_to_symmetric_key(eph_sk, ivpk.to_point());\n        let mut sym_key = [0; 16];\n        let mut iv = [0; 16];\n\n        for i in 0..16 {\n            sym_key[i] = full_key[i];\n            iv[i] = full_key[i + 16];\n        }\n        aes128_encrypt(self.plaintext, iv, sym_key)\n    }\n}\n\nmod test {\n    use dep::protocol_types::{\n        address::AztecAddress, scalar::Scalar, point::Point, traits::Serialize,\n        abis::event_selector::EventSelector\n    };\n\n    use crate::{\n        note::{note_header::NoteHeader, note_interface::{NoteInterface, NullifiableNote}},\n        encrypted_logs::incoming_body::EncryptedLogIncomingBody, event::event_interface::EventInterface,\n        context::PrivateContext, keys::public_keys::IvpkM\n    };\n\n    struct AddressNote {\n        address: AztecAddress,\n        owner: AztecAddress,\n        randomness: Field,\n        header: NoteHeader,\n    }\n\n    global ADDRESS_NOTE_LEN: u32 = 3;\n\n    impl NullifiableNote for AddressNote {\n        fn compute_nullifier(\n            _self: Self,\n            _context: &mut PrivateContext,\n            _note_hash_for_nullify: Field\n        ) -> Field {\n            1\n        }\n\n        unconstrained fn compute_nullifier_without_context(_self: Self) -> Field {\n            1\n        }\n    }\n\n    struct AddressNoteHidingPoint {\n        inner: Point\n    }\n\n    impl NoteInterface<ADDRESS_NOTE_LEN> for AddressNote {\n\n        fn get_note_type_id() -> Field {\n            1\n        }\n\n        fn get_header(self) -> NoteHeader {\n            self.header\n        }\n\n        fn set_header(&mut self, header: NoteHeader) {\n            self.header = header;\n        }\n\n        fn serialize_content(self) -> [Field; ADDRESS_NOTE_LEN] {\n            [self.address.to_field(), self.owner.to_field(), self.randomness]\n        }\n\n        fn deserialize_content(fields: [Field; ADDRESS_NOTE_LEN]) -> Self {\n            AddressNote {\n                address: AztecAddress::from_field(fields[0]),\n                owner: AztecAddress::from_field(fields[1]),\n                randomness: fields[2],\n                header: NoteHeader::empty()\n            }\n        }\n\n        fn to_be_bytes(self, storage_slot: Field) -> [u8; ADDRESS_NOTE_LEN * 32 + 64] {\n            let serialized_note = self.serialize_content();\n\n            let mut buffer: [u8; ADDRESS_NOTE_LEN * 32 + 64] = [0; ADDRESS_NOTE_LEN * 32 + 64];\n\n            let storage_slot_bytes: [u8; 32] = storage_slot.to_be_bytes();\n            let note_type_id_bytes: [u8; 32] = AddressNote::get_note_type_id().to_be_bytes();\n\n            for i in 0..32 {\n                buffer[i] = storage_slot_bytes[i];\n                buffer[32 + i] = note_type_id_bytes[i];\n            }\n\n            for i in 0..serialized_note.len() {\n                let bytes: [u8; 32] = serialized_note[i].to_be_bytes();\n                for j in 0..32 {\n                    buffer[64 + i * 32 + j] = bytes[j];\n                }\n            }\n            buffer\n        }\n\n        fn compute_note_hash(_self: Self) -> Field {\n            crate::generators::Ga1.x\n        }\n    }\n\n    impl AddressNote {\n        pub fn new(address: AztecAddress, owner: AztecAddress, randomness: Field) -> Self {\n            AddressNote { address, owner, randomness, header: NoteHeader::empty() }\n        }\n    }\n\n    #[test]\n    unconstrained fn test_encrypted_note_log_incoming_body_matches_typescript() {\n        // All the values in this test were copied over from `encrypted_note_log_incoming_body.test.ts`\n        let note = AddressNote::new(\n            AztecAddress::from_field(0x1),\n            AztecAddress::from_field(0x2),\n            3\n        );\n\n        let storage_slot = 2;\n\n        let eph_sk = Scalar {\n            lo: 0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n            hi: 0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n        };\n        let ivpk = IvpkM {\n            inner: Point {\n                x: 0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n                y: 0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n                is_infinite: false\n            }\n        };\n\n        // 1. `EncryptedLogIncomingBody::from_note` calls `note.to_be_bytes(storage_slot)` function which serializes\n        // the note to bytes - note that in the case of `AddressNote` the `to_be_bytes` function was automatically\n        // implemented by Aztec macros.\n        let body = EncryptedLogIncomingBody::from_note(note, storage_slot);\n\n        // 2. `body.compute_ciphertext(...)` function then derives symmetric key from `eph_sk` and `ivpk` and encrypts\n        // the note plaintext using AES-128.\n        let ciphertext = body.compute_ciphertext(eph_sk, ivpk);\n\n        // The following value was generated by `encrypted_note_log_incoming_body.test.ts`.\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let note_body_ciphertext_from_typescript = [\n            226, 240, 253, 6, 28, 52, 19, 131, 33, 132, 178, 212, 245, 62, 14, 190, 147, 228, 160, 190, 146, 61, 95, 203, 124, 153, 68, 168, 17, 150, 92, 0, 99, 214, 85, 64, 191, 78, 157, 131, 149, 96, 236, 253, 96, 172, 157, 30, 27, 176, 228, 74, 242, 190, 138, 48, 33, 93, 46, 37, 223, 130, 25, 245, 188, 163, 159, 223, 187, 24, 139, 206, 131, 154, 159, 130, 37, 17, 158, 114, 242, 141, 124, 193, 232, 54, 146, 96, 145, 100, 125, 234, 57, 43, 95, 115, 183, 39, 121, 232, 134, 229, 148, 25, 46, 77, 87, 127, 95, 7, 77, 188, 37, 234, 245, 142, 232, 87, 252, 28, 67, 67, 90, 214, 254, 89, 47, 68, 66, 187, 227, 8, 59, 162, 25, 141, 97, 141, 217, 197, 115, 15, 212, 202, 157, 41, 150, 62, 219, 57, 224, 92, 185, 212, 142, 94, 146, 41, 178, 145, 68, 169, 23, 185, 206, 138, 70, 47, 176, 210, 165, 236, 23, 206, 229, 108\n        ];\n\n        assert_eq(note_body_ciphertext_from_typescript.len(), ciphertext.len());\n\n        for i in 0..note_body_ciphertext_from_typescript.len() {\n            assert_eq(ciphertext[i], note_body_ciphertext_from_typescript[i]);\n        }\n    }\n\n    struct TestEvent {\n        value0: Field,\n        value1: Field,\n        value2: Field,\n    }\n\n    impl Serialize<3> for TestEvent {\n        fn serialize(self) -> [Field; 3] {\n            [self.value0, self.value1, self.value2]\n        }\n    }\n\n    global TEST_EVENT_LEN: u32 = 3;\n\n    impl EventInterface<TEST_EVENT_LEN> for TestEvent {\n        fn get_event_type_id() -> EventSelector {\n            comptime\n            {\n                EventSelector::from_signature(\"TestEvent(Field,Field,Field)\")\n            }\n        }\n\n        fn private_to_be_bytes(self, randomness: Field) -> [u8; TEST_EVENT_LEN * 32 + 64] {\n            let mut buffer: [u8; TEST_EVENT_LEN * 32 + 64] = [0; TEST_EVENT_LEN * 32 + 64];\n\n            let randomness_bytes: [u8; 32] = randomness.to_be_bytes();\n            let event_type_id_bytes: [u8; 32] = TestEvent::get_event_type_id().to_field().to_be_bytes();\n\n            for i in 0..32 {\n                buffer[i] = randomness_bytes[i];\n                buffer[32 + i] = event_type_id_bytes[i];\n            }\n\n            let serialized_event = self.serialize();\n\n            for i in 0..serialized_event.len() {\n                let bytes: [u8; 32] = serialized_event[i].to_be_bytes();\n                for j in 0..32 {\n                    buffer[64 + i * 32 + j] = bytes[j];\n                }\n            }\n\n            buffer\n        }\n\n        fn to_be_bytes(self) -> [u8; TEST_EVENT_LEN * 32 + 32] {\n            let mut buffer: [u8; TEST_EVENT_LEN * 32 + 32] = [0; TEST_EVENT_LEN * 32 + 32];\n\n            let event_type_id_bytes: [u8; 32] = TestEvent::get_event_type_id().to_field().to_be_bytes();\n\n            for i in 0..32 {\n                buffer[i] = event_type_id_bytes[i];\n            }\n\n            let serialized_event = self.serialize();\n\n            for i in 0..serialized_event.len() {\n                let bytes: [u8; 32] = serialized_event[i].to_be_bytes();\n                for j in 0..32 {\n                    buffer[32 + i * 32 + j] = bytes[j];\n                }\n            }\n\n            buffer\n        }\n\n        fn emit<Env>(self, _emit: fn[Env](Self) -> ()) {\n            _emit(self);\n        }\n    }\n\n    #[test]\n    unconstrained fn test_encrypted_log_event_incoming_body() {\n        let test_event = TestEvent { value0: 1, value1: 2, value2: 3 };\n\n        let eph_sk = Scalar {\n            lo: 0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n            hi: 0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n        };\n\n        let ivpk = IvpkM {\n            inner: Point {\n                x: 0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n                y: 0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n                is_infinite: false\n            }\n        };\n\n        let randomness = 2;\n\n        let body = EncryptedLogIncomingBody::from_event(test_event, randomness);\n\n        let ciphertext = body.compute_ciphertext(eph_sk, ivpk);\n\n        // The following value was generated by `encrypted_event_log_incoming_body.test.ts`\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let event_body_ciphertext_from_typescript = [\n            226, 240, 253, 6, 28, 52, 19, 131, 33, 132, 178, 212, 245, 62, 14, 190, 147, 228, 160, 190, 146, 61, 95, 203, 124, 153, 68, 168, 17, 150, 92, 0, 99, 214, 85, 64, 191, 78, 157, 131, 149, 96, 236, 253, 96, 172, 157, 30, 201, 247, 40, 80, 60, 188, 158, 251, 242, 103, 197, 79, 165, 195, 10, 160, 255, 35, 167, 152, 25, 233, 77, 145, 214, 243, 210, 119, 0, 20, 29, 95, 15, 63, 33, 190, 184, 67, 254, 96, 128, 243, 220, 228, 201, 130, 86, 163, 52, 127, 111, 10, 212, 7, 160, 16, 87, 13, 39, 11, 5, 1, 164, 65, 8, 56, 82, 245, 13, 68, 176, 90, 100, 69, 243, 78, 117, 188, 221, 34, 178, 31, 155, 89, 143, 176, 129, 118, 36, 236, 64, 179, 52, 239, 184, 51, 51, 199, 221, 49, 81, 197, 17, 199, 192, 99, 49, 168, 157, 164, 190, 33, 240, 182, 214, 173, 7, 156, 102, 95, 65, 217, 225, 123, 42, 21, 124, 144\n        ];\n\n        assert_eq(event_body_ciphertext_from_typescript.len(), ciphertext.len());\n\n        for i in 0..event_body_ciphertext_from_typescript.len() {\n            assert_eq(ciphertext[i], event_body_ciphertext_from_typescript[i]);\n        }\n    }\n}\n"},"106":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/header.nr","source":"use dep::protocol_types::{address::AztecAddress, scalar::Scalar, point::Point};\n\nuse crate::keys::{point_to_symmetric_key::point_to_symmetric_key, public_keys::ToPoint};\n\nuse std::aes128::aes128_encrypt;\n\npub struct EncryptedLogHeader {\n    address: AztecAddress,\n}\n\nimpl EncryptedLogHeader {\n    fn new(address: AztecAddress) -> Self {\n        EncryptedLogHeader { address }\n    }\n\n    fn compute_ciphertext<T>(self, secret: Scalar, pk: T) -> [u8; 48] where T: ToPoint {\n        let full_key = point_to_symmetric_key(secret, pk.to_point());\n        let mut sym_key = [0; 16];\n        let mut iv = [0; 16];\n\n        for i in 0..16 {\n            sym_key[i] = full_key[i];\n            iv[i] = full_key[i + 16];\n        }\n\n        let input: [u8; 32] = self.address.to_field().to_be_bytes();\n        aes128_encrypt(input, iv, sym_key).as_array()\n    }\n}\n\n#[test]\nunconstrained fn test_encrypted_log_header_matches_noir() {\n    let address = AztecAddress::from_field(0xdeadbeef);\n    let header = EncryptedLogHeader::new(address);\n    let secret = Scalar {\n        lo: 0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n        hi: 0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n    };\n    let point = crate::keys::public_keys::IvpkM {\n        inner: Point {\n            x: 0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n            y: 0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n            is_infinite: false\n        }\n    };\n\n    let ciphertext = header.compute_ciphertext(secret, point);\n\n    // The following value was generated by `encrypted_log_header.test.ts`.\n    // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n    let expected_header_ciphertext_from_typescript = [\n        226, 240, 253, 6, 28, 52, 19, 131, 33, 132, 178, 212, 245, 62, 14, 190, 194, 44, 7, 131, 160, 83, 64, 181, 98, 38, 153, 214, 62, 171, 253, 161, 111, 191, 28, 247, 216, 26, 222, 171, 176, 218, 48, 209, 73, 89, 200, 209\n    ];\n\n    assert_eq(ciphertext, expected_header_ciphertext_from_typescript);\n}\n"},"107":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/encrypted_note_emission.nr","source":"use crate::{\n    context::PrivateContext, note::{note_emission::NoteEmission, note_interface::NoteInterface},\n    keys::{getters::{get_public_keys, get_ovsk_app}, public_keys::{OvpkM, IvpkM}},\n    encrypted_logs::payload::compute_encrypted_note_log, oracle::logs_traits::LensForEncryptedLog\n};\nuse dep::protocol_types::{hash::sha256_to_field, address::AztecAddress, abis::note_hash::NoteHash};\n\nfn compute_raw_note_log<Note, let N: u32, let M: u32>(\n    context: PrivateContext,\n    note: Note,\n    ovsk_app: Field,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress,\n    num_public_values: u8 // Number of values to be appended to the log in public (used in partial note flow).\n) -> (u32, [u8; M], Field) where Note: NoteInterface<N>, [Field; N]: LensForEncryptedLog<N, M> {\n    let note_header = note.get_header();\n    let note_hash_counter = note_header.note_hash_counter;\n    let storage_slot = note_header.storage_slot;\n\n    // TODO(#8589): use typesystem to skip this check when not needed\n    let note_exists = context.note_hashes.storage.any(|n: NoteHash| n.counter == note_hash_counter);\n    assert(note_exists, \"Can only emit a note log for an existing note.\");\n\n    let contract_address: AztecAddress = context.this_address();\n\n    let encrypted_log: [u8; M] = compute_encrypted_note_log(\n        contract_address,\n        storage_slot,\n        ovsk_app,\n        ovpk,\n        ivpk,\n        recipient,\n        note,\n        num_public_values\n    );\n    let log_hash = sha256_to_field(encrypted_log);\n\n    (note_hash_counter, encrypted_log, log_hash)\n}\n\nunconstrained fn compute_raw_note_log_unconstrained<Note, let N: u32, let M: u32>(\n    context: PrivateContext,\n    note: Note,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress,\n    num_public_values: u8 // Number of values to be appended to the log in public (used in partial note flow).\n) -> (u32, [u8; M], Field) where Note: NoteInterface<N>, [Field; N]: LensForEncryptedLog<N, M> {\n    let ovsk_app = get_ovsk_app(ovpk.hash());\n    compute_raw_note_log(context, note, ovsk_app, ovpk, ivpk, recipient, num_public_values)\n}\n\npub fn encode_and_encrypt_note<Note, let N: u32, let M: u32>(\n    context: &mut PrivateContext,\n    ov: AztecAddress,\n    iv: AztecAddress\n) -> fn[(AztecAddress, AztecAddress, &mut PrivateContext)](NoteEmission<Note>) -> () where Note: NoteInterface<N>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        let ovpk = get_public_keys(ov).ovpk_m;\n        let ivpk = get_public_keys(iv).ivpk_m;\n        let ovsk_app: Field  = context.request_ovsk_app(ovpk.hash());\n\n        // Number of public values is always 0 here because `encode_and_encrypt_note(...)` is only called\n        // in the non-partial note flow.\n        let num_public_values = 0;\n        let (note_hash_counter, encrypted_log, log_hash) = compute_raw_note_log(*context, e.note, ovsk_app, ovpk, ivpk, iv, num_public_values);\n        context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n    }\n}\n\npub fn encode_and_encrypt_note_unconstrained<Note, let N: u32, let M: u32>(\n    context: &mut PrivateContext,\n    ov: AztecAddress,\n    iv: AztecAddress\n) -> fn[(AztecAddress, AztecAddress, &mut PrivateContext)](NoteEmission<Note>) -> () where Note: NoteInterface<N>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        // Note: We could save a lot of gates by obtaining the following keys in an unconstrained context but this\n        // function is currently not used anywhere so we are not optimizing it.\n        let ovpk = get_public_keys(ov).ovpk_m;\n        let ivpk = get_public_keys(iv).ivpk_m;\n\n        // Number of public values is always 0 here because `encode_and_encrypt_note_unconstrained(...)` is only called\n        // in the non-partial note flow.\n        let num_public_values = 0;\n\n        // See the comment in `encode_and_encrypt_note_with_keys_unconstrained` for why having note hash counter\n        // and log hash unconstrained here is fine.\n        let (note_hash_counter, encrypted_log, log_hash) = unsafe {\n            compute_raw_note_log_unconstrained(*context, e.note, ovpk, ivpk, iv, num_public_values)\n        };\n        context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n    }\n}\n\npub fn encode_and_encrypt_note_with_keys<Note, let N: u32, let M: u32>(\n    context: &mut PrivateContext,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress\n) -> fn[(&mut PrivateContext, OvpkM, IvpkM, AztecAddress)](NoteEmission<Note>) -> () where Note: NoteInterface<N>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        let ovsk_app: Field  = context.request_ovsk_app(ovpk.hash());\n\n        // Number of public values is always 0 here because `encode_and_encrypt_note_unconstrained(...)` is only called\n        // in the non-partial note flow.\n        let num_public_values = 0;\n\n        let (note_hash_counter, encrypted_log, log_hash) = compute_raw_note_log(*context, e.note, ovsk_app, ovpk, ivpk, recipient, num_public_values);\n        context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n    }\n}\n\npub fn encode_and_encrypt_note_with_keys_unconstrained<Note, let N: u32, let M: u32>(\n    context: &mut PrivateContext,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress\n) -> fn[(&mut PrivateContext, OvpkM, IvpkM, AztecAddress)](NoteEmission<Note>) -> () where Note: NoteInterface<N>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        // Number of public values is always 0 here because `encode_and_encrypt_note_with_keys_unconstrained(...)` is only called\n        // in the non-partial note flow.\n        let num_public_values = 0;\n\n        //   Having the log hash be unconstrained here is fine because the way this works is we send the log hash\n        // to the kernel, and it gets included as part of its public inputs. Then we send the tx to the sequencer,\n        // which includes the kernel proof and the log preimages. The sequencer computes the hashes of the logs\n        // and checks that they are the ones in the public inputs of the kernel, and drops the tx otherwise (proposing\n        // the block on L1 would later fail if it didn't because of txs effects hash mismatch).\n        //   So if we don't constrain the log hash, then a malicious sender can compute the correct log, submit a bad\n        // log hash to the kernel, and then submit the bad log preimage to the sequencer. All checks will pass, but\n        // the submitted log will not be the one that was computed by the app.\n        //   In the unconstrained case, we don't care about the log at all because we don't do anything with it,\n        // and because it's unconstrained: it could be anything. So if a sender chooses to broadcast the tx with a log\n        // that is different from the one that was used in the circuit, then they'll be able to, but they were already\n        // able to change the log before anyway, so the end result is the same. It's important here that we do not\n        // return the log from this function to the app, otherwise it could try to do stuff with it and then that might\n        // be wrong.\n        //   Regarding the note hash counter, this is used for squashing. The kernel assumes that a given note can have\n        // more than one log and removes all of the matching ones, so all a malicious sender could do is either: cause\n        // for the log to be deleted when it shouldn't have (which is fine - they can already make the content be\n        // whatever), or cause for the log to not be deleted when it should have (which is also fine - it'll be a log\n        // for a note that doesn't exist).\n        let (note_hash_counter, encrypted_log, log_hash) = unsafe {\n            compute_raw_note_log_unconstrained(*context, e.note, ovpk, ivpk, recipient, num_public_values)\n        };\n        context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n    }\n}\n"},"108":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/outgoing_body.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, scalar::Scalar, point::Point, constants::GENERATOR_INDEX__SYMMETRIC_KEY,\n    hash::poseidon2_hash_with_separator\n};\nuse std::aes128::aes128_encrypt;\n\nuse crate::{keys::public_keys::IvpkM, utils::point::point_to_bytes};\n\npub struct EncryptedLogOutgoingBody {\n    eph_sk: Scalar,\n    recipient: AztecAddress,\n    recipient_ivpk: IvpkM,\n}\n\nimpl EncryptedLogOutgoingBody {\n    pub fn new(eph_sk: Scalar, recipient: AztecAddress, recipient_ivpk: IvpkM) -> Self {\n        Self { eph_sk, recipient, recipient_ivpk }\n    }\n\n    /// Encrypts ephemeral secret key and recipient's ivpk --> with this information the recipient of outgoing will\n    /// be able to derive the key with which the incoming log can be decrypted.\n    pub fn compute_ciphertext(self, ovsk_app: Scalar, eph_pk: Point) -> [u8; 144] {\n        // Again, we could compute `eph_pk` here, but we keep the interface more similar\n        // and also make it easier to optimise it later as we just pass it along\n\n        let mut buffer = [0 as u8; 128];\n\n        let serialized_eph_sk_high: [u8; 32] = self.eph_sk.hi.to_be_bytes();\n        let serialized_eph_sk_low: [u8; 32] = self.eph_sk.lo.to_be_bytes();\n\n        let address_bytes: [u8; 32] = self.recipient.to_field().to_be_bytes();\n        let serialized_recipient_ivpk = point_to_bytes(self.recipient_ivpk.to_point());\n\n        for i in 0..32 {\n            buffer[i] = serialized_eph_sk_high[i];\n            buffer[i + 32] = serialized_eph_sk_low[i];\n            buffer[i + 64] = address_bytes[i];\n        }\n        for i in 0..32 {\n            buffer[i + 96] = serialized_recipient_ivpk[i];\n        }\n\n        // We compute the symmetric key using poseidon.\n        let full_key: [u8; 32] = poseidon2_hash_with_separator(\n            [ovsk_app.hi, ovsk_app.lo, eph_pk.x, eph_pk.y],\n            GENERATOR_INDEX__SYMMETRIC_KEY as Field\n        ).to_be_bytes();\n\n        let mut sym_key = [0; 16];\n        let mut iv = [0; 16];\n\n        for i in 0..16 {\n            sym_key[i] = full_key[i];\n            iv[i] = full_key[i + 16];\n        }\n        aes128_encrypt(buffer, iv, sym_key).as_array()\n    }\n}\n\nmod test {\n    use crate::{encrypted_logs::outgoing_body::EncryptedLogOutgoingBody, keys::public_keys::IvpkM};\n    use dep::protocol_types::{address::AztecAddress, scalar::Scalar};\n    use std::embedded_curve_ops::fixed_base_scalar_mul as derive_public_key;\n\n    #[test]\n    unconstrained fn test_encrypted_log_outgoing_body_matches_typescript() {\n        let eph_sk = Scalar {\n            lo: 0x00000000000000000000000000000000d0d302ee245dfaf2807e604eec4715fe,\n            hi: 0x000000000000000000000000000000000f096b423017226a18461115fa8d34bb\n        };\n        let recipient_ivsk = Scalar {\n            lo: 0x000000000000000000000000000000004828f8f95676ebb481df163f87fd4022,\n            hi: 0x000000000000000000000000000000000f4d97c25d578f9348251a71ca17ae31\n        };\n        let sender_ovsk_app = Scalar {\n            lo: 0x0000000000000000000000000000000074d2e28c6bc5176ac02cf7c7d36a444e,\n            hi: 0x00000000000000000000000000000000089c6887cb1446d86c64e81afc78048b\n        };\n\n        let eph_pk = derive_public_key(eph_sk);\n        let recipient_ivpk = IvpkM { inner: derive_public_key(recipient_ivsk) };\n\n        let recipient = AztecAddress::from_field(0xdeadbeef);\n\n        let body = EncryptedLogOutgoingBody::new(eph_sk, recipient, recipient_ivpk);\n\n        let ciphertext = body.compute_ciphertext(sender_ovsk_app, eph_pk);\n\n        // The following value was generated by `encrypted_log_outgoing_body.test.ts`\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let outgoing_body_ciphertext_from_typescript = [\n            127, 182, 227, 75, 192, 197, 54, 47, 168, 134, 233, 148, 251, 46, 86, 12, 73, 50, 238, 50, 31, 174, 27, 202, 110, 77, 161, 197, 244, 124, 17, 100, 143, 150, 232, 14, 156, 248, 43, 177, 16, 82, 244, 103, 88, 74, 84, 200, 15, 65, 187, 14, 163, 60, 91, 22, 104, 31, 211, 190, 124, 121, 79, 92, 239, 65, 185, 106, 51, 178, 168, 137, 84, 43, 79, 158, 151, 152, 83, 42, 170, 13, 106, 209, 254, 74, 39, 145, 73, 215, 17, 234, 196, 89, 30, 58, 120, 127, 88, 69, 121, 61, 18, 206, 89, 118, 243, 238, 177, 71, 73, 47, 147, 4, 155, 25, 173, 248, 206, 52, 17, 180, 122, 186, 106, 191, 252, 102, 197, 91, 16, 39, 94, 91, 224, 30, 168, 177, 26, 144, 5, 124, 128, 6\n        ];\n\n        assert_eq(outgoing_body_ciphertext_from_typescript, ciphertext);\n    }\n}\n"},"110":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/payload.nr","source":"use dep::protocol_types::{address::AztecAddress, scalar::Scalar, point::Point};\nuse std::{\n    embedded_curve_ops::fixed_base_scalar_mul as derive_public_key,\n    hash::from_field_unsafe as fr_to_fq_unsafe, field::bn254::decompose\n};\n\nuse crate::{\n    event::event_interface::EventInterface, oracle::unsafe_rand::unsafe_rand,\n    utils::point::point_to_bytes, note::note_interface::NoteInterface,\n    encrypted_logs::{\n    header::EncryptedLogHeader, incoming_body::EncryptedLogIncomingBody,\n    outgoing_body::EncryptedLogOutgoingBody\n},\n    keys::public_keys::{OvpkM, IvpkM}\n};\n\npub fn compute_encrypted_event_log<Event, let N: u32, let OB: u32>(\n    contract_address: AztecAddress,\n    randomness: Field,\n    ovsk_app: Field,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress,\n    event: Event\n) -> [u8; OB] where Event: EventInterface<N> {\n    let (eph_sk, eph_pk) = generate_ephemeral_key_pair();\n\n    let header = EncryptedLogHeader::new(contract_address);\n\n    let incoming_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ivpk);\n    let outgoing_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ovpk);\n    let incoming_body_ciphertext = EncryptedLogIncomingBody::from_event(event, randomness).compute_ciphertext(eph_sk, ivpk);\n    let outgoing_body_ciphertext: [u8; 144] = EncryptedLogOutgoingBody::new(eph_sk, recipient, ivpk).compute_ciphertext(fr_to_fq(ovsk_app), eph_pk);\n\n    let mut encrypted_bytes: [u8; OB] = [0; OB];\n    // @todo We ignore the tags for now\n\n    let eph_pk_bytes = point_to_bytes(eph_pk);\n    for i in 0..32 {\n        encrypted_bytes[64 + i] = eph_pk_bytes[i];\n    }\n    for i in 0..48 {\n        encrypted_bytes[96 + i] = incoming_header_ciphertext[i];\n        encrypted_bytes[144 + i] = outgoing_header_ciphertext[i];\n    }\n    for i in 0..144 {\n        encrypted_bytes[192 + i] = outgoing_body_ciphertext[i];\n    }\n    // Then we fill in the rest as the incoming body ciphertext\n    let size = OB - 336;\n    assert_eq(size, incoming_body_ciphertext.len(), \"ciphertext length mismatch\");\n    for i in 0..size {\n        encrypted_bytes[336 + i] = incoming_body_ciphertext[i];\n    }\n\n    // Current unoptimized size of the encrypted log\n    // incoming_tag (32 bytes)\n    // outgoing_tag (32 bytes)\n    // eph_pk (32 bytes)\n    // incoming_header (48 bytes)\n    // outgoing_header (48 bytes)\n    // outgoing_body (144 bytes)\n    // incoming_body_fixed (64 bytes)\n    // incoming_body_variable (N * 32 bytes + 16 bytes padding)\n    encrypted_bytes\n}\n\npub fn compute_encrypted_note_log<Note, let N: u32, let M: u32>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    ovsk_app: Field,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress,\n    note: Note,\n    num_public_values: u8 // Number of values to be appended to the log in public (used in partial note flow).\n) -> [u8; M] where Note: NoteInterface<N> {\n    let (eph_sk, eph_pk) = generate_ephemeral_key_pair();\n\n    let header = EncryptedLogHeader::new(contract_address);\n\n    let incoming_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ivpk);\n    let outgoing_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ovpk);\n    let incoming_body_ciphertext = EncryptedLogIncomingBody::from_note(note, storage_slot).compute_ciphertext(eph_sk, ivpk);\n    let outgoing_body_ciphertext: [u8; 144] = EncryptedLogOutgoingBody::new(eph_sk, recipient, ivpk).compute_ciphertext(fr_to_fq(ovsk_app), eph_pk);\n\n    let mut encrypted_bytes: [u8; M] = [0; M];\n    // @todo We ignore the tags for now\n\n    encrypted_bytes[64] = num_public_values; // TODO(#8558): This can be just a single bit if we store info about partial fields in ABI\n    let eph_pk_bytes = point_to_bytes(eph_pk);\n    for i in 0..32 {\n        encrypted_bytes[65 + i] = eph_pk_bytes[i];\n    }\n    for i in 0..48 {\n        encrypted_bytes[97 + i] = incoming_header_ciphertext[i];\n        encrypted_bytes[145 + i] = outgoing_header_ciphertext[i];\n    }\n    for i in 0..144 {\n        encrypted_bytes[193 + i] = outgoing_body_ciphertext[i];\n    }\n    // Then we fill in the rest as the incoming body ciphertext\n    let size = M - 337;\n    assert_eq(size, incoming_body_ciphertext.len(), \"ciphertext length mismatch\");\n    for i in 0..size {\n        encrypted_bytes[337 + i] = incoming_body_ciphertext[i];\n    }\n\n    // Current unoptimized size of the encrypted log\n    // incoming_tag (32 bytes)\n    // outgoing_tag (32 bytes)\n    // num_public_values (1 byte)\n    // eph_pk (32 bytes)\n    // incoming_header (48 bytes)\n    // outgoing_header (48 bytes)\n    // outgoing_body (144 bytes)\n    // incoming_body_fixed (64 bytes)\n    // incoming_body_variable (N * 32 bytes + 16 bytes padding)\n    encrypted_bytes\n}\n\n/// Converts a base field element to scalar field element.\n/// This is fine because modulus of the base field is smaller than the modulus of the scalar field.\nfn fr_to_fq(r: Field) -> Scalar {\n    let (lo, hi) = decompose(r);\n\n    Scalar { lo, hi }\n}\n\nfn generate_ephemeral_key_pair() -> (Scalar, Point) {\n    // @todo Need to draw randomness from the full domain of Fq not only Fr\n    // We use the unsafe version of `fr_to_fq` because multi_scalar_mul (called by derive_public_key) will constrain\n    // the scalars.\n    let eph_sk = fr_to_fq_unsafe(unsafe_rand());\n    let eph_pk = derive_public_key(eph_sk);\n\n    (eph_sk, eph_pk)\n}\n\nmod test {\n    use crate::{\n        encrypted_logs::payload::compute_encrypted_note_log, keys::public_keys::{OvpkM, IvpkM},\n        test::mocks::mock_note::MockNoteBuilder\n    };\n    use dep::protocol_types::{address::AztecAddress, point::Point};\n    use std::test::OracleMock;\n\n    #[test]\n    unconstrained fn test_encrypted_note_log_matches_typescript() {\n        // All the values in this test were copied over from `tagged_log.test.ts`\n        let contract_address = AztecAddress::from_field(0x10f48cd9eff7ae5b209c557c70de2e657ee79166868676b787e9417e19260e04);\n        let storage_slot = 0x0fe46be583b71f4ab5b70c2657ff1d05cccf1d292a9369628d1a194f944e6599;\n        let ovsk_app = 0x03a6513d6def49f41d20373d2cec894c23e7492794b08fc50c0e8a1bd2512612;\n        let ovpk_m = OvpkM {\n            inner: Point {\n                x: 0x1961448682803198631f299340e4206bb12809d4bebbf012b30f59af73ba1a15,\n                y: 0x133674060c3925142aceb4f1dcd9f9137d0217d37ff8729ee5ceaa6e2790353d,\n                is_infinite: false\n            }\n        };\n        let ivpk_m = IvpkM {\n            inner: Point {\n                x: 0x260cd3904f6df16e974c29944fdc839e40fb5cf293f03df2eb370851d3a527bc,\n                y: 0x0eef2964fe6640e84c82b5d2915892409b38e9e25d39f68dd79edb725c55387f,\n                is_infinite: false\n            }\n        };\n\n        let note_value = 0x301640ceea758391b2e161c92c0513f129020f4125256afdae2646ce31099f5c;\n        let note = MockNoteBuilder::new(note_value).contract_address(contract_address).storage_slot(storage_slot).build();\n\n        let eph_sk = 0x1358d15019d4639393d62b97e1588c095957ce74a1c32d6ec7d62fe6705d9538;\n        let _ = OracleMock::mock(\"getRandomField\").returns(eph_sk);\n\n        let recipient = AztecAddress::from_field(0x10ee41ee4b62703b16f61e03cb0d88c4b306a9eb4a6ceeb2aff13428541689a2);\n        let num_public_values: u8 = 0;\n\n        let log: [u8; 449] = compute_encrypted_note_log(\n            contract_address,\n            storage_slot,\n            ovsk_app,\n            ovpk_m,\n            ivpk_m,\n            recipient,\n            note,\n            num_public_values\n        );\n\n        // The following value was generated by `tagged_log.test.ts`\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let encrypted_note_log_from_typescript = [\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 70, 12, 14, 67, 77, 132, 110, 193, 234, 40, 110, 64, 144, 235, 86, 55, 111, 242, 123, 221, 193, 170, 202, 225, 216, 86, 84, 159, 112, 31, 167, 126, 79, 51, 186, 47, 71, 253, 172, 99, 112, 241, 59, 197, 241, 107, 186, 232, 87, 187, 230, 171, 62, 228, 234, 42, 51, 145, 146, 238, 242, 42, 71, 206, 13, 244, 66, 111, 195, 20, 203, 98, 148, 204, 242, 145, 183, 156, 29, 141, 54, 44, 220, 194, 35, 229, 16, 32, 204, 211, 49, 142, 112, 82, 202, 116, 241, 254, 146, 42, 217, 20, 189, 70, 228, 182, 171, 205, 104, 27, 99, 171, 28, 91, 244, 21, 30, 130, 240, 5, 72, 174, 124, 97, 197, 157, 248, 193, 23, 193, 76, 46, 141, 144, 70, 211, 45, 67, 167, 218, 129, 140, 104, 190, 41, 110, 249, 209, 68, 106, 135, 164, 80, 235, 63, 101, 80, 32, 13, 38, 99, 145, 91, 11, 173, 151, 231, 247, 65, 153, 117, 229, 167, 64, 239, 182, 126, 235, 83, 4, 169, 8, 8, 160, 4, 235, 252, 21, 96, 84, 161, 69, 145, 145, 215, 254, 161, 117, 246, 198, 65, 89, 179, 194, 90, 19, 121, 12, 202, 114, 80, 195, 14, 60, 128, 105, 142, 100, 86, 90, 108, 157, 219, 22, 172, 20, 121, 195, 25, 159, 236, 2, 70, 75, 42, 37, 34, 2, 17, 149, 20, 176, 32, 18, 204, 56, 117, 121, 34, 15, 3, 88, 123, 64, 68, 74, 233, 63, 59, 131, 222, 194, 192, 167, 110, 217, 10, 128, 73, 129, 172, 205, 103, 212, 60, 151, 141, 10, 151, 222, 151, 180, 43, 91, 148, 201, 110, 165, 10, 238, 32, 134, 235, 99, 216, 200, 182, 31, 22, 156, 18, 209, 222, 172, 239, 193, 212, 86, 99, 62, 70, 182, 45, 175, 241, 91, 202, 179, 225, 236, 95, 71, 66, 151, 225, 203, 53, 216, 85, 102, 130, 6, 8, 25, 180, 86, 58, 140, 198, 105, 102, 177, 42, 94, 115, 247, 145, 147, 24, 231, 39, 73, 27, 10, 219, 130, 115, 188, 74, 114, 5, 177, 199, 83, 183, 106, 87, 204, 238, 231, 72, 45, 240, 39, 174, 25, 98, 53, 187, 156, 159, 244, 38\n        ];\n        assert_eq(encrypted_note_log_from_typescript, log);\n    }\n\n    #[test]\n    unconstrained fn test_encrypted_note_log_of_finalized_partial_note_matches_typescript() {\n        // All the values in this test were copied over from `tagged_log.test.ts`\n        let contract_address = AztecAddress::from_field(0x10f48cd9eff7ae5b209c557c70de2e657ee79166868676b787e9417e19260e04);\n        let storage_slot = 0x0fe46be583b71f4ab5b70c2657ff1d05cccf1d292a9369628d1a194f944e6599;\n        let ovsk_app = 0x03a6513d6def49f41d20373d2cec894c23e7492794b08fc50c0e8a1bd2512612;\n        let ovpk_m = OvpkM {\n            inner: Point {\n                x: 0x1961448682803198631f299340e4206bb12809d4bebbf012b30f59af73ba1a15,\n                y: 0x133674060c3925142aceb4f1dcd9f9137d0217d37ff8729ee5ceaa6e2790353d,\n                is_infinite: false\n            }\n        };\n        let ivpk_m = IvpkM {\n            inner: Point {\n                x: 0x260cd3904f6df16e974c29944fdc839e40fb5cf293f03df2eb370851d3a527bc,\n                y: 0x0eef2964fe6640e84c82b5d2915892409b38e9e25d39f68dd79edb725c55387f,\n                is_infinite: false\n            }\n        };\n\n        let note_value = 0x301640ceea758391b2e161c92c0513f129020f4125256afdae2646ce31099f5c;\n        let note_public_value1 = 0x14172339287e8d281545c177313f02b6aa2fedfd628cfd8b7f11a136fd0d6557;\n        let note_public_value2 = 0x0834d81e3f73c7e2809b08ae38600ffc76a2554473eeab6de7bff4b33a84feac;\n        let note = MockNoteBuilder::new(note_value).contract_address(contract_address).storage_slot(storage_slot).build();\n\n        let eph_sk = 0x1358d15019d4639393d62b97e1588c095957ce74a1c32d6ec7d62fe6705d9538;\n        let _ = OracleMock::mock(\"getRandomField\").returns(eph_sk);\n\n        let recipient = AztecAddress::from_field(0x10ee41ee4b62703b16f61e03cb0d88c4b306a9eb4a6ceeb2aff13428541689a2);\n        let num_public_values: u8 = 2;\n\n        // First we compute the encrypted log without the public values\n        let log_without_public_values: [u8; 449] = compute_encrypted_note_log(\n            contract_address,\n            storage_slot,\n            ovsk_app,\n            ovpk_m,\n            ivpk_m,\n            recipient,\n            note,\n            num_public_values\n        );\n\n        // Then we \"append\" the public values to the log by copying both the original log and the current log into a new byte array\n        let mut log: [u8; 513] = [0; 513];\n        for i in 0..449 {\n            log[i] = log_without_public_values[i];\n        }\n        let note_public_value1_bytes: [u8; 32] = note_public_value1.to_be_bytes();\n        let note_public_value2_bytes: [u8; 32] = note_public_value2.to_be_bytes();\n        for i in 0..32 {\n            log[449 + i] = note_public_value1_bytes[i];\n            log[481 + i] = note_public_value2_bytes[i];\n        }\n\n        // The following value was generated by `tagged_log.test.ts`\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let encrypted_note_log_of_finalized_partial_from_typescript = [\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 141, 70, 12, 14, 67, 77, 132, 110, 193, 234, 40, 110, 64, 144, 235, 86, 55, 111, 242, 123, 221, 193, 170, 202, 225, 216, 86, 84, 159, 112, 31, 167, 126, 79, 51, 186, 47, 71, 253, 172, 99, 112, 241, 59, 197, 241, 107, 186, 232, 87, 187, 230, 171, 62, 228, 234, 42, 51, 145, 146, 238, 242, 42, 71, 206, 13, 244, 66, 111, 195, 20, 203, 98, 148, 204, 242, 145, 183, 156, 29, 141, 54, 44, 220, 194, 35, 229, 16, 32, 204, 211, 49, 142, 112, 82, 202, 116, 241, 254, 146, 42, 217, 20, 189, 70, 228, 182, 171, 205, 104, 27, 99, 171, 28, 91, 244, 21, 30, 130, 240, 5, 72, 174, 124, 97, 197, 157, 248, 193, 23, 193, 76, 46, 141, 144, 70, 211, 45, 67, 167, 218, 129, 140, 104, 190, 41, 110, 249, 209, 68, 106, 135, 164, 80, 235, 63, 101, 80, 32, 13, 38, 99, 145, 91, 11, 173, 151, 231, 247, 65, 153, 117, 229, 167, 64, 239, 182, 126, 235, 83, 4, 169, 8, 8, 160, 4, 235, 252, 21, 96, 84, 161, 69, 145, 145, 215, 254, 161, 117, 246, 198, 65, 89, 179, 194, 90, 19, 121, 12, 202, 114, 80, 195, 14, 60, 128, 105, 142, 100, 86, 90, 108, 157, 219, 22, 172, 20, 121, 195, 25, 159, 236, 2, 70, 75, 42, 37, 34, 2, 17, 149, 20, 176, 32, 18, 204, 56, 117, 121, 34, 15, 3, 88, 123, 64, 68, 74, 233, 63, 59, 131, 222, 194, 192, 167, 110, 217, 10, 128, 73, 129, 172, 205, 103, 212, 60, 151, 141, 10, 151, 222, 151, 180, 43, 91, 148, 201, 110, 165, 10, 238, 32, 134, 235, 99, 216, 200, 182, 31, 22, 156, 18, 209, 222, 172, 239, 193, 212, 86, 99, 62, 70, 182, 45, 175, 241, 91, 202, 179, 225, 236, 95, 71, 66, 151, 225, 203, 53, 216, 85, 102, 130, 6, 8, 25, 180, 86, 58, 140, 198, 105, 102, 177, 42, 94, 115, 247, 145, 147, 24, 231, 39, 73, 27, 10, 219, 130, 115, 188, 74, 114, 5, 177, 199, 83, 183, 106, 87, 204, 238, 231, 72, 45, 240, 39, 174, 25, 98, 53, 187, 156, 159, 244, 38, 20, 23, 35, 57, 40, 126, 141, 40, 21, 69, 193, 119, 49, 63, 2, 182, 170, 47, 237, 253, 98, 140, 253, 139, 127, 17, 161, 54, 253, 13, 101, 87, 8, 52, 216, 30, 63, 115, 199, 226, 128, 155, 8, 174, 56, 96, 15, 252, 118, 162, 85, 68, 115, 238, 171, 109, 231, 191, 244, 179, 58, 132, 254, 172\n        ];\n        assert_eq(encrypted_note_log_of_finalized_partial_from_typescript, log);\n    }\n}\n"},"123":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/oracle/unsafe_rand.nr","source":"#[oracle(getRandomField)]\nunconstrained fn rand_oracle() -> Field {}\n\n// Called `unsafe_rand` because we do not constrain in circuit that we are dealing with an actual random value.\n// Instead we just trust our PXE.\nunconstrained pub fn unsafe_rand() -> Field {\n    rand_oracle()\n}\n"},"126":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/oracle/key_validation_request.nr","source":"use dep::protocol_types::abis::validation_requests::{KeyValidationRequest, key_validation_request::KEY_VALIDATION_REQUEST_LENGTH};\n\n#[oracle(getKeyValidationRequest)]\nunconstrained fn get_key_validation_request_oracle(\n    _pk_m_hash: Field,\n    _key_index: Field\n) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {}\n\nunconstrained fn get_key_validation_request_internal(\n    npk_m_hash: Field,\n    key_index: Field\n) -> KeyValidationRequest {\n    let result = get_key_validation_request_oracle(npk_m_hash, key_index);\n    KeyValidationRequest::deserialize(result)\n}\n\nunconstrained pub fn get_key_validation_request(\n    pk_m_hash: Field,\n    key_index: Field\n) -> KeyValidationRequest {\n    get_key_validation_request_internal(pk_m_hash, key_index)\n}\n"},"128":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/oracle/notes.nr","source":"use crate::note::{note_header::NoteHeader, note_interface::NoteInterface};\n\nuse dep::protocol_types::{address::AztecAddress, utils::arr_copy_slice};\n\n#[oracle(notifyCreatedNote)]\nunconstrained fn notify_created_note_oracle<let N: u32>(\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _serialized_note: [Field; N],\n    _note_hash: Field,\n    _counter: u32\n) -> Field {}\n\nunconstrained pub fn notify_created_note<let N: u32>(\n    storage_slot: Field,\n    note_type_id: Field,\n    serialized_note: [Field; N],\n    note_hash: Field,\n    counter: u32\n) -> Field {\n    notify_created_note_oracle(storage_slot, note_type_id, serialized_note, note_hash, counter)\n}\n\n#[oracle(notifyNullifiedNote)]\nunconstrained fn notify_nullified_note_oracle(_nullifier: Field, _note_hash: Field, _counter: u32) -> Field {}\n\nunconstrained pub fn notify_nullified_note(nullifier: Field, note_hash: Field, counter: u32) -> Field {\n    notify_nullified_note_oracle(nullifier, note_hash, counter)\n}\n\n#[oracle(getNotes)]\nunconstrained fn get_notes_oracle<let N: u32, let S: u32>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by_indexes: [u8; N],\n    _select_by_offsets: [u8; N],\n    _select_by_lengths: [u8; N],\n    _select_values: [Field; N],\n    _select_comparators: [u8; N],\n    _sort_by_indexes: [u8; N],\n    _sort_by_offsets: [u8; N],\n    _sort_by_lengths: [u8; N],\n    _sort_order: [u8; N],\n    _limit: u32,\n    _offset: u32,\n    _status: u8,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<let N: u32, let S: u32>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; N],\n    select_by_offsets: [u8; N],\n    select_by_lengths: [u8; N],\n    select_values: [Field; N],\n    select_comparators: [u8; N],\n    sort_by_indexes: [u8; N],\n    sort_by_offsets: [u8; N],\n    sort_by_lengths: [u8; N],\n    sort_order: [u8; N],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        return_size,\n        placeholder_fields\n    )\n}\n\nunconstrained pub fn get_notes<Note, let N: u32, let M: u32, let S: u32, let NS: u32>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; M],\n    select_by_offsets: [u8; M],\n    select_by_lengths: [u8; M],\n    select_values: [Field; M],\n    select_comparators: [u8; M],\n    sort_by_indexes: [u8; M],\n    sort_by_offsets: [u8; M],\n    sort_by_lengths: [u8; M],\n    sort_order: [u8; M],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n    _placeholder_note_length: [Field; N] // Turbofish hack? Compiler breaks calculating read_offset unless we add this parameter\n) -> [Option<Note>; S] where Note: NoteInterface<N> {\n    let fields = get_notes_oracle_wrapper(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        placeholder_fields\n    );\n    let num_notes = fields[0] as u32;\n    let contract_address = AztecAddress::from_field(fields[1]);\n    for i in 0..placeholder_opt_notes.len() {\n        if i < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: u32 = 2; // num_notes & contract_address.\n            let extra_preimage_length: u32 = 2; // nonce & note_hash_counter.\n            let read_offset: u32 = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let note_hash_counter = fields[read_offset + 1] as u32;\n            let header = NoteHeader { contract_address, nonce, storage_slot, note_hash_counter };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = Note::deserialize_content(serialized_note);\n            note.set_header(header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n// Only ever use this in private!\n#[oracle(checkNullifierExists)]\nunconstrained fn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\n// Only ever use this in private!\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n"},"130":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/oracle/keys.nr","source":"use crate::keys::{PublicKeys, public_keys::{NpkM, IvpkM, OvpkM, TpkM}};\nuse dep::protocol_types::{address::{AztecAddress, PartialAddress}, point::Point};\n\n#[oracle(getPublicKeysAndPartialAddress)]\nunconstrained fn get_public_keys_and_partial_address_oracle(_address: AztecAddress) -> [Field; 13] {}\n\nunconstrained pub fn get_public_keys_and_partial_address(address: AztecAddress) -> (PublicKeys, PartialAddress) {\n    let result = get_public_keys_and_partial_address_oracle(address);\n\n    let keys = PublicKeys {\n        npk_m: NpkM { inner: Point { x: result[0], y: result[1], is_infinite: result[2] as bool } },\n        ivpk_m: IvpkM { inner: Point { x: result[3], y: result[4], is_infinite: result[5] as bool } },\n        ovpk_m: OvpkM { inner: Point { x: result[6], y: result[7], is_infinite: result[8] as bool } },\n        tpk_m: TpkM { inner: Point { x: result[9], y: result[10], is_infinite: result[11] as bool } }\n    };\n\n    let partial_address = PartialAddress::from_field(result[12]);\n\n    (keys, partial_address)\n}\n"},"135":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/oracle/logs.nr","source":"use dep::protocol_types::{address::AztecAddress, point::Point};\n\n// = 480 + 32 * N bytes\n#[oracle(emitEncryptedNoteLog)]\nunconstrained fn emit_encrypted_note_log_oracle<let M: u32>(_note_hash_counter: u32, _encrypted_note: [u8; M], _counter: u32) {}\n\nunconstrained pub fn emit_encrypted_note_log<let M: u32>(\n    note_hash_counter: u32,\n    encrypted_note: [u8; M],\n    counter: u32\n) {\n    emit_encrypted_note_log_oracle(note_hash_counter, encrypted_note, counter)\n}\n\n#[oracle(emitEncryptedEventLog)]\nunconstrained fn emit_encrypted_event_log_oracle<let M: u32>(_contract_address: AztecAddress, _randomness: Field, _encrypted_event: [u8; M], _counter: u32) {}\n\nunconstrained pub fn emit_encrypted_event_log<let M: u32>(\n    contract_address: AztecAddress,\n    randomness: Field,\n    encrypted_event: [u8; M],\n    counter: u32\n) {\n    emit_encrypted_event_log_oracle(contract_address, randomness, encrypted_event, counter)\n}\n\n// = 480 + 32 * N bytes\n#[oracle(computeEncryptedNoteLog)]\nunconstrained fn compute_encrypted_note_log_oracle<let N: u32, let M: u32>(\n    _contract_address: AztecAddress,\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _ovsk_app: Field,\n    _ovpk_m: Point,\n    _ivpk_m: Point,\n    _recipient: AztecAddress,\n    _preimage: [Field; N]\n) -> [u8; M] {}\n\nunconstrained pub fn compute_encrypted_note_log<let N: u32, let M: u32>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    ovsk_app: Field,\n    ovpk_m: Point,\n    ivpk_m: Point,\n    recipient: AztecAddress,\n    preimage: [Field; N]\n) -> [u8; M] {\n    compute_encrypted_note_log_oracle(\n        contract_address,\n        storage_slot,\n        note_type_id,\n        ovsk_app,\n        ovpk_m,\n        ivpk_m,\n        recipient,\n        preimage\n    )\n}\n\n// = 480 + 32 * N bytes\n#[oracle(computeEncryptedEventLog)]\nunconstrained fn compute_encrypted_event_log_oracle<let N: u32, let M: u32>(\n    _contract_address: AztecAddress,\n    _randomness: Field,\n    _event_type_id: Field,\n    _ovsk_app: Field,\n    _ovpk_m: Point,\n    _ivpk_m: Point,\n    _recipient: AztecAddress,\n    _preimage: [Field; N]\n) -> [u8; M] {}\n\nunconstrained pub fn compute_encrypted_event_log<let N: u32, let M: u32>(\n    contract_address: AztecAddress,\n    randomness: Field,\n    event_type_id: Field,\n    ovsk_app: Field,\n    ovpk_m: Point,\n    ivpk_m: Point,\n    recipient: AztecAddress,\n    preimage: [Field; N]\n) -> [u8; M] {\n    compute_encrypted_event_log_oracle(\n        contract_address,\n        randomness,\n        event_type_id,\n        ovsk_app,\n        ovpk_m,\n        ivpk_m,\n        recipient,\n        preimage\n    )\n}\n\n#[oracle(emitUnencryptedLog)]\nunconstrained fn emit_unencrypted_log_oracle_private<T>(_contract_address: AztecAddress, _message: T, _counter: u32) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log_private_internal<T>(\n    contract_address: AztecAddress,\n    message: T,\n    counter: u32\n) -> Field {\n    emit_unencrypted_log_oracle_private(contract_address, message, counter)\n}\n\n#[oracle(emitContractClassUnencryptedLog)]\nunconstrained fn emit_contract_class_unencrypted_log_private<let N: u32>(\n    contract_address: AztecAddress,\n    message: [Field; N],\n    counter: u32\n) -> Field {}\n\nunconstrained pub fn emit_contract_class_unencrypted_log_private_internal<let N: u32>(contract_address: AztecAddress, message: [Field; N], counter: u32) -> Field {\n    emit_contract_class_unencrypted_log_private(contract_address, message, counter)\n}\n"},"138":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/oracle/get_public_data_witness.nr","source":"use dep::protocol_types::{constants::PUBLIC_DATA_TREE_HEIGHT, data::PublicDataTreeLeafPreimage, utils::arr_copy_slice};\n\nglobal LEAF_PREIMAGE_LENGTH: u32 = 4;\nglobal PUBLIC_DATA_WITNESS: u32 = 45;\n\npub struct PublicDataWitness {\n    index: Field,\n    leaf_preimage: PublicDataTreeLeafPreimage,\n    path: [Field; PUBLIC_DATA_TREE_HEIGHT],\n}\n\n#[oracle(getPublicDataTreeWitness)]\nunconstrained fn get_public_data_witness_oracle(\n    _block_number: u32,\n    _public_data_tree_index: Field\n) -> [Field; PUBLIC_DATA_WITNESS] {}\n\nunconstrained pub fn get_public_data_witness(\n    block_number: u32,\n    public_data_tree_index: Field\n) -> PublicDataWitness {\n    let fields = get_public_data_witness_oracle(block_number, public_data_tree_index);\n    PublicDataWitness {\n        index: fields[0],\n        leaf_preimage: PublicDataTreeLeafPreimage { slot: fields[1], value: fields[2], next_index: fields[3] as u32, next_slot: fields[4] },\n        path: arr_copy_slice(fields, [0; PUBLIC_DATA_TREE_HEIGHT], 1 + LEAF_PREIMAGE_LENGTH)\n    }\n}\n"},"139":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/oracle/get_contract_instance.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, contract_instance::ContractInstance, constants::CONTRACT_INSTANCE_LENGTH,\n    utils::reader::Reader\n};\n\n#[oracle(getContractInstance)]\nunconstrained fn get_contract_instance_oracle(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {}\n\n// Returns a ContractInstance plus a boolean indicating whether the instance was found.\n#[oracle(avmOpcodeGetContractInstance)]\nunconstrained fn get_contract_instance_oracle_avm(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {}\n\nunconstrained fn get_contract_instance_internal(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n    get_contract_instance_oracle(address)\n}\n\nunconstrained pub fn get_contract_instance_internal_avm(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {\n    get_contract_instance_oracle_avm(address)\n}\n\npub fn get_contract_instance(address: AztecAddress) -> ContractInstance {\n    let instance = unsafe {\n        ContractInstance::deserialize(get_contract_instance_internal(address))\n    };\n    // The to_address function combines all values in the instance object to produce an address, so by checking that we\n    // get the expected address we validate the entire struct.\n    assert_eq(instance.to_address(), address);\n\n    instance\n}\n\npub fn get_contract_instance_avm(address: AztecAddress) -> Option<ContractInstance> {\n    let mut reader = Reader::new(get_contract_instance_internal_avm(address));\n    let found = reader.read();\n    if found == 0 {\n        Option::none()\n    } else {\n        Option::some(reader.read_struct(ContractInstance::deserialize))\n    }\n}\n"},"143":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/utils/collapse_array.nr","source":"// Collapses an array of Options with sparse Some values into a BoundedVec, essentially unwrapping the Options and\n// removing the None values. For example, given:\n//   input: [some(3), none(), some(1)]\n// this returns\n//   collapsed: [3, 1]\npub fn collapse_array<T, let N: u32>(input: [Option<T>; N]) -> BoundedVec<T, N> where T: Eq {\n    // Computing the collpased BoundedVec would result in a very large number of constraints, since we'd need to loop\n    // over the input array and conditionally write to a dynamic vec index, which is a very unfriendly pattern to the\n    // proving backend.\n    // Instead, we use an unconstrained function to produce the final collapsed array, along with some hints, and then\n    // verify that the input and collapsed arrays are equivalent.\n    let (collapsed, collapsed_to_input_index_mapping) = unsafe {\n        get_collapse_hints(input)\n    };\n    verify_collapse_hints(input, collapsed, collapsed_to_input_index_mapping);\n    collapsed\n}\n\npub(crate) fn verify_collapse_hints<T, let N: u32>(\n    input: [Option<T>; N],\n    collapsed: BoundedVec<T, N>,\n    collapsed_to_input_index_mapping: BoundedVec<u32, N>\n) where T: Eq {\n    // collapsed should be a BoundedVec with all the non-none elements in input, in the same order. We need to lay down\n    // multiple constraints to guarantee this.\n\n    // First we check that the number of elements is correct\n    let mut count = 0;\n    for i in 0..N {\n        if input[i].is_some() {\n            count += 1;\n        }\n    }\n    assert_eq(count, collapsed.len(), \"Wrong collapsed vec length\");\n\n    // Then we check that all elements exist in the original array, and are in the same order. To do this we use the\n    // auxiliary collapsed_to_input_index_mapping array, which at index n contains the index in the input array that\n    // corresponds to the collapsed entry at index n.\n    // Example:\n    //  - input: [some(3), none(), some(1)]\n    //  - collapsed: [3, 1]\n    //  - collapsed_to_input_index_mapping: [0, 2]\n    // These two arrays should therefore have the same length.\n    assert_eq(collapsed.len(), collapsed_to_input_index_mapping.len(), \"Collapse hint vec length mismatch\");\n\n    // We now look at each collapsed entry and check that there is a valid equal entry in the input array.\n    let mut last_index = Option::none();\n    for i in 0..N {\n        if i < collapsed.len() {\n            let input_index = collapsed_to_input_index_mapping.get_unchecked(i);\n            assert(input_index < N, \"Out of bounds index hint\");\n\n            assert_eq(collapsed.get_unchecked(i), input[input_index].unwrap(), \"Wrong collapsed vec content\");\n\n            // By requiring increasing input indices, we both guarantee that we're not looking at the same input\n            // element more than once, and that we're going over them in the original order.\n            if last_index.is_some() {\n                assert(input_index > last_index.unwrap_unchecked(), \"Wrong collapsed vec order\");\n            }\n            last_index = Option::some(input_index);\n        } else {\n            // BoundedVec assumes that the unused parts of the storage are zeroed out (e.g. in the Eq impl), so we make\n            // sure that this property holds.\n            assert_eq(collapsed.get_unchecked(i), std::mem::zeroed(), \"Dirty collapsed vec storage\");\n        }\n    }\n    // We now know that:\n    //  - all values in the collapsed array exist in the input array\n    //  - the order of the collapsed values is the same as in the input array\n    //  - no input value is present more than once in the collapsed array\n    //  - the number of elements in the collapsed array is the same as in the input array.\n    // Therefore, the collapsed array is correct.\n}\n\nunconstrained fn get_collapse_hints<T, let N: u32>(input: [Option<T>; N]) -> (BoundedVec<T, N>, BoundedVec<u32, N>) {\n    let mut collapsed: BoundedVec<T, N> = BoundedVec::new();\n    let mut collapsed_to_input_index_mapping: BoundedVec<u32, N> = BoundedVec::new();\n\n    for i in 0..N {\n        if input[i].is_some() {\n            collapsed.push(input[i].unwrap_unchecked());\n            collapsed_to_input_index_mapping.push(i);\n        }\n    }\n\n    (collapsed, collapsed_to_input_index_mapping)\n}\n"},"146":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/utils/point.nr","source":"use dep::protocol_types::point::Point;\n\n// I am storing the modulus divided by 2 plus 1 here because full modulus would throw \"String literal too large\" error\n// Full modulus is 21888242871839275222246405745257275088548364400416034343698204186575808495617\nglobal BN254_FR_MODULUS_DIV_2: Field = 10944121435919637611123202872628637544274182200208017171849102093287904247808;\n\n/// Converts a public key to a byte array.\n///\n/// We don't serialize the point at infinity flag because this function is used in situations where we do not want\n/// to waste the extra byte (encrypted log).\npub fn point_to_bytes(pk: Point) -> [u8; 32] {\n    // Note that there is 1 more free bit in the 32 bytes (254 bits currently occupied by the x coordinate, 1 bit for\n    // the \"sign\") so it's possible to use that last bit as an \"is_infinite\" flag if desired in the future.\n    assert(!pk.is_infinite, \"Cannot serialize point at infinity as bytes.\");\n\n    let mut result: [u8; 32] = pk.x.to_be_bytes();\n\n    // We store only a \"sign\" of the y coordinate because the rest can be derived from the x coordinate. To get\n    // the sign we check if the y coordinate is less or equal than the curve's order minus 1 divided by 2.\n    // Ideally we'd do `y <= MOD_DIV_2`, but there's no `lte` function, so instead we do `!(y > MOD_DIV_2)`, which is\n    // equivalent, and then rewrite that as `!(MOD_DIV_2 < y)`, since we also have no `gt` function.\n    if !BN254_FR_MODULUS_DIV_2.lt(pk.y) {\n        // y is <= (modulus - 1) / 2 so we set the sign bit to 1\n        // Here we leverage that field fits into 254 bits (log2(Fr.MODULUS) < 254) and given that we serialize Fr to 32\n        // bytes and we use big-endian the 2 most significant bits are never populated. Hence we can use one of\n        // the bits as a sign bit.\n        result[0] += 128;\n    }\n\n    result\n}\n\nmod test {\n    use dep::protocol_types::point::Point;\n    use crate::utils::point::point_to_bytes;\n\n    #[test]\n    unconstrained fn test_point_to_bytes_positive_sign() {\n        let p = Point {\n            x: 0x1af41f5de96446dc3776a1eb2d98bb956b7acd9979a67854bec6fa7c2973bd73,\n            y: 0x07fc22c7f2c7057571f137fe46ea9c95114282bc95d37d71ec4bfb88de457d4a,\n            is_infinite: false\n        };\n\n        let compressed_point = point_to_bytes(p);\n\n        let expected_compressed_point_positive_sign = [\n            154, 244, 31, 93, 233, 100, 70, 220, 55, 118, 161, 235, 45, 152, 187, 149, 107, 122, 205, 153, 121, 166, 120, 84, 190, 198, 250, 124, 41, 115, 189, 115\n        ];\n\n        assert_eq(expected_compressed_point_positive_sign, compressed_point);\n    }\n\n    #[test]\n    unconstrained fn test_point_to_bytes_negative_sign() {\n        let p = Point {\n            x: 0x247371652e55dd74c9af8dbe9fb44931ba29a9229994384bd7077796c14ee2b5,\n            y: 0x26441aec112e1ae4cee374f42556932001507ad46e255ffb27369c7e3766e5c0,\n            is_infinite: false\n        };\n\n        let compressed_point = point_to_bytes(p);\n\n        let expected_compressed_point_negative_sign = [\n            36, 115, 113, 101, 46, 85, 221, 116, 201, 175, 141, 190, 159, 180, 73, 49, 186, 41, 169, 34, 153, 148, 56, 75, 215, 7, 119, 150, 193, 78, 226, 181\n        ];\n\n        assert_eq(expected_compressed_point_negative_sign, compressed_point);\n    }\n}\n"},"158":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/history/public_storage.nr","source":"use dep::protocol_types::{\n    constants::GENERATOR_INDEX__PUBLIC_LEAF_INDEX, hash::poseidon2_hash_with_separator,\n    address::AztecAddress, header::Header, utils::field::full_field_less_than\n};\nuse dep::protocol_types::merkle_tree::root::root_from_sibling_path;\n\nuse crate::{oracle::get_public_data_witness::get_public_data_witness};\n\ntrait PublicStorageHistoricalRead {\n    fn public_storage_historical_read(header: Header, storage_slot: Field, contract_address: AztecAddress) -> Field;\n}\n\nimpl PublicStorageHistoricalRead for Header {\n    fn public_storage_historical_read(self, storage_slot: Field, contract_address: AztecAddress) -> Field {\n        // 1) Compute the leaf index by siloing the storage slot with the contract address\n        let public_data_tree_index = poseidon2_hash_with_separator(\n            [contract_address.to_field(), storage_slot],\n            GENERATOR_INDEX__PUBLIC_LEAF_INDEX\n        );\n\n        // 2) Get the membership witness for the tree index.\n        let witness = unsafe {\n            get_public_data_witness(\n                self.global_variables.block_number as u32,\n                public_data_tree_index\n            )\n        };\n\n        // 3) The witness is made up of two parts: the preimage of the leaf and the proof that it exists in the tree.\n        // We first prove that the witness is indeed valid for the public data tree, i.e. that the preimage is of a\n        // value present in the tree. Note that `hash` returns not just the hash of the value but also the metadata\n        // (slot, next index and next slot).\n        assert(\n            self.state.partial.public_data_tree.root\n            == root_from_sibling_path(witness.leaf_preimage.hash(), witness.index, witness.path), \"Proving public value inclusion failed\"\n        );\n\n        // 4) Now that we know the preimage is valid, we determine the value that's represented by this tree entry. Here\n        // we have two scenarios:\n        // 1. The tree entry is initialized, and the value is the same as the one in the witness\n        // 2. The entry was never initialized, and the value is default zero (the default)\n        // The code below is based on the same checks in `validate_public_data_reads` in `base_rollup_inputs`.\n        let preimage = witness.leaf_preimage;\n\n        let is_less_than_slot = full_field_less_than(preimage.slot, public_data_tree_index);\n        let is_next_greater_than = full_field_less_than(public_data_tree_index, preimage.next_slot);\n        let is_max = ((preimage.next_index == 0) & (preimage.next_slot == 0));\n        let is_in_range = is_less_than_slot & (is_next_greater_than | is_max);\n\n        let value = if is_in_range {\n            0\n        } else {\n            assert_eq(preimage.slot, public_data_tree_index, \"Public data tree index doesn't match witness\");\n            preimage.value\n        };\n\n        value\n    }\n}\n"},"163":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/initializer.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, hash::poseidon2_hash_with_separator, constants::GENERATOR_INDEX__CONSTRUCTOR,\n    abis::function_selector::FunctionSelector\n};\n\nuse crate::{\n    context::{PrivateContext, PublicContext}, oracle::get_contract_instance::get_contract_instance,\n    oracle::get_contract_instance::get_contract_instance_avm\n};\n\npub fn mark_as_initialized_public(context: &mut PublicContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier((*context).this_address());\n    context.push_nullifier(init_nullifier);\n}\n\npub fn mark_as_initialized_private(context: &mut PrivateContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier((*context).this_address());\n    context.push_nullifier(init_nullifier);\n}\n\npub fn assert_is_initialized_public(context: &mut PublicContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    assert(context.nullifier_exists(init_nullifier, context.this_address()), \"Not initialized\");\n}\n\npub fn assert_is_initialized_private(context: &mut PrivateContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    context.push_nullifier_read_request(init_nullifier);\n}\n\nfn compute_unsiloed_contract_initialization_nullifier(address: AztecAddress) -> Field {\n    address.to_field()\n}\n\npub fn assert_initialization_matches_address_preimage_public(context: PublicContext) {\n    let address = context.this_address();\n    let instance = get_contract_instance_avm(address).unwrap();\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn assert_initialization_matches_address_preimage_private(context: PrivateContext) {\n    let address = context.this_address();\n    let instance = get_contract_instance(address);\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn compute_initialization_hash(init_selector: FunctionSelector, init_args_hash: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [init_selector.to_field(), init_args_hash],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n"},"164":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/hash.nr","source":"use dep::protocol_types::{\n    address::{AztecAddress, EthAddress},\n    constants::{GENERATOR_INDEX__SECRET_HASH, GENERATOR_INDEX__MESSAGE_NULLIFIER, GENERATOR_INDEX__FUNCTION_ARGS},\n    point::Point, traits::Hash,\n    hash::{sha256_to_field, poseidon2_hash_with_separator, poseidon2_hash_with_separator_slice}\n};\nuse crate::oracle::logs_traits::ToBytesForUnencryptedLog;\n\npub use dep::protocol_types::hash::{compute_siloed_nullifier, pedersen_hash};\n\npub fn pedersen_commitment<let N: u32>(inputs: [Field; N], hash_index: u32) -> Point {\n    std::hash::pedersen_commitment_with_separator(inputs, hash_index)\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    poseidon2_hash_with_separator([secret], GENERATOR_INDEX__SECRET_HASH)\n}\n\npub fn compute_unencrypted_log_hash<T, let N: u32, let M: u32>(\n    contract_address: AztecAddress,\n    log: T\n) -> Field where T: ToBytesForUnencryptedLog<N, M> {\n    let message_bytes: [u8; N] = log.to_be_bytes_arr();\n    // can't use N - not in scope error\n    let n = message_bytes.len();\n    let mut hash_bytes = [0; M];\n    // Address is converted to 32 bytes in ts\n    let address_bytes = contract_address.to_be_bytes_arr();\n    for i in 0..32 {\n        hash_bytes[i] = address_bytes[i];\n    }\n    let len_bytes: [u8; 4] = (n as Field).to_be_bytes();\n    for i in 0..4 {\n        hash_bytes[32 + i] = len_bytes[i];\n    }\n    for i in 0..n {\n        hash_bytes[36 + i] = message_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\npub fn compute_message_hash(\n    sender: EthAddress,\n    chain_id: Field,\n    recipient: AztecAddress,\n    version: Field,\n    content: Field,\n    secret_hash: Field\n) -> Field {\n    let mut hash_bytes = [0 as u8; 192];\n    let sender_bytes: [u8; 32] = sender.to_field().to_be_bytes();\n    let chain_id_bytes: [u8; 32] = chain_id.to_be_bytes();\n    let recipient_bytes: [u8; 32] = recipient.to_field().to_be_bytes();\n    let version_bytes: [u8; 32] = version.to_be_bytes();\n    let content_bytes: [u8; 32] = content.to_be_bytes();\n    let secret_hash_bytes: [u8; 32] = secret_hash.to_be_bytes();\n\n    for i in 0..32 {\n        hash_bytes[i] = sender_bytes[i];\n        hash_bytes[i + 32] = chain_id_bytes[i];\n        hash_bytes[i + 64] = recipient_bytes[i];\n        hash_bytes[i + 96] = version_bytes[i];\n        hash_bytes[i + 128] = content_bytes[i];\n        hash_bytes[i + 160] = secret_hash_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\n// The nullifier of a l1 to l2 message is the hash of the message salted with the secret and index of the message hash\n// in the L1 to L2 message tree\npub fn compute_message_nullifier(message_hash: Field, secret: Field, leaf_index: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [message_hash, secret, leaf_index],\n        GENERATOR_INDEX__MESSAGE_NULLIFIER\n    )\n}\n\npub struct ArgsHasher {\n    fields: [Field],\n}\n\nimpl Hash for ArgsHasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl ArgsHasher {\n    pub fn new() -> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<let N: u32>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n\npub fn hash_args_array<let N: u32>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        poseidon2_hash_with_separator(args, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\npub fn hash_args(args: [Field]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        poseidon2_hash_with_separator_slice(args, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n#[test]\nunconstrained fn compute_var_args_hash() {\n    let mut input = ArgsHasher::new();\n    for i in 0..100 {\n        input.add(i as Field);\n    }\n    let hash = input.hash();\n    dep::std::println(hash);\n    assert(hash == 0x19b0d74feb06ebde19edd85a28986c97063e84b3b351a8b666c7cac963ce655f);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_array() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = [\n        0x20660de09f35f876e3e69d227b2a35166ad05f09d82d06366ec9b6f65a51fec2,\n        0x1b52bfe3b8689761916f76dc3d38aa8810860db325cd39ca611eed980091f01c,\n        0x2e559c4045c378a56ad13b9edb1e8de4e7ad3b3aa35cc7ba9ec77f7a68fa43a4,\n        0x25d0f689c4a4178a29d59306f2675824d19be6d25e44fa03b03f49c263053dd2,\n        0x2d513a722d6f352dc0961f156afdc5e31495b9f0e35cb069261a8e55e2df67fd\n    ];\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x0095b2d17ab72f4b27a341f7ac63e49ec73935ae8c9181a0ac02023eb12f3284);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_addr() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = AztecAddress::from_field(0x26aa302d4715fd8a687453cb26d616b0768027bd54bcae56b09d908ecd9f8303);\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x0083ab647dfb26e7ddee90a0f4209d049d4660cab42000c544b986aaa84c55a3);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"dummy\";\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x00629e88ebd6374f44aa6cfe07e251ecf07213ebc7267e8f6b578ae57ffd6c20);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_longer_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"Hello this is a string\";\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x0098637962f7d34fa202b7ffad8a07a238c5d1fd897b82a108f7f467fa73b841);\n}\n"},"167":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/keys/point_to_symmetric_key.nr","source":"use dep::protocol_types::{constants::GENERATOR_INDEX__SYMMETRIC_KEY, scalar::Scalar, point::Point, utils::arr_copy_slice};\nuse crate::utils::point::point_to_bytes;\nuse std::{hash::sha256, embedded_curve_ops::multi_scalar_mul};\n\n// TODO(#5726): This function is called deriveAESSecret in TS. I don't like point_to_symmetric_key name much since\n// point is not the only input of the function. Unify naming with TS once we have a better name.\npub fn point_to_symmetric_key(secret: Scalar, point: Point) -> [u8; 32] {\n    let shared_secret: Point = multi_scalar_mul([point], [secret]);\n    let shared_secret = point_to_bytes(shared_secret);\n    let mut shared_secret_bytes_with_separator = [0 as u8; 33];\n    shared_secret_bytes_with_separator = arr_copy_slice(shared_secret, shared_secret_bytes_with_separator, 0);\n    shared_secret_bytes_with_separator[32] = GENERATOR_INDEX__SYMMETRIC_KEY;\n    sha256(shared_secret_bytes_with_separator)\n}\n\n#[test]\nunconstrained fn test_point_to_symmetric_key_matches_noir() {\n    // Value taken from \"derive shared secret\" test in encrypt_buffer.test.ts\n    let secret = Scalar {\n        lo: 0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n        hi: 0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n    };\n    let point = Point {\n        x: 0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n        y: 0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n        is_infinite: false\n    };\n\n    let key = point_to_symmetric_key(secret, point);\n\n    // The following value was generated by `encrypt_buffer.test.ts`.\n    // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n    let key_from_typescript = [\n        251, 232, 177, 34, 2, 174, 35, 92, 165, 118, 168, 3, 153, 140, 46, 210, 203, 154, 184, 158, 236, 33, 95, 77, 93, 120, 72, 88, 190, 209, 64, 159\n    ];\n    assert_eq(key, key_from_typescript);\n}\n"},"169":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/keys/getters/mod.nr","source":"use dep::protocol_types::address::AztecAddress;\nuse crate::{\n    oracle::{keys::get_public_keys_and_partial_address, key_validation_request::get_key_validation_request},\n    keys::{public_keys::PublicKeys, constants::{NULLIFIER_INDEX, OUTGOING_INDEX}}\n};\n\nmod test;\n\nunconstrained pub fn get_nsk_app(npk_m_hash: Field) -> Field {\n    get_key_validation_request(npk_m_hash, NULLIFIER_INDEX).sk_app\n}\n\n// A helper function that gets app-siloed outgoing viewing key for a given `ovpk_m_hash`. This function is used\n// in unconstrained contexts only - when computing unconstrained note logs. The safe alternative is `request_ovsk_app`\n// function defined on `PrivateContext`.\nunconstrained pub fn get_ovsk_app(ovpk_m_hash: Field) -> Field {\n    get_key_validation_request(ovpk_m_hash, OUTGOING_INDEX).sk_app\n}\n\n// Returns all public keys for a given account, applying proper constraints to the context. We read all\n// keys at once since the constraints for reading them all are actually fewer than if we read them one at a time - any\n// read keys that are not required by the caller can simply be discarded.\npub fn get_public_keys(account: AztecAddress) -> PublicKeys {\n    let (hinted_canonical_public_keys, partial_address) = unsafe {\n        get_public_keys_and_partial_address(account)\n    };\n    assert_eq(\n        account, AztecAddress::compute(hinted_canonical_public_keys.hash(), partial_address), \"Invalid public keys hint for address\"\n    );\n\n    hinted_canonical_public_keys\n}\n"},"170":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/keys/public_keys.nr","source":"use dep::protocol_types::{\n    address::PublicKeysHash, constants::GENERATOR_INDEX__PUBLIC_KEYS_HASH,\n    hash::poseidon2_hash_with_separator, point::{Point, POINT_LENGTH},\n    traits::{Deserialize, Serialize, Empty, is_empty, Hash}\n};\n\nglobal PUBLIC_KEYS_LENGTH: u32 = 12;\n\npub struct PublicKeys {\n    npk_m: NpkM,\n    ivpk_m: IvpkM,\n    ovpk_m: OvpkM,\n    tpk_m: TpkM,\n}\n\npub trait ToPoint {\n    fn to_point(self) -> Point;\n}\n\npub struct NpkM {\n    inner: Point\n}\n\nimpl ToPoint for NpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Serialize<POINT_LENGTH> for NpkM {\n    fn serialize(self) -> [Field; POINT_LENGTH] {\n        self.inner.serialize()\n    }\n}\n\n// Note: If we store npk_m_hash directly we can remove this trait implementation. See #8091\nimpl Hash for NpkM {\n    fn hash(self) -> Field {\n        self.inner.hash()\n    }\n}\n\npub struct IvpkM {\n    inner: Point\n}\n\nimpl ToPoint for IvpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Serialize<POINT_LENGTH> for IvpkM {\n    fn serialize(self) -> [Field; POINT_LENGTH] {\n        self.inner.serialize()\n    }\n}\n\npub struct OvpkM {\n    inner: Point\n}\n\nimpl Hash for OvpkM {\n    fn hash(self) -> Field {\n        self.inner.hash()\n    }\n}\n\nimpl ToPoint for OvpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Serialize<POINT_LENGTH> for OvpkM {\n    fn serialize(self) -> [Field; POINT_LENGTH] {\n        self.inner.serialize()\n    }\n}\n\npub struct TpkM {\n    inner: Point\n}\n\nimpl ToPoint for TpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Empty for PublicKeys {\n    fn empty() -> Self {\n        PublicKeys {\n            npk_m: NpkM { inner: Point::empty() },\n            ivpk_m: IvpkM { inner: Point::empty() },\n            ovpk_m: OvpkM { inner: Point::empty() },\n            tpk_m: TpkM { inner: Point::empty() }\n        }\n    }\n}\n\nimpl Eq for PublicKeys {\n    fn eq(self, other: PublicKeys) -> bool {\n        (self.npk_m.inner == other.npk_m.inner)\n            & (self.ivpk_m.inner == other.ivpk_m.inner)\n            & (self.ovpk_m.inner == other.ovpk_m.inner)\n            & (self.tpk_m.inner == other.tpk_m.inner)\n    }\n}\n\nimpl PublicKeys {\n    pub fn hash(self) -> PublicKeysHash {\n        PublicKeysHash::from_field(\n            if is_empty(self) {\n            0\n        } else {\n            poseidon2_hash_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_KEYS_HASH as Field)\n        }\n        )\n    }\n}\n\nimpl Serialize<PUBLIC_KEYS_LENGTH> for PublicKeys {\n    fn serialize(self) -> [Field; PUBLIC_KEYS_LENGTH] {\n        [\n            self.npk_m.inner.x,\n            self.npk_m.inner.y,\n            self.npk_m.inner.is_infinite as Field,\n            self.ivpk_m.inner.x,\n            self.ivpk_m.inner.y,\n            self.ivpk_m.inner.is_infinite as Field,\n            self.ovpk_m.inner.x,\n            self.ovpk_m.inner.y,\n            self.ovpk_m.inner.is_infinite as Field,\n            self.tpk_m.inner.x,\n            self.tpk_m.inner.y,\n            self.tpk_m.inner.is_infinite as Field\n        ]\n    }\n}\n\nimpl Deserialize<PUBLIC_KEYS_LENGTH> for PublicKeys {\n    fn deserialize(serialized: [Field; PUBLIC_KEYS_LENGTH]) -> PublicKeys {\n        PublicKeys {\n            npk_m: NpkM { inner: Point { x: serialized[0], y: serialized[1], is_infinite: serialized[2] as bool } },\n            ivpk_m: IvpkM { inner: Point { x: serialized[3], y: serialized[4], is_infinite: serialized[5] as bool } },\n            ovpk_m: OvpkM { inner: Point { x: serialized[6], y: serialized[7], is_infinite: serialized[8] as bool } },\n            tpk_m: TpkM { inner: Point { x: serialized[9], y: serialized[10], is_infinite: serialized[11] as bool } }\n        }\n    }\n}\n\n#[test]\nunconstrained fn compute_public_keys_hash() {\n    let keys = PublicKeys {\n        npk_m: NpkM { inner: Point { x: 1, y: 2, is_infinite: false } },\n        ivpk_m: IvpkM { inner: Point { x: 3, y: 4, is_infinite: false } },\n        ovpk_m: OvpkM { inner: Point { x: 5, y: 6, is_infinite: false } },\n        tpk_m: TpkM { inner: Point { x: 7, y: 8, is_infinite: false } }\n    };\n\n    let actual = keys.hash();\n    let expected_public_keys_hash = 0x0fecd9a32db731fec1fded1b9ff957a1625c069245a3613a2538bd527068b0ad;\n\n    assert(actual.to_field() == expected_public_keys_hash);\n}\n\n#[test]\nunconstrained fn compute_empty_hash() {\n    let keys = PublicKeys::empty();\n\n    let actual = keys.hash();\n    let test_data_empty_hash = 0x0000000000000000000000000000000000000000000000000000000000000000;\n\n    assert(actual.to_field() == test_data_empty_hash);\n}\n\n#[test]\nunconstrained fn test_public_keys_serialization() {\n    let keys = PublicKeys {\n        npk_m: NpkM { inner: Point { x: 1, y: 2, is_infinite: false } },\n        ivpk_m: IvpkM { inner: Point { x: 3, y: 4, is_infinite: false } },\n        ovpk_m: OvpkM { inner: Point { x: 5, y: 6, is_infinite: false } },\n        tpk_m: TpkM { inner: Point { x: 7, y: 8, is_infinite: false } }\n    };\n\n    let serialized = keys.serialize();\n    let deserialized = PublicKeys::deserialize(serialized);\n\n    assert_eq(keys.npk_m.inner.x, deserialized.npk_m.inner.x);\n    assert_eq(keys.npk_m.inner.y, deserialized.npk_m.inner.y);\n    assert_eq(keys.ivpk_m.inner.x, deserialized.ivpk_m.inner.x);\n    assert_eq(keys.ivpk_m.inner.y, deserialized.ivpk_m.inner.y);\n    assert_eq(keys.ovpk_m.inner.x, deserialized.ovpk_m.inner.x);\n    assert_eq(keys.ovpk_m.inner.y, deserialized.ovpk_m.inner.y);\n    assert_eq(keys.tpk_m.inner.x, deserialized.tpk_m.inner.x);\n    assert_eq(keys.tpk_m.inner.y, deserialized.tpk_m.inner.y);\n}\n"},"177":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/state_vars/shared_immutable.nr","source":"use crate::{context::{PrivateContext, PublicContext, UnconstrainedContext}, state_vars::storage::Storage};\nuse dep::protocol_types::{constants::INITIALIZATION_SLOT_SEPARATOR, traits::{Deserialize, Serialize}};\n\n// Just like PublicImmutable but with the ability to read from private functions.\npub struct SharedImmutable<T, Context>{\n    context: Context,\n    storage_slot: Field,\n}\n\nimpl<T, Context> Storage<T> for SharedImmutable<T, Context> {}\n\nimpl<T, Context> SharedImmutable<T, Context> {\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self { context, storage_slot }\n    }\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> SharedImmutable<T, &mut PublicContext> where T: Serialize<T_SERIALIZED_LEN> + Deserialize<T_SERIALIZED_LEN> {\n    // Intended to be only called once.\n    pub fn initialize(self, value: T) {\n        // We check that the struct is not yet initialized by checking if the initialization slot is 0\n        let initialization_slot = INITIALIZATION_SLOT_SEPARATOR + self.storage_slot;\n        let init_field: Field = self.context.storage_read(initialization_slot);\n        assert(init_field == 0, \"SharedImmutable already initialized\");\n\n        // We populate the initialization slot with a non-zero value to indicate that the struct is initialized\n        self.context.storage_write(initialization_slot, 0xdead);\n        self.context.storage_write(self.storage_slot, value);\n    }\n\n    pub fn read_public(self) -> T {\n        self.context.storage_read(self.storage_slot)\n    }\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> SharedImmutable<T, UnconstrainedContext> where T: Serialize<T_SERIALIZED_LEN> + Deserialize<T_SERIALIZED_LEN> {\n    unconstrained pub fn read_public(self) -> T {\n        self.context.storage_read(self.storage_slot)\n    }\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> SharedImmutable<T, &mut PrivateContext> where T: Serialize<T_SERIALIZED_LEN> + Deserialize<T_SERIALIZED_LEN> {\n    pub fn read_private(self) -> T {\n        let header = self.context.get_header();\n        let mut fields = [0; T_SERIALIZED_LEN];\n\n        for i in 0..fields.len() {\n            fields[i] =\n                header.public_storage_historical_read(\n                    self.storage_slot + i as Field,\n                    (*self.context).this_address()\n                );\n        }\n        T::deserialize(fields)\n    }\n}\n"},"178":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/state_vars/map.nr","source":"use dep::protocol_types::{storage::map::derive_storage_slot_in_map, traits::ToField};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:map\npub struct Map<K, V, Context> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<K, T, Context> Storage<T> for Map<K, T, Context> {}\n\nimpl<K, V, Context> Map<K, V, Context> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map { context, storage_slot, state_var_constructor }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: K) -> V where K: ToField {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = derive_storage_slot_in_map(self.storage_slot, key);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n"},"190":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/state_vars/private_set.nr","source":"use dep::protocol_types::{constants::MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, abis::read_request::ReadRequest};\nuse crate::context::{PrivateContext, PublicContext, UnconstrainedContext};\nuse crate::note::{\n    constants::MAX_NOTES_PER_PAGE,\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note_unsafe},\n    note_getter::{get_notes, view_notes}, note_getter_options::NoteGetterOptions,\n    note_interface::{NoteInterface, NullifiableNote}, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_request, note_emission::NoteEmission\n};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:struct\npub struct PrivateSet<Note, Context> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:struct\n\nimpl<T, Context> Storage<T> for PrivateSet<T, Context> {}\n\nimpl<Note, Context> PrivateSet<Note, Context> {\n    // docs:start:new\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PrivateSet { context, storage_slot }\n    }\n    // docs:end:new\n}\n\nimpl<Note, let N: u32> PrivateSet<Note, &mut PublicContext> where Note: NoteInterface<N> + NullifiableNote {\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(self.context, self.storage_slot, note);\n    }\n    // docs:end:insert_from_public\n}\n\nimpl<Note, let N: u32> PrivateSet<Note, &mut PrivateContext> where Note: NoteInterface<N> + NullifiableNote + Eq {\n    // docs:start:insert\n    pub fn insert(self, note: &mut Note) -> NoteEmission<Note> {\n        create_note(self.context, self.storage_slot, note)\n    }\n    // docs:end:insert\n\n    pub fn pop_notes<PREPROCESSOR_ARGS, FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n    ) -> BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> {\n        let (notes, note_hashes) = get_notes(self.context, self.storage_slot, options);\n        // We iterate in a range 0..options.limit instead of 0..notes.len() because options.limit is known at compile\n        // time and hence will result in less constraints when set to a lower value than\n        // MAX_NOTE_HASH_READ_REQUESTS_PER_CALL.\n        for i in 0..options.limit {\n            if i < notes.len() {\n                let note = notes.get_unchecked(i);\n                let note_hash = note_hashes.get_unchecked(i);\n                // We immediately destroy the note without doing any of the read request checks `remove` typically\n                // performs because we know that the `get_notes` call has already placed those constraints.\n                destroy_note_unsafe(self.context, note, note_hash);\n            }\n        }\n\n        notes\n    }\n\n    /// Note that if you obtained the note via `get_notes` it's much better to use `pop_notes` as `pop_notes` results\n    /// in significantly less constrains due to avoiding an extra hash and read request check.\n    pub fn remove(self, note: Note) {\n        let note_hash = compute_note_hash_for_read_request(note);\n        let has_been_read = self.context.note_hash_read_requests.any(|r: ReadRequest| r.value == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note_unsafe(self.context, note, note_hash);\n    }\n\n    /// Note that if you later on remove the note it's much better to use `pop_notes` as `pop_notes` results\n    /// in significantly less constrains due to avoiding 1 read request check.\n    pub fn get_notes<PREPROCESSOR_ARGS, FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n    ) -> BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> {\n        get_notes(self.context, self.storage_slot, options).0\n    }\n}\n\nimpl<Note, let N: u32> PrivateSet<Note, UnconstrainedContext> where Note: NoteInterface<N> + NullifiableNote {\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>\n    ) -> BoundedVec<Note, MAX_NOTES_PER_PAGE> {\n        view_notes(self.storage_slot, options)\n    }\n    // docs:end:view_notes\n}\n"},"232":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/abis/validation_requests/key_validation_request.nr","source":"use crate::{traits::{Empty, Serialize, Deserialize}, point::Point};\npub use crate::constants::KEY_VALIDATION_REQUEST_LENGTH;\n\npub struct KeyValidationRequest {\n    pk_m: Point,\n    sk_app: Field, // not a grumpkin scalar because it's output of poseidon2\n}\n\nimpl Eq for KeyValidationRequest {\n    fn eq(self, request: KeyValidationRequest) -> bool {\n        (request.pk_m.eq(self.pk_m)) & (request.sk_app.eq(self.sk_app))\n    }\n}\n\nimpl Empty for KeyValidationRequest {\n    fn empty() -> Self {\n        KeyValidationRequest { pk_m: Point::empty(), sk_app: 0 }\n    }\n}\n\nimpl Serialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn serialize(self) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {\n        [\n            self.pk_m.x,\n            self.pk_m.y,\n            self.pk_m.is_infinite as Field,\n            self.sk_app\n        ]\n    }\n}\n\nimpl Deserialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn deserialize(fields: [Field; KEY_VALIDATION_REQUEST_LENGTH]) -> Self {\n        Self { pk_m: Point { x: fields[0], y: fields[1], is_infinite: fields[2] as bool }, sk_app: fields[3] }\n    }\n}\n"},"24":{"path":"std/embedded_curve_ops.nr","source":"use crate::ops::arith::{Add, Sub, Neg};\nuse crate::cmp::Eq;\n\n/// A point on the embedded elliptic curve\n/// By definition, the base field of the embedded curve is the scalar field of the proof system curve, i.e the Noir Field.\n/// x and y denotes the Weierstrass coordinates of the point, if is_infinite is false.\npub struct EmbeddedCurvePoint {\n    x: Field,\n    y: Field,\n    is_infinite: bool\n}\n\nimpl EmbeddedCurvePoint {\n    /// Elliptic curve point doubling operation\n    /// returns the doubled point of a point P, i.e P+P\n    fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    /// Returns the null element of the curve; 'the point at infinity'\n    fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    /// Adds two points P+Q, using the curve addition formula, and also handles point at infinity\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    /// Points subtraction operation, using addition and negation\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    /// Negates a point P, i.e returns -P, by negating the y coordinate.\n    /// If the point is at infinity, then the result is also at infinity.\n    fn neg(self) -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: self.x, y: -self.y, is_infinite: self.is_infinite }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    /// Checks whether two points are equal\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite)\n            | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\n/// Scalar for the embedded curve represented as low and high limbs\n/// By definition, the scalar field of the embedded curve is base field of the proving system curve.\n/// It may not fit into a Field element, so it is represented with two Field elements; its low and high limbs.\npub struct EmbeddedCurveScalar {\n    lo: Field,\n    hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    #[field(bn254)]\n    fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a,b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n\n    //Bytes to scalar: take the first (after the specified offset) 16 bytes of the input as the lo value, and the next 16 bytes as the hi value\n    #[field(bn254)]\n    fn from_bytes(bytes: [u8; 64], offset: u32) -> EmbeddedCurveScalar {\n        let mut v = 1;\n        let mut lo = 0 as Field;\n        let mut hi = 0 as Field;\n        for i in 0..16 {\n            lo = lo + (bytes[offset+31 - i] as Field) * v;\n            hi = hi + (bytes[offset+15 - i] as Field) * v;\n            v = v * 256;\n        }\n        let sig_s = crate::embedded_curve_ops::EmbeddedCurveScalar { lo, hi };\n        sig_s\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, other: Self) -> bool {\n        (other.hi == self.hi) & (other.lo == self.lo)\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the \n// underlying proof system.\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N]\n) -> EmbeddedCurvePoint\n// docs:end:multi_scalar_mul\n{\n    let point_array = multi_scalar_mul_array_return(points, scalars);\n    EmbeddedCurvePoint { x: point_array[0], y: point_array[1], is_infinite: point_array[2] as bool }\n}\n\n#[foreign(multi_scalar_mul)]\nfn multi_scalar_mul_array_return<let N: u32>(points: [EmbeddedCurvePoint; N], scalars: [EmbeddedCurveScalar; N]) -> [Field; 3] {}\n\n#[foreign(multi_scalar_mul)]\npub(crate) fn multi_scalar_mul_slice(points: [EmbeddedCurvePoint], scalars: [EmbeddedCurveScalar]) -> [Field; 3] {}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(scalar: EmbeddedCurveScalar) -> EmbeddedCurvePoint\n// docs:end:fixed_base_scalar_mul\n{\n    let g1 = EmbeddedCurvePoint { x: 1, y: 17631683881184975370165255887551781615748388533673675138860, is_infinite: false };\n    multi_scalar_mul([g1], [scalar])\n}\n\n/// This function only assumes that the points are on the curve\n/// It handles corner cases around the infinity point causing some overhead compared to embedded_curve_add_not_nul and embedded_curve_add_unsafe\n// This is a hack because returning an `EmbeddedCurvePoint` from a foreign function in brillig returns a [BrilligVariable::SingleAddr; 2] rather than BrilligVariable::BrilligArray\n// as is defined in the brillig bytecode format. This is a workaround which allows us to fix this without modifying the serialization format.\n// docs:start:embedded_curve_add\npub fn embedded_curve_add(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    // docs:end:embedded_curve_add\n    let x_coordinates_match = point1.x == point2.x;\n    let y_coordinates_match = point1.y == point2.y;\n    let double_predicate = (x_coordinates_match & y_coordinates_match);\n    let infinity_predicate = (x_coordinates_match & !y_coordinates_match);\n    let point1_1 = EmbeddedCurvePoint { x: point1.x + (x_coordinates_match as Field), y: point1.y, is_infinite: x_coordinates_match };\n    // point1_1 is guaranteed to have a different abscissa than point2\n    let mut result = embedded_curve_add_unsafe(point1_1, point2);\n    result.is_infinite = x_coordinates_match;\n\n    // dbl if x_match, y_match\n    let double = embedded_curve_add_unsafe(point1, point1);\n    result = if double_predicate { double } else { result };\n\n    // infinity if x_match, !y_match\n    if point1.is_infinite {\n        result= point2;\n    }\n    if point2.is_infinite {\n        result = point1;\n    }\n    let mut result_is_infinity = infinity_predicate & (!point1.is_infinite & !point2.is_infinite);\n    result.is_infinite = result_is_infinity | (point1.is_infinite & point2.is_infinite);\n    result\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(_point1: EmbeddedCurvePoint, _point2: EmbeddedCurvePoint) -> [Field; 3] {}\n\n/// This function assumes that:\n/// The points are on the curve, and\n/// The points don't share an x-coordinate, and\n/// Neither point is the infinity point.\n/// If it is used with correct input, the function ensures the correct non-zero result is returned.\n/// Except for points on the curve, the other assumptions are checked by the function. It will cause assertion failure if they are not respected.\npub fn embedded_curve_add_not_nul(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    assert(point1.x != point2.x);\n    assert(!point1.is_infinite);\n    assert(!point2.is_infinite);\n    embedded_curve_add_unsafe(point1, point2)\n}\n\n/// Unsafe ec addition\n/// If the inputs are the same, it will perform a doubling, but only if point1 and point2 are the same variable.\n/// If they have the same value but are different variables, the result will be incorrect because in this case\n/// it assumes (but does not check) that the points' x-coordinates are not equal.\n/// It also assumes neither point is the infinity point.\npub fn embedded_curve_add_unsafe(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    let point_array = embedded_curve_add_array_return(point1, point2);\n    let x = point_array[0];\n    let y = point_array[1];\n\n    EmbeddedCurvePoint { x, y, is_infinite: false }\n}\n"},"241":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_selector.nr","source":"use crate::utils::field::field_from_bytes;\nuse crate::traits::{Serialize, Deserialize, FromField, ToField, Empty};\n\nglobal SELECTOR_SIZE: u32 = 4;\n\npub struct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self { inner: fields[0] as u32 }\n    }\n}\n\nimpl FromField for FunctionSelector {\n    fn from_field(field: Field) -> Self {\n        Self { inner: field as u32 }\n    }\n}\n\nimpl ToField for FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n}\n\nimpl Empty for FunctionSelector {\n    fn empty() -> Self {\n        Self { inner: 0 as u32 }\n    }\n}\n\nimpl FunctionSelector {\n    pub fn from_u32(value: u32) -> Self {\n        Self { inner: value }\n    }\n\n    pub fn from_signature<let N: u32>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = crate::hash::poseidon2_hash_bytes(bytes);\n\n        // We choose the last SELECTOR_SIZE bytes of the hash to avoid getting the first byte that is not full\n        let hash_bytes = hash.to_be_bytes::<SELECTOR_SIZE>();\n\n        FunctionSelector::from_field(field_from_bytes(hash_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n\n#[test]\nfn test_is_valid_selector() {\n    let selector = FunctionSelector::from_signature(\"IS_VALID()\");\n    assert_eq(selector.to_field(), 0x73cdda47);\n}\n\n#[test]\nfn test_long_selector() {\n    let selector = FunctionSelector::from_signature(\"foo_and_bar_and_baz_and_foo_bar_baz_and_bar_foo\");\n    assert_eq(selector.to_field(), 0x7590a997);\n}\n"},"25":{"path":"std/field/bn254.nr","source":"use crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\nglobal TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let mut offset = 1;\n    for i in 0..16 {\n        low += (x_bytes[i] as Field) * offset;\n        high += (x_bytes[i + 16] as Field) * offset;\n        offset *= 256;\n    }\n\n    (low, high)\n}\n\nunconstrained pub(crate) fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nfn compute_lt(x: Field, y: Field, num_bytes: u32) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i];\n            let y_byte = y_bytes[num_bytes - 1 - i];\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nfn compute_lte(x: Field, y: Field, num_bytes: u32) -> bool {\n    if x == y {\n        true\n    } else {\n        compute_lt(x, y, num_bytes)\n    }\n}\n\nunconstrained fn lt_32_hint(x: Field, y: Field) -> bool {\n    compute_lt(x, y, 32)\n}\n\nunconstrained fn lte_16_hint(x: Field, y: Field) -> bool {\n    compute_lte(x, y, 16)\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    unsafe {\n        let borrow = lte_16_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size(128);\n        rhi.assert_max_bit_size(128);\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size(128);\n            xhi.assert_max_bit_size(128);\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(compute_lt(b, a, 32));\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        compute_lt(b, a, 32)\n    } else if a == b {\n        false\n    } else {\n        // Take a hint of the comparison and verify it\n        unsafe {\n            if lt_32_hint(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{decompose, compute_lt, assert_gt, gt, TWO_POW_128, compute_lte, PLO, PHI};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    fn check_compute_lt() {\n        assert(compute_lt(0, 1, 16));\n        assert(compute_lt(0, 0x100, 16));\n        assert(compute_lt(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lt(0, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_compute_lte() {\n        assert(compute_lte(0, 1, 16));\n        assert(compute_lte(0, 0x100, 16));\n        assert(compute_lte(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lte(0, TWO_POW_128, 16));\n\n        assert(compute_lte(0, 0, 16));\n        assert(compute_lte(0x100, 0x100, 16));\n        assert(compute_lte(TWO_POW_128 - 1, TWO_POW_128 - 1, 16));\n        assert(compute_lte(TWO_POW_128, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n"},"26":{"path":"std/field/mod.nr","source":"mod bn254;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size(self, bit_size: u32) {\n        // docs:end:assert_max_bit_size\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n     // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8]` slice of length `byte_size`.\n    /// This slice will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{8*byte_size}` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `byte_size` equal to or greater than the number of bytes necessary to represent the `Field` modulus\n    /// (e.g. 32 for the BN254 field) allow for multiple byte decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        self.to_le_radix(256)\n    }\n    // docs:end:to_le_bytes\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8]` slice of length `byte_size`.\n    /// This slice will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{8*byte_size}` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `byte_size` equal to or greater than the number of bytes necessary to represent the `Field` modulus\n    /// (e.g. 32 for the BN254 field) allow for multiple byte decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        self.to_be_radix(256)\n    }\n    // docs:end:to_be_bytes\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..32 {\n        if (!done) {\n            let x_byte = x_bytes[32 - 1 - i] as u8;\n            let y_byte = y_bytes[32 - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nmod tests {\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_bytes();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_bytes();\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_radix_example\n}\n"},"274":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/merkle_tree/root.nr","source":"use crate::{hash::merkle_hash, merkle_tree::merkle_tree::MerkleTree};\n\n// Calculate the Merkle tree root from the sibling path and leaf.\n//\n// The leaf is hashed with its sibling, and then the result is hashed\n// with the next sibling etc in the path. The last hash is the root.\n//\n// TODO(David/Someone): The cpp code is using a uint256, whereas its\n// TODO a bit simpler in Noir to just have a bit array.\n// TODO: I'd generally like to avoid u256 for algorithms like\n// this because it means we never even need to consider cases where\n// the index is greater than p.\npub fn root_from_sibling_path<let N: u32>(\n    leaf: Field,\n    leaf_index: Field,\n    sibling_path: [Field; N]\n) -> Field {\n    let mut node = leaf;\n    let indices: [u1; N] = leaf_index.to_le_bits();\n\n    for i in 0..N {\n        let (hash_left, hash_right) = if indices[i] == 1 {\n            (sibling_path[i], node)\n        } else {\n            (node, sibling_path[i])\n        };\n        node = merkle_hash(hash_left, hash_right);\n    }\n    node\n}\n\npub fn calculate_subtree_root<let N: u32>(leaves: [Field; N]) -> Field {\n    MerkleTree::new(leaves).get_root()\n}\n\n// These values are precomputed and we run tests to ensure that they\n// are correct. The values themselves were computed from the cpp code.\n//\n// Would be good if we could use width since the compute_subtree\n// algorithm uses depth.\npub fn calculate_empty_tree_root(depth: u32) -> Field {\n    if depth == 0 {\n        0\n    } else if depth == 1 {\n        0x0b63a53787021a4a962a452c2921b3663aff1ffd8d5510540f8e659e782956f1\n    } else if depth == 2 {\n        0x0e34ac2c09f45a503d2908bcb12f1cbae5fa4065759c88d501c097506a8b2290\n    } else if depth == 3 {\n        0x21f9172d72fdcdafc312eee05cf5092980dda821da5b760a9fb8dbdf607c8a20\n    } else if depth == 4 {\n        0x2373ea368857ec7af97e7b470d705848e2bf93ed7bef142a490f2119bcf82d8e\n    } else if depth == 5 {\n        0x120157cfaaa49ce3da30f8b47879114977c24b266d58b0ac18b325d878aafddf\n    } else if depth == 6 {\n        0x01c28fe1059ae0237b72334700697bdf465e03df03986fe05200cadeda66bd76\n    } else if depth == 7 {\n        0x2d78ed82f93b61ba718b17c2dfe5b52375b4d37cbbed6f1fc98b47614b0cf21b\n    } else if depth == 8 {\n        0x067243231eddf4222f3911defbba7705aff06ed45960b27f6f91319196ef97e1\n    } else if depth == 9 {\n        0x1849b85f3c693693e732dfc4577217acc18295193bede09ce8b97ad910310972\n    } else if depth == 10 {\n        0x2a775ea761d20435b31fa2c33ff07663e24542ffb9e7b293dfce3042eb104686\n    } else {\n        panic(f\"depth should be between 0 and 10\")\n    }\n}\n\n#[test]\nfn test_merkle_root_interop_test() {\n    // This is a test to ensure that we match the cpp implementation.\n    // You can grep for `TEST_F(root_rollup_tests, noir_interop_test)`\n    // to find the test that matches this.\n    let root = calculate_subtree_root([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]);\n    assert(0x1a09d935ae110b4c861fcec8f9099ec30b4485022aeb3d3cf9d7168e38fdc231 == root);\n\n    let empty_root = calculate_subtree_root([0; 16]);\n    assert(0x2373ea368857ec7af97e7b470d705848e2bf93ed7bef142a490f2119bcf82d8e == empty_root);\n}\n\n#[test]\nfn test_empty_subroot() {\n    assert(calculate_empty_tree_root(0) == 0);\n\n    let expected_empty_root_2 = calculate_subtree_root([0; 2]);\n    assert(calculate_empty_tree_root(1) == expected_empty_root_2);\n\n    let expected_empty_root_4 = calculate_subtree_root([0; 4]);\n    assert(calculate_empty_tree_root(2) == expected_empty_root_4);\n\n    let expected_empty_root_8 = calculate_subtree_root([0; 8]);\n    assert(calculate_empty_tree_root(3) == expected_empty_root_8);\n\n    let expected_empty_root_16 = calculate_subtree_root([0; 16]);\n    assert(calculate_empty_tree_root(4) == expected_empty_root_16);\n\n    let expected_empty_root_32 = calculate_subtree_root([0; 32]);\n    assert(calculate_empty_tree_root(5) == expected_empty_root_32);\n\n    let expected_empty_root_64 = calculate_subtree_root([0; 64]);\n    assert(calculate_empty_tree_root(6) == expected_empty_root_64);\n\n    let expected_empty_root_128 = calculate_subtree_root([0; 128]);\n    assert(calculate_empty_tree_root(7) == expected_empty_root_128);\n\n    let expected_empty_root_256 = calculate_subtree_root([0; 256]);\n    assert(calculate_empty_tree_root(8) == expected_empty_root_256);\n\n    let expected_empty_root_512 = calculate_subtree_root([0; 512]);\n    assert(calculate_empty_tree_root(9) == expected_empty_root_512);\n\n    let expected_empty_root_1024 = calculate_subtree_root([0; 1024]);\n    assert(calculate_empty_tree_root(10) == expected_empty_root_1024);\n}\n"},"287":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/field.nr","source":"pub fn field_from_bytes<let N: u32>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// Convert a 32 byte array to a field element by truncating the final byte\npub fn field_from_bytes_32_trunc(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..15 {\n        // covers bytes 16..30 (31 is truncated and ignored)\n        low = low + (bytes32[15 + 15 - i] as Field) * v;\n        v = v * 256;\n        // covers bytes 0..14\n        high = high + (bytes32[14 - i] as Field) * v;\n    }\n    // covers byte 15\n    low = low + (bytes32[15] as Field) * v;\n\n    low + high * v\n}\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    lhs.lt(rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    rhs.lt(lhs)\n}\n\n#[test]\nunconstrained fn bytes_field_test() {\n    // Tests correctness of field_from_bytes_32_trunc against existing methods\n    // Bytes representing 0x543e0a6642ffeb8039296861765a53407bba62bd1c97ca43374de950bbe0a7\n    let inputs = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167\n    ];\n    let field = field_from_bytes(inputs, true);\n    let return_bytes: [u8; 31] = field.to_be_bytes();\n    assert_eq(inputs, return_bytes);\n    // 32 bytes - we remove the final byte, and check it matches the field\n    let inputs2 = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167, 158\n    ];\n    let field2 = field_from_bytes_32_trunc(inputs2);\n    let return_bytes2: [u8; 31] = field.to_be_bytes();\n\n    assert_eq(return_bytes2, return_bytes);\n    assert_eq(field2, field);\n}\n\n#[test]\nunconstrained fn max_field_test() {\n    // Tests the hardcoded value in constants.nr vs underlying modulus\n    // NB: We can't use 0-1 in constants.nr as it will be transpiled incorrectly to ts and sol constants files\n    let max_value = crate::constants::MAX_FIELD_VALUE;\n    assert_eq(max_value, 0 - 1);\n    // modulus == 0 is tested elsewhere, so below is more of a sanity check\n    let max_bytes: [u8; 32] = max_value.to_be_bytes();\n    let mod_bytes = std::field::modulus_be_bytes();\n    for i in 0..31 {\n        assert_eq(max_bytes[i], mod_bytes[i]);\n    }\n    assert_eq(max_bytes[31], mod_bytes[31] - 1);\n}\n"},"29":{"path":"std/hash/mod.nr","source":"mod poseidon;\nmod mimc;\nmod poseidon2;\nmod keccak;\nmod sha256;\nmod sha512;\n\nuse crate::default::Default;\nuse crate::uint128::U128;\nuse crate::collections::vec::Vec;\nuse crate::embedded_curve_ops::{EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul, multi_scalar_mul_slice};\nuse crate::meta::derive_via;\n\n// Kept for backwards compatibility\npub use sha256::{digest, sha256, sha256_compression, sha256_var};\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n// docs:start:pedersen_commitment\npub fn pedersen_commitment<let N: u32>(input: [Field; N]) -> EmbeddedCurvePoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\npub fn pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    __pedersen_hash_with_separator(input, separator)\n}\n\nfn pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let value = __pedersen_commitment_with_separator(input, separator);\n    if (value[0] == 0) & (value[1] == 0) {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    } else {\n        EmbeddedCurvePoint { x: value[0], y: value[1], is_infinite: false }\n    }\n}\n\n#[no_predicates]\nfn pedersen_commitment_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let mut points = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N];\n    for i in 0..N {\n        // we use the unsafe version because the multi_scalar_mul will constrain the scalars.\n        points[i] = from_field_unsafe(input[i]);\n    }\n    let generators = derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    multi_scalar_mul(generators, points)\n}\n\n#[no_predicates]\nfn pedersen_hash_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    let mut scalars: Vec<EmbeddedCurveScalar> = Vec::from_slice([EmbeddedCurveScalar { lo: 0, hi: 0 }; N].as_slice()); //Vec::new();\n\n    for i in 0..N {\n        scalars.set(i, from_field_unsafe(input[i]));\n    }\n    scalars.push(EmbeddedCurveScalar { lo: N as Field, hi: 0 as Field });\n    let domain_generators :[EmbeddedCurvePoint; N]= derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    let mut vec_generators = Vec::new();\n    for i in 0..N {\n        vec_generators.push(domain_generators[i]);\n    }\n    let length_generator : [EmbeddedCurvePoint; 1] = derive_generators(\"pedersen_hash_length\".as_bytes(), 0);\n    vec_generators.push(length_generator[0]);\n    multi_scalar_mul_slice(vec_generators.slice, scalars.slice)[0]\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<let N: u32>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    __pedersen_hash_with_separator(input, 0)\n}\n\n#[foreign(pedersen_hash)]\nfn __pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {}\n\n#[foreign(pedersen_commitment)]\nfn __pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> [Field; 2] {}\n\n#[field(bn254)]\nfn derive_generators<let N: u32, let M: u32>(domain_separator_bytes: [u8; M], starting_index: u32) -> [EmbeddedCurvePoint; N] {\n    crate::assert_constant(domain_separator_bytes);\n    // TODO(https://github.com/noir-lang/noir/issues/5672): Add back assert_constant on starting_index\n    __derive_generators(domain_separator_bytes, starting_index)\n}\n\n#[builtin(derive_pedersen_generators)]\n#[field(bn254)]\nfn __derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32\n) -> [EmbeddedCurvePoint; N] {}\n\n#[field(bn254)]\n    // Same as from_field but:\n    // does not assert the limbs are 128 bits\n    // does not assert the decomposition does not overflow the EmbeddedCurveScalar\n    fn from_field_unsafe(scalar: Field) -> EmbeddedCurveScalar {\n    let (xlo, xhi) = unsafe {\n        crate::field::bn254::decompose_hint(scalar)\n    };\n    // Check that the decomposition is correct\n    assert_eq(scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi);\n    EmbeddedCurveScalar { lo: xlo, hi: xhi }\n}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut sum = 0;\n\n    for input in inputs {\n        let input_bytes: [u8; 32] = input.to_le_bytes();\n        sum += crate::field::bytes32_to_field(blake2s(input_bytes));\n    }\n\n    sum\n}\n\n// docs:start:keccak256\npub fn keccak256<let N: u32>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{\n    crate::hash::keccak::keccak256(input, message_size)\n}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<let N: u32>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n// Generic hashing support.\n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\n#[derive_via(derive_hash)]\npub trait Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher;\n}\n\n// docs:start:derive_hash\ncomptime fn derive_hash(s: StructDefinition) -> Quoted {\n    let name = quote { Hash };\n    let signature = quote { fn hash<H>(_self: Self, _state: &mut H) where H: std::hash::Hasher };\n    let for_each_field = |name| quote { _self.$name.hash(_state); };\n    crate::meta::make_trait_impl(s, name, signature, for_each_field, quote {}, |fields| fields)\n}\n// docs:end:derive_hash\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\npub trait Hasher {\n    fn finish(self) -> Field;\n\n    fn write(&mut self, input: Field);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\npub trait BuildHasher<H> where H: Hasher {\n    fn build_hasher(self) -> H;\n}\n\npub struct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default {\n    fn build_hasher(_self: Self) -> H {\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default {\n    fn default() -> Self {\n        BuildHasherDefault {}\n    }\n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self);\n    }\n}\n\nimpl Hash for u1 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u16 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i16 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H) where H: Hasher {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self.lo as Field);\n        H::write(state, self.hi as Field);\n    }\n}\n\nimpl<T, let N: u32> Hash for [T; N] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B) where A: Hash, B: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C) where A: Hash, B: Hash, C: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D) where A: Hash, B: Hash, C: Hash, D: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E) where A: Hash, B: Hash, C: Hash, D: Hash, E: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n\n// Some test vectors for Pedersen hash and Pedersen Commitment.\n// They have been generated using the same functions so the tests are for now useless\n// but they will be useful when we switch to Noir implementation.\n#[test]\nfn assert_pedersen() {\n    assert_eq(\n        pedersen_hash_with_separator([1], 1), 0x1b3f4b1a83092a13d8d1a59f7acb62aba15e7002f4440f2275edb99ebbc2305f\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1], 1), EmbeddedCurvePoint {\n        x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n        y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n        is_infinite: false\n    }\n    );\n\n    assert_eq(\n        pedersen_hash_with_separator([1, 2], 2), 0x26691c129448e9ace0c66d11f0a16d9014a9e8498ee78f4d69f0083168188255\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2], 2), EmbeddedCurvePoint {\n        x: 0x2e2b3b191e49541fe468ec6877721d445dcaffe41728df0a0eafeb15e87b0753,\n        y: 0x2ff4482400ad3a6228be17a2af33e2bcdf41be04795f9782bd96efe7e24f8778,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3], 3), 0x0bc694b7a1f8d10d2d8987d07433f26bd616a2d351bc79a3c540d85b6206dbe4\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3], 3), EmbeddedCurvePoint {\n        x: 0x1fee4e8cf8d2f527caa2684236b07c4b1bad7342c01b0f75e9a877a71827dc85,\n        y: 0x2f9fedb9a090697ab69bf04c8bc15f7385b3e4b68c849c1536e5ae15ff138fd1,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4], 4), 0xdae10fb32a8408521803905981a2b300d6a35e40e798743e9322b223a5eddc\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4], 4), EmbeddedCurvePoint {\n        x: 0x07ae3e202811e1fca39c2d81eabe6f79183978e6f12be0d3b8eda095b79bdbc9,\n        y: 0x0afc6f892593db6fbba60f2da558517e279e0ae04f95758587760ba193145014,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5], 5), 0xfc375b062c4f4f0150f7100dfb8d9b72a6d28582dd9512390b0497cdad9c22\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5], 5), EmbeddedCurvePoint {\n        x: 0x1754b12bd475a6984a1094b5109eeca9838f4f81ac89c5f0a41dbce53189bb29,\n        y: 0x2da030e3cfcdc7ddad80eaf2599df6692cae0717d4e9f7bfbee8d073d5d278f7,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6], 6), 0x1696ed13dc2730062a98ac9d8f9de0661bb98829c7582f699d0273b18c86a572\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6], 6), EmbeddedCurvePoint {\n        x: 0x190f6c0e97ad83e1e28da22a98aae156da083c5a4100e929b77e750d3106a697,\n        y: 0x1f4b60f34ef91221a0b49756fa0705da93311a61af73d37a0c458877706616fb,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7], 7), 0x128c0ff144fc66b6cb60eeac8a38e23da52992fc427b92397a7dffd71c45ede3\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7], 7), EmbeddedCurvePoint {\n        x: 0x015441e9d29491b06563fac16fc76abf7a9534c715421d0de85d20dbe2965939,\n        y: 0x1d2575b0276f4e9087e6e07c2cb75aa1baafad127af4be5918ef8a2ef2fea8fc,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8), 0x2f960e117482044dfc99d12fece2ef6862fba9242be4846c7c9a3e854325a55c\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8), EmbeddedCurvePoint {\n        x: 0x1657737676968887fceb6dd516382ea13b3a2c557f509811cd86d5d1199bc443,\n        y: 0x1f39f0cb569040105fa1e2f156521e8b8e08261e635a2b210bdc94e8d6d65f77,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9), 0x0c96db0790602dcb166cc4699e2d306c479a76926b81c2cb2aaa92d249ec7be7\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9), EmbeddedCurvePoint {\n        x: 0x0a3ceae42d14914a432aa60ec7fded4af7dad7dd4acdbf2908452675ec67e06d,\n        y: 0xfc19761eaaf621ad4aec9a8b2e84a4eceffdba78f60f8b9391b0bd9345a2f2,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10), 0x2cd37505871bc460a62ea1e63c7fe51149df5d0801302cf1cbc48beb8dff7e94\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10), EmbeddedCurvePoint {\n        x: 0x2fb3f8b3d41ddde007c8c3c62550f9a9380ee546fcc639ffbb3fd30c8d8de30c,\n        y: 0x300783be23c446b11a4c0fabf6c91af148937cea15fcf5fb054abf7f752ee245,\n        is_infinite: false\n    }\n    );\n}\n\n"},"3":{"path":"std/array/mod.nr","source":"use crate::cmp::{Eq, Ord};\nuse crate::convert::From;\nuse crate::runtime::is_unconstrained;\n\nmod check_shuffle;\nmod quicksort;\n\nimpl<T, let N: u32> [T; N] {\n    /// Returns the length of this array.\n    /// \n    /// ```noir\n    /// fn len(self) -> Field\n    /// ```\n    /// \n    /// example\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let array = [42, 42];\n    ///     assert(array.len() == 2);\n    /// }\n    /// ```\n    #[builtin(array_len)]\n    pub fn len(self) -> u32 {}\n\n    /// Returns this array as a slice.\n    /// \n    /// ```noir\n    /// let array = [1, 2];\n    /// let slice = array.as_slice();\n    /// assert_eq(slice, &[1, 2]);\n    /// ```\n    #[builtin(as_slice)]\n    pub fn as_slice(self) -> [T] {}\n\n    /// Applies a function to each element of this array, returning a new array containing the mapped elements.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// let a = [1, 2, 3];\n    /// let b = a.map(|a| a * 2);\n    /// assert_eq(b, [2, 4, 6]);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> [U; N] {\n        let first_elem = f(self[0]);\n        let mut ret = [first_elem; N];\n\n        for i in 1..self.len() {\n            ret[i] = f(self[i]);\n        }\n\n        ret\n    }\n\n    /// Applies a function to each element of the array, returning the final accumulated value. The first\n    /// parameter is the initial value.\n    /// \n    /// This is a left fold, so the given function will be applied to the accumulator and first element of\n    /// the array, then the second, and so on. For a given call the expected result would be equivalent to:\n    /// \n    /// ```rust\n    /// let a1 = [1];\n    /// let a2 = [1, 2];\n    /// let a3 = [1, 2, 3];\n    /// \n    /// let f = |a, b| a - b;\n    /// a1.fold(10, f); //=> f(10, 1)\n    /// a2.fold(10, f); //=> f(f(10, 1), 2)\n    /// a3.fold(10, f); //=> f(f(f(10, 1), 2), 3)\n    /// \n    /// assert_eq(a3.fold(10, f), 10 - 1 - 2 - 3);\n    /// ```\n    pub fn fold<U, Env>(self, mut accumulator: U, f: fn[Env](U, T) -> U) -> U {\n        for elem in self {\n            accumulator = f(accumulator, elem);\n        }\n        accumulator\n    }\n\n    /// Same as fold, but uses the first element as the starting element.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let arr = [1, 2, 3, 4];\n    ///     let reduced = arr.reduce(|a, b| a + b);\n    ///     assert(reduced == 10);\n    /// }\n    /// ```\n    pub fn reduce<Env>(self, f: fn[Env](T, T) -> T) -> T {\n        let mut accumulator = self[0];\n        for i in 1..self.len() {\n            accumulator = f(accumulator, self[i]);\n        }\n        accumulator\n    }\n\n    /// Returns true if all the elements in this array satisfy the given predicate.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let arr = [2, 2, 2, 2, 2];\n    ///     let all = arr.all(|a| a == 2);\n    ///     assert(all);\n    /// }\n    /// ```\n    pub fn all<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = true;\n        for elem in self {\n            ret &= predicate(elem);\n        }\n        ret\n    }\n\n    /// Returns true if any of the elements in this array satisfy the given predicate.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let arr = [2, 2, 2, 2, 5];\n    ///     let any = arr.any(|a| a == 5);\n    ///     assert(any);\n    /// }\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        for elem in self {\n            ret |= predicate(elem);\n        }\n        ret\n    }\n}\n\nimpl<T, let N: u32> [T; N] where T: Ord + Eq {\n    /// Returns a new sorted array. The original array remains untouched. Notice that this function will\n    /// only work for arrays of fields or integers, not for any arbitrary type. This is because the sorting\n    /// logic it uses internally is optimized specifically for these values. If you need a sort function to\n    /// sort any type, you should use the `sort_via` function.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// fn main() {\n    ///     let arr = [42, 32];\n    ///     let sorted = arr.sort();\n    ///     assert(sorted == [32, 42]);\n    /// }\n    /// ```\n    pub fn sort(self) -> Self {\n        self.sort_via(|a: T, b: T| a <= b)\n    }\n}\n\nimpl<T, let N: u32> [T; N] where T: Eq {\n    /// Returns a new sorted array by sorting it with a custom comparison function. \n    /// The original array remains untouched. \n    /// The ordering function must return true if the first argument should be sorted to be before the second argument or is equal to the second argument.\n    /// \n    /// Using this method with an operator like `<` that does not return `true` for equal values will result in an assertion failure for arrays with equal elements.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// fn main() {\n    ///     let arr = [42, 32]\n    ///     let sorted_ascending = arr.sort_via(|a, b| a <= b);\n    ///     assert(sorted_ascending == [32, 42]); // verifies\n    /// \n    ///     let sorted_descending = arr.sort_via(|a, b| a >= b);\n    ///     assert(sorted_descending == [32, 42]); // does not verify\n    /// }\n    /// ```\n    pub fn sort_via<Env>(self, ordering: fn[Env](T, T) -> bool) -> Self {\n        unsafe {\n            // Safety: `sorted` array is checked to be:\n            //   a. a permutation of `input`'s elements\n            //   b. satisfying the predicate `ordering`\n            let sorted = quicksort::quicksort(self, ordering);\n\n            if !is_unconstrained() {\n                for i in 0..N - 1 {\n                    assert(\n                        ordering(sorted[i], sorted[i + 1]), \"Array has not been sorted correctly according to `ordering`.\"\n                    );\n                }\n                check_shuffle::check_shuffle(self, sorted);\n            }\n            sorted\n        }\n    }\n}\n\nimpl<let N: u32> [u8; N] {\n    /// Converts a byte array of type `[u8; N]` to a string. Note that this performs no UTF-8 validation -\n    /// the given array is interpreted as-is as a string.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// fn main() {\n    ///     let hi = [104, 105].as_str_unchecked();\n    ///     assert_eq(hi, \"hi\");\n    /// }\n    /// ```\n    #[builtin(array_as_str_unchecked)]\n    pub fn as_str_unchecked(self) -> str<N> {}\n}\n\nimpl<let N: u32> From<str<N>> for [u8; N] {\n    /// Returns an array of the string bytes.\n    fn from(s: str<N>) -> Self {\n        s.as_bytes()\n    }\n}\n"},"307":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/reader.nr","source":"pub struct Reader<let N: u32> {\n    data: [Field; N],\n    offset: u32,\n}\n\nimpl<let N: u32> Reader<N> {\n    pub fn new(data: [Field; N]) -> Self {\n        Self { data, offset: 0 }\n    }\n\n    pub fn read(&mut self) -> Field {\n        let result = self.data[self.offset];\n        self.offset += 1;\n        result\n    }\n\n    pub fn read_u32(&mut self) -> u32 {\n        self.read() as u32\n    }\n\n    pub fn read_bool(&mut self) -> bool {\n        self.read() as bool\n    }\n\n    pub fn read_array<let K: u32>(&mut self, mut result: [Field; K]) -> [Field; K] {\n        for i in 0..K {\n            result[i] = self.data[self.offset + i];\n        }\n        self.offset += K;\n        result\n    }\n\n    // TODO(#4394)\n    pub fn read_struct<T, let K: u32>(&mut self, deserialise: fn([Field; K]) -> T) -> T {\n        let result = deserialise(self.read_array([0; K]));\n        result\n    }\n\n    pub fn read_struct_array<T, let K: u32, let C: u32>(&mut self, deserialise: fn([Field; K]) -> T, mut result: [T; C]) -> [T; C] {\n        for i in 0..C {\n            result[i] = self.read_struct(deserialise);\n        }\n        result\n    }\n\n    pub fn finish(self) {\n        assert(self.offset == self.data.len(), \"Reader did not read all data\");\n    }\n}\n"},"309":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/mod.nr","source":"// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\npub fn arr_copy_slice<T, let N: u32, let M: u32>(src: [T; N], mut dst: [T; M], offset: u32) -> [T; M] {\n    let iterator_len = if N > M { M } else { N };\n    for i in 0..iterator_len {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n"},"310":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/storage/map.nr","source":"use crate::{hash::pedersen_hash, traits::ToField};\n\npub fn derive_storage_slot_in_map<K>(storage_slot: Field, key: K) -> Field where K: ToField {\n    pedersen_hash([storage_slot, key.to_field()], 0)\n}\n\nmod test {\n    use crate::{address::AztecAddress, storage::map::derive_storage_slot_in_map};\n\n    #[test]\n    fn test_derive_storage_slot_in_map_matches_typescript() {\n        let map_slot = 0x132258fb6962c4387ba659d9556521102d227549a386d39f0b22d1890d59c2b5;\n        let key = AztecAddress::from_field(0x302dbc2f9b50a73283d5fb2f35bc01eae8935615817a0b4219a057b2ba8a5a3f);\n\n        let slot = derive_storage_slot_in_map(map_slot, key);\n\n        // The following value was generated by `map_slot.test.ts`\n        let slot_from_typescript = 0x2499880e2b1b831785c17286f99a0d5122fee784ce7b1c04e380c4a991da819a;\n\n        assert_eq(slot, slot_from_typescript);\n    }\n}\n"},"312":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/traits.nr","source":"use crate::utils::field::field_from_bytes;\nuse crate::meta::{derive_deserialize, derive_serialize};\n\n// Trait: is_empty\n//\n// The general is_empty trait checks if a data type is is empty,\n// and it defines empty for the basic data types as 0.\n//\n// If a Field is equal to zero, then it is regarded as zero.\n// We will go with this definition for now, however it can be problematic\n// if a value can actually be zero. In a future refactor, we can\n// use the optional type for safety. Doing it now would lead to a worse devex\n// and would make it harder to sync up with the cpp code.\n// Preferred over Default trait to convey intent, as default doesn't necessarily mean empty.\npub trait Empty {\n    fn empty() -> Self;\n}\n\nimpl Empty for Field {\n    fn empty() -> Self {\n        0\n    }\n}\n\nimpl Empty for u1 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u8 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u32 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u64 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for U128 {\n    fn empty() -> Self {\n        U128::from_integer(0)\n    }\n}\n\npub fn is_empty<T>(item: T) -> bool where T: Empty + Eq {\n    item.eq(T::empty())\n}\n\npub fn is_empty_array<T, let N: u32>(array: [T; N]) -> bool where T: Empty + Eq {\n    array.all(|elem| is_empty(elem))\n}\n\npub trait Hash {\n    fn hash(self) -> Field;\n}\n\npub trait ToField {\n    fn to_field(self) -> Field;\n}\n\nimpl ToField for Field {\n    fn to_field(self) -> Field {\n        self\n    }\n}\n\nimpl ToField for bool {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u1 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u8 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u32 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u64 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for U128 {\n    fn to_field(self) -> Field {\n        self.to_integer()\n    }\n}\nimpl<let N: u32> ToField for str<N> {\n    fn to_field(self) -> Field {\n        assert(N < 32, \"String doesn't fit in a field, consider using Serialize instead\");\n        field_from_bytes(self.as_bytes(), true)\n    }\n}\n\npub trait FromField {\n    fn from_field(value: Field) -> Self;\n}\n\nimpl FromField for Field {\n    fn from_field(value: Field) -> Self {\n        value\n    }\n}\n\nimpl FromField for bool {\n    fn from_field(value: Field) -> Self {\n        value as bool\n    }\n}\nimpl FromField for u1 {\n    fn from_field(value: Field) -> Self {\n        value as u1\n    }\n}\nimpl FromField for u8 {\n    fn from_field(value: Field) -> Self {\n        value as u8\n    }\n}\nimpl FromField for u32 {\n    fn from_field(value: Field) -> Self {\n        value as u32\n    }\n}\nimpl FromField for u64 {\n    fn from_field(value: Field) -> Self {\n        value as u64\n    }\n}\nimpl FromField for U128 {\n    fn from_field(value: Field) -> Self {\n        U128::from_integer(value)\n    }\n}\n\n// docs:start:serialize\n#[derive_via(derive_serialize)]\npub trait Serialize<let N: u32> {\n    fn serialize(self) -> [Field; N];\n}\n// docs:end:serialize\n\nimpl<let N: u32> Serialize<N> for [Field; N] {\n    fn serialize(self) -> [Field; N] {\n        self\n    }\n}\n\nimpl<let N: u32> Serialize<N> for str<N> {\n    fn serialize(self) -> [Field; N] {\n        let bytes = self.as_bytes();\n        let mut fields = [0; N];\n        for i in 0..bytes.len() {\n            fields[i] = bytes[i] as Field;\n        }\n        fields\n    }\n}\n\n// docs:start:deserialize\n#[derive_via(derive_deserialize)]\npub trait Deserialize<let N: u32> {\n    fn deserialize(fields: [Field; N]) -> Self;\n}\n// docs:end:deserialize\n\nimpl<let N: u32> Deserialize<N> for [Field; N] {\n    fn deserialize(fields: [Field; N]) -> Self {\n        fields\n    }\n}\n"},"313":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/type_serialization.nr","source":"use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: u32 = 1;\nglobal U8_SERIALIZED_LEN: u32 = 1;\nglobal U32_SERIALIZED_LEN: u32 = 1;\nglobal U64_SERIALIZED_LEN: u32 = 1;\nglobal U128_SERIALIZED_LEN: u32 = 1;\nglobal FIELD_SERIALIZED_LEN: u32 = 1;\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U64_SERIALIZED_LEN> for u64 {\n    fn serialize(self) -> [Field; U64_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U64_SERIALIZED_LEN> for u64 {\n    fn deserialize(fields: [Field; U64_SERIALIZED_LEN]) -> Self {\n        fields[0] as u64\n    }\n}\n\nimpl Serialize<U128_SERIALIZED_LEN> for U128 {\n    fn serialize(self) -> [Field; 1] {\n        [self.to_integer()]\n    }\n}\n\nimpl Deserialize<U128_SERIALIZED_LEN> for U128 {\n    fn deserialize(fields: [Field; U128_SERIALIZED_LEN]) -> Self {\n        U128::from_integer(fields[0])\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n"},"316":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/contract_instance.nr","source":"use crate::{\n    address::{aztec_address::AztecAddress, partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    contract_class_id::ContractClassId, constants::CONTRACT_INSTANCE_LENGTH,\n    traits::{Deserialize, Hash, Serialize}\n};\n\npub struct ContractInstance {\n    salt : Field,\n    deployer: AztecAddress,\n    contract_class_id : ContractClassId,\n    initialization_hash : Field,\n    public_keys_hash : PublicKeysHash,\n}\n\nimpl Eq for ContractInstance {\n    fn eq(self, other: Self) -> bool {\n        self.public_keys_hash.eq(other.public_keys_hash)\n            & self.initialization_hash.eq(other.initialization_hash)\n            & self.contract_class_id.eq(other.contract_class_id)\n            & self.salt.eq(other.salt)\n    }\n}\n\nimpl Serialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn serialize(self) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n        [\n            self.salt,\n            self.deployer.to_field(),\n            self.contract_class_id.to_field(),\n            self.initialization_hash,\n            self.public_keys_hash.to_field()\n        ]\n    }\n}\n\nimpl Deserialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn deserialize(serialized: [Field; CONTRACT_INSTANCE_LENGTH]) -> Self {\n        Self {\n            salt: serialized[0],\n            deployer: AztecAddress::from_field(serialized[1]),\n            contract_class_id: ContractClassId::from_field(serialized[2]),\n            initialization_hash: serialized[3],\n            public_keys_hash: PublicKeysHash::from_field(serialized[4])\n        }\n    }\n}\n\nimpl Hash for ContractInstance {\n    fn hash(self) -> Field {\n        self.to_address().to_field()\n    }\n}\n\nimpl ContractInstance {\n    fn to_address(self) -> AztecAddress {\n        AztecAddress::compute(\n            self.public_keys_hash,\n            PartialAddress::compute(\n                self.contract_class_id,\n                self.salt,\n                self.initialization_hash,\n                self.deployer\n            )\n        )\n    }\n}\n"},"317":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/address/aztec_address.nr","source":"use crate::{\n    crate::address::{partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    constants::{AZTEC_ADDRESS_LENGTH, GENERATOR_INDEX__CONTRACT_ADDRESS_V1},\n    hash::poseidon2_hash_with_separator, traits::{Empty, FromField, ToField, Serialize, Deserialize},\n    utils\n};\n\n// Aztec address\npub struct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other: Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self { inner: 0 }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl FromField for AztecAddress {\n    fn from_field(value: Field) -> AztecAddress {\n        AztecAddress { inner: value }\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_LENGTH] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_LENGTH]) -> Self {\n        FromField::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            poseidon2_hash_with_separator(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS_V1\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n\n#[test]\nfn compute_address_from_partial_and_pub_keys_hash() {\n    let pub_keys_hash = PublicKeysHash::from_field(1);\n    let partial_address = PartialAddress::from_field(2);\n\n    let address = AztecAddress::compute(pub_keys_hash, partial_address);\n    let expected_computed_address_from_partial_and_pubkey = 0x23ce9be3fa3c846b0f9245cc796902e731d04f086e8a42473bb29e405fc98075;\n    assert(address.to_field() == expected_computed_address_from_partial_and_pubkey);\n}\n\n#[test]\nfn from_field_to_field() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(FromField::from_field(address.to_field()), address);\n}\n\n#[test]\nfn serde() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(Deserialize::deserialize(address.serialize()), address);\n}\n"},"325":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/hash.nr","source":"use crate::{\n    abis::{\n    contract_class_function_leaf_preimage::ContractClassFunctionLeafPreimage,\n    function_selector::FunctionSelector, log_hash::{LogHash, ScopedLogHash, ScopedEncryptedLogHash},\n    note_hash::ScopedNoteHash, nullifier::ScopedNullifier\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    FUNCTION_TREE_HEIGHT, GENERATOR_INDEX__SILOED_NOTE_HASH, GENERATOR_INDEX__OUTER_NULLIFIER,\n    GENERATOR_INDEX__VK, GENERATOR_INDEX__NOTE_HASH_NONCE, GENERATOR_INDEX__UNIQUE_NOTE_HASH,\n    MAX_ENCRYPTED_LOGS_PER_TX, MAX_NOTE_ENCRYPTED_LOGS_PER_TX\n},\n    merkle_tree::root::root_from_sibling_path,\n    messaging::l2_to_l1_message::{L2ToL1Message, ScopedL2ToL1Message},\n    recursion::verification_key::VerificationKey, traits::{is_empty, ToField},\n    utils::field::field_from_bytes_32_trunc\n};\nuse super::utils::field::field_from_bytes;\n\npub fn sha256_to_field<let N: u32>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = std::hash::sha256(bytes_to_hash);\n    let hash_in_a_field = field_from_bytes_32_trunc(sha256_hashed);\n\n    hash_in_a_field\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\nfn compute_note_hash_nonce(tx_hash: Field, note_index_in_tx: u32) -> Field {\n    // Hashing tx hash with note index in tx is guaranteed to be unique\n    poseidon2_hash_with_separator(\n        [\n        tx_hash,\n        note_index_in_tx as Field\n    ],\n        GENERATOR_INDEX__NOTE_HASH_NONCE\n    )\n}\n\npub fn compute_unique_note_hash(nonce: Field, note_hash: Field) -> Field {\n    let inputs = [nonce, note_hash];\n    poseidon2_hash_with_separator(inputs, GENERATOR_INDEX__UNIQUE_NOTE_HASH)\n}\n\npub fn compute_siloed_note_hash(app: AztecAddress, unique_note_hash: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [\n        app.to_field(),\n        unique_note_hash\n    ],\n        GENERATOR_INDEX__SILOED_NOTE_HASH\n    )\n}\n\n/// Siloing in the context of Aztec refers to the process of hashing a note hash with a contract address (this way\n/// the note hash is scoped to a specific contract). This is used to prevent intermingling of notes between contracts.\npub fn silo_note_hash(note_hash: ScopedNoteHash, tx_hash: Field, note_index_in_tx: u32) -> Field {\n    if note_hash.contract_address.is_zero() {\n        0\n    } else {\n        let nonce = compute_note_hash_nonce(tx_hash, note_index_in_tx);\n        let unique_note_hash = compute_unique_note_hash(nonce, note_hash.value());\n        compute_siloed_note_hash(note_hash.contract_address, unique_note_hash)\n    }\n}\n\npub fn compute_siloed_nullifier(app: AztecAddress, nullifier: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [\n        app.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\npub fn silo_nullifier(nullifier: ScopedNullifier) -> Field {\n    if nullifier.contract_address.is_zero() {\n        nullifier.value() // Return value instead of 0 because the first nullifier's contract address is zero.\n    } else {\n        compute_siloed_nullifier(nullifier.contract_address, nullifier.value())\n    }\n}\n\npub fn silo_encrypted_log_hash(log_hash: ScopedLogHash) -> Field {\n    // We assume contract address has already been masked\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        accumulate_sha256([log_hash.contract_address.to_field(), log_hash.log_hash.value])\n    }\n}\n\npub fn mask_encrypted_log_hash(scoped_log: ScopedEncryptedLogHash) -> AztecAddress {\n    if scoped_log.contract_address.is_zero() {\n        AztecAddress::from_field(0)\n    } else if (scoped_log.log_hash.randomness == 0) {\n        scoped_log.contract_address\n    } else {\n        AztecAddress::from_field(\n            poseidon2_hash_with_separator(\n                [scoped_log.contract_address.to_field(), scoped_log.log_hash.randomness],\n                0\n            )\n        )\n    }\n}\n\nfn compute_siloed_unencrypted_log_hash(address: AztecAddress, log_hash: Field) -> Field {\n    accumulate_sha256([address.to_field(), log_hash])\n}\n\npub fn silo_unencrypted_log_hash(log_hash: ScopedLogHash) -> Field {\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        compute_siloed_unencrypted_log_hash(log_hash.contract_address, log_hash.value())\n    }\n}\n\npub fn merkle_hash(left: Field, right: Field) -> Field {\n    poseidon2_hash([left, right])\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    recipient: EthAddress,\n    content: Field,\n    rollup_version_id: Field,\n    chain_id: Field\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new();\n\n    let inputs = [contract_address.to_field(), rollup_version_id, recipient.to_field(), chain_id, content];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes: [u8; 32] = inputs[i].to_be_bytes();\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\npub fn silo_l2_to_l1_message(msg: ScopedL2ToL1Message, rollup_version_id: Field, chain_id: Field) -> Field {\n    if msg.contract_address.is_zero() {\n        0\n    } else {\n        compute_l2_to_l1_hash(\n            msg.contract_address,\n            msg.message.recipient,\n            msg.message.content,\n            rollup_version_id,\n            chain_id\n        )\n    }\n}\n\n// Computes sha256 hash of 2 input hashes.\n//\n// NB: This method now takes in two 31 byte fields - it assumes that any input\n// is the result of a sha_to_field hash and => is truncated\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\npub fn accumulate_sha256(input: [Field; 2]) -> Field {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually\n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field\n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n\n    // Concatentate two fields into 32x2 = 64 bytes\n    // accumulate_sha256 assumes that the inputs are pre-truncated 31 byte numbers\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..input.len() {\n        let input_as_bytes: [u8; 32] = input[offset].to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    sha256_to_field(hash_input_flattened)\n}\n\n// Computes the final logs hash for a tx.\n// NB: this assumes MAX_ENCRYPTED_LOGS_PER_TX == MAX_UNENCRYPTED_LOGS_PER_TX\n// to avoid doubling code, since we can't define the byte len to be 32*N directly.\npub fn compute_tx_logs_hash(logs: [LogHash; MAX_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes: [u8; 32] = logs[offset].value.to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn compute_tx_note_logs_hash(logs: [LogHash; MAX_NOTE_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_NOTE_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_NOTE_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes: [u8; 32] = logs[offset].value.to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn pedersen_hash<let N: u32>(inputs: [Field; N], hash_index: u32) -> Field {\n    std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n\npub fn poseidon2_hash<let N: u32>(inputs: [Field; N]) -> Field {\n    std::hash::poseidon2::Poseidon2::hash(inputs, N)\n}\n\n#[no_predicates]\npub fn poseidon2_hash_with_separator<let N: u32, T>(\n    inputs: [Field; N],\n    separator: T\n) -> Field where T: ToField {\n    // We manually hash the inputs here, since we cannot express with the type system a constant size inputs array of N + 1\n    let in_len = N + 1;\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n    sponge.absorb(separator.to_field());\n\n    for i in 0..inputs.len() {\n        sponge.absorb(inputs[i]);\n    }\n\n    sponge.squeeze()\n}\n\npub fn poseidon2_hash_with_separator_slice<T>(inputs: [Field], separator: T) -> Field where T: ToField {\n    let in_len = inputs.len() + 1;\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n    sponge.absorb(separator.to_field());\n\n    for i in 0..inputs.len() {\n        sponge.absorb(inputs[i]);\n    }\n\n    sponge.squeeze()\n}\n\n#[no_predicates]\npub fn poseidon2_hash_bytes<let N: u32>(inputs: [u8; N]) -> Field {\n    // We manually hash the inputs here, since we cannot express with the type system a constant size inputs array of Math.ceil(N/31)\n    let mut in_len = N / 31;\n    let mut has_padding = false;\n    if N % 31 != 0 {\n        in_len += 1;\n        has_padding = true;\n    }\n\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n\n    let mut current_field = [0; 31];\n    for i in 0..inputs.len() {\n        let index = i % 31;\n        current_field[index] = inputs[i];\n        if index == 30 {\n            sponge.absorb(field_from_bytes(current_field, false));\n            current_field = [0; 31];\n        }\n    }\n    if has_padding {\n        sponge.absorb(field_from_bytes(current_field, false));\n    }\n\n    sponge.squeeze()\n}\n\n#[test]\nfn smoke_sha256_to_field() {\n    let full_buffer = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159\n    ];\n    let result = sha256_to_field(full_buffer);\n\n    assert(result == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184c7);\n\n    // to show correctness of the current ver (truncate one byte) vs old ver (mod full bytes):\n    let result_bytes = std::hash::sha256(full_buffer);\n    let truncated_field = crate::utils::field::field_from_bytes_32_trunc(result_bytes);\n    assert(truncated_field == result);\n    let mod_res = result + (result_bytes[31] as Field);\n    assert(mod_res == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184e0);\n}\n\n#[test]\nfn compute_l2_l1_hash() {\n    // All zeroes\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(0), EthAddress::zero(), 0, 0, 0);\n    assert(hash_result == 0xb393978842a0fa3d3e1470196f098f473f9678e72463cb65ec4ab5581856c2);\n\n    // Non-zero case\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(1), EthAddress::from_field(3), 5, 2, 4);\n    assert(hash_result == 0x3f88c1044a05e5340ed20466276500f6d45ca5603913b9091e957161734e16);\n}\n\n#[test]\nfn silo_l2_to_l1_message_matches_typescript() {\n    let version = 4;\n    let chainId = 5;\n\n    let hash = silo_l2_to_l1_message(\n        ScopedL2ToL1Message {\n        message: L2ToL1Message { recipient: EthAddress::from_field(1), content: 2, counter: 0 },\n        contract_address: AztecAddress::from_field(3)\n    },\n        version,\n        chainId\n    );\n\n    // The following value was generated by `l2_to_l1_message.test.ts`\n    let hash_from_typescript = 0x00c6155d69febb9d5039b374dd4f77bf57b7c881709aa524a18acaa0bd57476a;\n\n    assert_eq(hash, hash_from_typescript);\n}\n"},"326":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/point.nr","source":"pub use dep::std::embedded_curve_ops::EmbeddedCurvePoint as Point;\nuse crate::{traits::{Deserialize, Empty, Hash, Serialize}, hash::poseidon2_hash};\n\nglobal POINT_LENGTH: u32 = 3;\n\nimpl Serialize<POINT_LENGTH> for Point {\n    fn serialize(self: Self) -> [Field; POINT_LENGTH] {\n        [self.x, self.y, self.is_infinite as Field]\n    }\n}\n\nimpl Hash for Point {\n    fn hash(self) -> Field {\n        poseidon2_hash(self.serialize())\n    }\n}\n\nimpl Empty for Point {\n    /// Note: Does not return a valid point on curve - instead represents an empty/\"unpopulated\" point struct (e.g.\n    /// empty/unpopulated value in an array of points).\n    fn empty() -> Self {\n        Point { x: 0, y: 0, is_infinite: false }\n    }\n}\n\nimpl Deserialize<POINT_LENGTH> for Point {\n    fn deserialize(serialized: [Field; POINT_LENGTH]) -> Point {\n        Point { x: serialized[0], y: serialized[1], is_infinite: serialized[2] as bool }\n    }\n}\n"},"329":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-protocol-circuits/crates/types/src/data/public_data_tree_leaf_preimage.nr","source":"use crate::{merkle_tree::leaf_preimage::IndexedTreeLeafPreimage, traits::{Empty, Hash}};\n\npub struct PublicDataTreeLeafPreimage {\n    slot : Field,\n    value: Field,\n    next_slot :Field,\n    next_index : u32,\n}\n\nimpl Empty for PublicDataTreeLeafPreimage {\n    fn empty() -> Self {\n        Self { slot: 0, value: 0, next_slot: 0, next_index: 0 }\n    }\n}\n\nimpl Hash for PublicDataTreeLeafPreimage {\n    fn hash(self) -> Field {\n        if self.is_empty() {\n            0\n        } else {\n            crate::hash::poseidon2_hash([self.slot, self.value, (self.next_index as Field), self.next_slot])\n        }\n    }\n}\n\nimpl IndexedTreeLeafPreimage for PublicDataTreeLeafPreimage {\n    fn get_key(self) -> Field {\n        self.slot\n    }\n\n    fn get_next_key(self) -> Field {\n        self.next_slot\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl PublicDataTreeLeafPreimage {\n    pub fn is_empty(self) -> bool {\n        (self.slot == 0) & (self.value == 0) & (self.next_slot == 0) & (self.next_index == 0)\n    }\n}\n"},"34":{"path":"std/hash/poseidon2.nr","source":"use crate::hash::Hasher;\nuse crate::default::Default;\n\ncomptime global RATE: u32 = 3;\n\npub struct Poseidon2 {\n    cache: [Field;3],\n    state: [Field;4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        if message_size == N {\n            Poseidon2::hash_internal(input, N, false)\n        } else {\n            Poseidon2::hash_internal(input, message_size, true)\n        }\n    }\n\n    fn new(iv: Field) -> Poseidon2 {\n        let mut result = Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) {\n        // add the cache into sponge state\n        for i in 0..RATE {\n            // We effectively zero-pad the cache by only adding to the state\n            // cache that is less than the specified `cache_size`\n            if i < self.cache_size {\n                self.state[i] += self.cache[i];\n            }\n        }\n        self.state = crate::hash::poseidon2_permutation(self.state, 4);\n    }\n\n    fn absorb(&mut self, input: Field) {\n        assert(!self.squeeze_mode);\n        if self.cache_size == RATE {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        assert(!self.squeeze_mode);\n        // If we're in absorb mode, apply sponge permutation to compress the cache.\n        self.perform_duplex();\n        self.squeeze_mode = true;\n\n        // Pop one item off the top of the permutation and return it.\n        self.state[0]\n    }\n\n    fn hash_internal<let N: u32>(input: [Field; N], in_len: u32, is_variable_length: bool) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv : Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\npub struct Poseidon2Hasher{\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv : Field = (self._state.len() as Field) * 18446744073709551616; // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher { _state: &[] }\n    }\n}\n"},"340":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/compressed-string/src/compressed_string.nr","source":"use dep::aztec::protocol_types::{utils::field::field_from_bytes, traits::{Serialize, Deserialize}};\n\n// The general Compressed String.\n// Compresses M bytes into N fields.\n// Can be used for longer strings that don't fit in a single field.\n// Each field can store 31 characters, so N should be M/31 rounded up.\npub struct CompressedString<let N: u32, let M: u32> {\n  value: [Field; N]\n}\n\nimpl<let N: u32, let M: u32> CompressedString<N, M> {\n    pub fn from_string(input_string: str<M>) -> Self {\n        let mut fields = [0; N];\n        let byts = input_string.as_bytes();\n\n        let mut r_index = 0 as u32;\n\n        for i in 0..N {\n            let mut temp = [0 as u8; 31];\n            for j in 0..31 {\n                if r_index < M {\n                    temp[j] = byts[r_index];\n                    r_index += 1;\n                }\n            }\n\n            fields[i] = field_from_bytes(temp, true);\n        }\n\n        Self { value: fields }\n    }\n\n    pub fn to_bytes(self) -> [u8; M] {\n        let mut result = [0; M];\n        let mut w_index = 0 as u32;\n        for i in 0..N {\n            let bytes: [u8; 31] = self.value[i].to_be_bytes();\n            for j in 0..31 {\n                if w_index < M {\n                    result[w_index] = bytes[j];\n                    w_index += 1;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let M: u32> Eq for CompressedString<N, M> {\n    fn eq(self, other: CompressedString<N, M>) -> bool {\n        self.value == other.value\n    }\n}\n\nimpl<let N: u32, let M: u32> Serialize<N> for CompressedString<N, M> {\n    fn serialize(self) -> [Field; N] {\n        self.value\n    }\n}\n\nimpl<let N: u32, let M: u32> Deserialize<N> for CompressedString<N, M> {\n    fn deserialize(input: [Field; N]) -> Self {\n        Self { value: input }\n    }\n}\n\n#[test]\nunconstrained fn test_short_string() {\n    let i = \"Hello world\";\n    let b = i.as_bytes();\n    let name: CompressedString<1,11> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n\n#[test]\nunconstrained fn test_long_string() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let b = i.as_bytes();\n    let name: CompressedString<4,118> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n\n#[test]\nunconstrained fn test_long_string_work_with_too_many_fields() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let b = i.as_bytes();\n    let name: CompressedString<5,118> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n\n#[test]\nunconstrained fn test_serde() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let name: CompressedString<5,118> = CompressedString::from_string(i);\n\n    assert_eq(name, CompressedString::deserialize(name.serialize()));\n}\n\n#[test(should_fail)]\nunconstrained fn test_long_string_fail_with_too_few_fields() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let b = i.as_bytes();\n    let name: CompressedString<3,118> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n"},"342":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-contracts/contracts/token_contract/src/types/token_note.nr","source":"use dep::aztec::{\n    prelude::{NoteHeader, NullifiableNote, PrivateContext},\n    protocol_types::{constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    note::utils::compute_note_hash_for_nullify, oracle::unsafe_rand::unsafe_rand,\n    keys::getters::get_nsk_app, macros::notes::partial_note\n};\n\ntrait OwnedNote {\n    fn new(amount: U128, owner_npk_m_hash: Field) -> Self;\n    fn get_amount(self) -> U128;\n}\n\n// docs:start:TokenNote\n#[partial_note(quote {amount})]\npub struct TokenNote {\n    // The amount of tokens in the note\n    amount: U128,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    // Randomness of the note to hide its contents\n    randomness: Field,\n}\n// docs:end:TokenNote\n\nimpl NullifiableNote for TokenNote {\n    // docs:start:nullifier\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n    // docs:end:nullifier\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify, secret],\n            GENERATOR_INDEX__NOTE_NULLIFIER\n        )\n    }\n}\n\nimpl Eq for TokenNote {\n    fn eq(self, other: Self) -> bool {\n        (self.amount == other.amount)\n            & (self.npk_m_hash == other.npk_m_hash)\n            & (self.randomness == other.randomness)\n    }\n}\n\nimpl OwnedNote for TokenNote {\n    fn new(amount: U128, owner_npk_m_hash: Field) -> Self {\n        Self { amount, npk_m_hash: owner_npk_m_hash, randomness: unsafe_rand(), header: NoteHeader::empty() }\n    }\n\n    fn get_amount(self) -> U128 {\n        self.amount\n    }\n}\n"},"343":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/noir-contracts/contracts/token_contract/src/types/transparent_note.nr","source":"// docs:start:token_types_all\nuse dep::aztec::{\n    note::utils::compute_note_hash_for_nullify, prelude::{NoteHeader, NullifiableNote, PrivateContext},\n    protocol_types::{constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    macros::notes::note\n};\n\nuse dep::std::mem::zeroed;\n\n// Transparent note represents a note that is created in the clear (public execution), but can only be spent by those\n// that know the preimage of the \"secret_hash\" (the secret). This is typically used when shielding a token balance.\n// Owner of the tokens provides a \"secret_hash\" as an argument to the public \"shield\" function and then the tokens\n// can be redeemed in private by presenting the preimage of the \"secret_hash\" (the secret).\n#[note]\npub struct TransparentNote {\n    amount: Field,\n    secret_hash: Field,\n}\n\nimpl NullifiableNote for TransparentNote {\n    // Computing a nullifier in a transparent note is not guarded by making secret a part of the nullifier preimage (as\n    // is common in other cases) and instead is guarded by the functionality of \"redeem_shield\" function. There we do\n    // the following:\n    //      1) We pass the secret as an argument to the function and use it to compute a secret hash,\n    //      2) we fetch a note via the \"get_notes\" oracle which accepts the secret hash as an argument,\n    //      3) the \"get_notes\" oracle constrains that the secret hash in the returned note matches the one computed in\n    //         circuit.\n    // This achieves that the note can only be spent by the party that knows the secret.\n    fn compute_nullifier(self, _context: &mut PrivateContext, _note_hash_for_nullify: Field) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        // compute_nullifier ignores both of its parameters so we can reuse it here\n        self.compute_nullifier(zeroed(), zeroed())\n    }\n}\n\nimpl TransparentNote {\n    // CONSTRUCTORS\n    pub fn new(amount: Field, secret_hash: Field) -> Self {\n        TransparentNote { amount, secret_hash, header: NoteHeader::empty() }\n    }\n}\n\nimpl Eq for TransparentNote {\n    fn eq(self, other: Self) -> bool {\n        (self.amount == other.amount) & (self.secret_hash == other.secret_hash)\n    }\n}\n\n// docs:end:token_types_all\n"},"35":{"path":"std/hash/sha256.nr","source":"use crate::runtime::is_unconstrained;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:sha256\n{\n    crate::sha256::digest(input)\n}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: [u32; 16], _state: [u32; 8]) -> [u32; 8] {}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> [u8; 32] {\n    sha256_var(msg, N as u64)\n}\n\n// Convert 64-byte array to array of 16 u32s\nfn msg_u8_to_u32(msg: [u8; 64]) -> [u32; 16] {\n    let mut msg32: [u32; 16] = [0; 16];\n\n    for i in 0..16 {\n        let mut msg_field: Field = 0;\n        for j in 0..4 {\n            msg_field = msg_field * 256 + msg[64 - 4*(i + 1) + j] as Field;\n        }\n        msg32[15 - i] = msg_field as u32;\n    }\n\n    msg32\n}\n\nunconstrained fn build_msg_block_iter<let N: u32>(msg: [u8; N], message_size: u64, msg_start: u32) -> ([u8; 64], u64) {\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut msg_byte_ptr: u64 = 0; // Message byte pointer\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n    for k in msg_start..msg_end {\n        if k as u64 < message_size {\n            msg_block[msg_byte_ptr] = msg[k];\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n    (msg_block, msg_byte_ptr)\n}\n\n// Verify the block we are compressing was appropriately constructed\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u64,\n    msg_block: [u8; 64],\n    msg_start: u32\n) -> u64 {\n    let mut msg_byte_ptr: u64 = 0; // Message byte pointer\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    let mut extra_bytes = 0;\n    if msg_end > N {\n        msg_end = N;\n        extra_bytes = msg_end - N;\n    }\n\n    for k in msg_start..msg_end {\n        if k as u64 < message_size {\n            assert_eq(msg_block[msg_byte_ptr], msg[k]);\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\nglobal BLOCK_SIZE = 64;\nglobal ZERO = 0;\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> [u8; 32] {\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut h: [u32; 8] = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]; // Intermediate hash, starting with the canonical initial value\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n        if msg_start as u64 < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start as u64 < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start as u64 < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if msg_byte_ptr == 64 {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n\n        if msg_start as u64 < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start as u64 < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start as u64 < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if msg_byte_ptr == BLOCK_SIZE as u64 {\n        msg_byte_ptr = 0;\n    }\n\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    msg_block[msg_byte_ptr] = 1 << 7;\n    let last_block = msg_block;\n    msg_byte_ptr = msg_byte_ptr + 1;\n\n    unsafe {\n        let (new_msg_block, new_msg_byte_ptr) = pad_msg_block(msg_block, msg_byte_ptr);\n        msg_block = new_msg_block;\n        if crate::runtime::is_unconstrained() {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..64 {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n\n        // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n        // the 1 and 0s fill up the current block, which we then compress accordingly.\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for _i in 57..64 {\n            if msg_byte_ptr <= 63 & msg_byte_ptr >= 57 {\n                assert_eq(msg_block[msg_byte_ptr], zero);\n                msg_byte_ptr += 1;\n            }\n        }\n    }\n\n    if msg_byte_ptr >= 57 {\n        h = sha256_compression(msg_u8_to_u32(msg_block), h);\n\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe {\n        attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size)\n    };\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..56 {\n            let predicate = (i < msg_byte_ptr) as u8;\n            let expected_byte = predicate * last_block[i];\n            assert_eq(msg_block[i], expected_byte);\n        }\n\n        // We verify the message length was inserted correctly by reversing the byte decomposition.\n        let len = 8 * message_size;\n        let mut reconstructed_len: Field = 0;\n        for i in 56..64 {\n            reconstructed_len = 256 * reconstructed_len + msg_block[i] as Field;\n        }\n        assert_eq(reconstructed_len, len as Field);\n    }\n\n    hash_final_block(msg_block, h)\n}\n\nunconstrained fn pad_msg_block(mut msg_block: [u8; 64], mut msg_byte_ptr: u64) -> ([u8; 64], u64) {\n    // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n    // the 1 and 0s fill up the current block, which we then compress accordingly.\n    if msg_byte_ptr >= 57 {\n        // Not enough bits (64) to store length. Fill up with zeros.\n        if msg_byte_ptr < 64 {\n            for _ in 57..64 {\n                if msg_byte_ptr <= 63 {\n                    msg_block[msg_byte_ptr] = 0;\n                    msg_byte_ptr += 1;\n                }\n            }\n        }\n    }\n    (msg_block, msg_byte_ptr)\n}\n\nunconstrained fn attach_len_to_msg_block(mut msg_block: [u8; 64], mut msg_byte_ptr: u64, message_size: u64) -> [u8; 64] {\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for _i in 0..64 {\n        // In any case, fill blocks up with zeros until the last 64 (i.e. until msg_byte_ptr = 56).\n        if msg_byte_ptr < 56 {\n            msg_block[msg_byte_ptr] = 0;\n            msg_byte_ptr = msg_byte_ptr + 1;\n        } else if msg_byte_ptr < 64 {\n            for j in 0..8 {\n                msg_block[msg_byte_ptr + j] = len_bytes[j];\n            }\n            msg_byte_ptr += 8;\n        }\n    }\n    msg_block\n}\n\nfn hash_final_block(msg_block: [u8; 64], mut state: [u32; 8]) -> [u8; 32] {\n    let mut out_h: [u8; 32] = [0; 32]; // Digest as sequence of bytes\n\n    // Hash final padded block\n    state = sha256_compression(msg_u8_to_u32(msg_block), state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[7 - j] as Field).to_le_bytes();\n        for k in 0..4 {\n            out_h[31 - 4*j - k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n"},"369":{"path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/circuits/zimburse_verifiers/src/linode.nr","source":"use dep::zkemail::{KEY_LIMBS_2048, dkim::verify_dkim_2048, body_hash::{compare_body_hash, get_body_hash_by_index}};\nuse crate::constants::{LinodeBillingParams, MAX_EMAIL_BODY_LENGTH, MAX_EMAIL_HEADER_LENGTH};\nuse crate::utils::{check_from_linode_billing, check_subject_billing_receipt, extract_billed_amount};\n\npub fn verify_linode_billing_receipt(\n    body: [u8; MAX_EMAIL_BODY_LENGTH],\n    body_hash_index: u32,\n    body_length: u32,\n    header: [u8; MAX_EMAIL_HEADER_LENGTH],\n    header_length: u32,\n    pubkey: [Field; KEY_LIMBS_2048],\n    pubkey_redc: [Field; KEY_LIMBS_2048],\n    signature: [Field; KEY_LIMBS_2048],\n    from_index: u32,\n    subject_index: u32,\n    amount_index: u32,\n    amount_length: u32,\n    receipt_id_length: u32,\n) -> u32 {\n\n    // check the body and header lengths are within bounds\n    assert(header_length <= MAX_EMAIL_HEADER_LENGTH);\n    assert(body_length <= MAX_EMAIL_BODY_LENGTH);\n\n    // verify the dkim signature over the header\n    verify_dkim_2048(header, header_length, pubkey, pubkey_redc, signature);\n    // manually extract the body hash from the header\n    let body_hash_encoded = get_body_hash_by_index(header, body_hash_index);\n    // compare the retrieved body hash to the computed body hash\n    compare_body_hash(body_hash_encoded, body, body_length);\n    // assert email is from billing@linode.com\n    check_from_linode_billing(from_index, header);\n    // assert this is a billing receipt email from Linode\n    check_subject_billing_receipt(subject_index, header, receipt_id_length);\n    // extract billed amount and serialize\n    let billed_amount = extract_billed_amount(body, amount_index, amount_length);\n    billed_amount\n}\n"},"370":{"path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/circuits/zimburse_verifiers/src/utils.nr","source":"use crate::constants::{\n   LB_FROM_LEN, LB_PAYMENT_TEXT_LEN, LB_SUBJECT_FIXED_END_LEN, LB_SUBJECT_FIXED_START_LEN, LINODE_BILLING_FROM, LINODE_BILLING_PAYMENT_TEXT,\n   LINODE_BILLING_SUBJECT_FIXED_END, LINODE_BILLING_SUBJECT_FIXED_START, MAX_BILLED_AMOUNT, MAX_EMAIL_BODY_LENGTH,\n    MAX_EMAIL_HEADER_LENGTH\n};\n\n/**\n* Check that email is from linode billing address\n*/\npub fn check_from_linode_billing(index: u32, header: [u8; MAX_EMAIL_HEADER_LENGTH]) {\n    // check the first char is \"f\" or \"F\"\n    assert((header[index] == 0x66) | (header[index] != 0x46), \"Email sender not found.\");\n\n    // check the remaing chars are the expected Linode billing\n    let from_bytes = LINODE_BILLING_FROM.as_bytes();\n    for i in 0..LB_FROM_LEN {\n        assert(header[i + index + 1] == from_bytes[i], \"Email not from Linode billing.\");\n    }\n\n    // check for CRLF\n    assert(header[LB_FROM_LEN + index + 1] == 0x0D, \"Invalid CRLF sequence\");\n    assert(header[LB_FROM_LEN + index + 2] == 0x0A, \"Invalid CRLF sequence\");\n}\n\n/**\n* Check that email subject is linode billing receipt\n*/\npub fn check_subject_billing_receipt(index: u32, header: [u8; MAX_EMAIL_HEADER_LENGTH], receipt_id_length: u32) {\n    // check the first char is \"s\" or \"S\"\n    assert((header[index] == 0x73) | (header[index] == 0x53), \"Email subject not found\");\n\n    let fixed_start_bytes = LINODE_BILLING_SUBJECT_FIXED_START.as_bytes();\n    // check chars in fixed section start\n    for i in 0..LB_SUBJECT_FIXED_START_LEN {\n        assert(header[i + index + 1] == fixed_start_bytes[i], \"Email subject is not Linode billing receipt\");\n    }\n\n    let fixed_end_bytes = LINODE_BILLING_SUBJECT_FIXED_END.as_bytes();\n    // check chars in fixed section end\n    for i in 0..LB_SUBJECT_FIXED_END_LEN {\n        let headerIndex = i + index + receipt_id_length + LB_SUBJECT_FIXED_START_LEN;\n        assert(header[headerIndex] == fixed_end_bytes[i], \"Email subject is not Linode billing receipt\");\n    }\n}\n\npub fn serialize_bytes<let LIMBS: u32, let SEQUENCE_LENGTH: u32>(sequence: [u8; SEQUENCE_LENGTH]) -> [Field; LIMBS] {\n    let mut limbs: [Field; LIMBS] = [0; LIMBS];\n    for i in 0..LIMBS {\n        let mut chunk = 0;\n        let mut v = 1;\n        for j in 0..31 {\n            let index = i * 31 + j;\n            if index < SEQUENCE_LENGTH {\n                chunk += sequence[index] as Field * v;\n                v *= 256;\n            }\n        }\n        limbs[i] = chunk;\n    }\n    limbs\n}\n\npub fn is_number_constraint(num: u8) {\n    assert(num >= 0x30);\n    assert(num < 0x3A);\n}\n\n/**\n* Extract the amount billed by Linode as a u32\n*/\npub fn extract_billed_amount(body: [u8; MAX_EMAIL_BODY_LENGTH], index: u32, amount_length: u32) -> u32 {\n\n    // ensure billed amount follows valid payment text sequence\n    let payment_text_bytes = LINODE_BILLING_PAYMENT_TEXT.as_bytes();\n    for i in 0..LB_PAYMENT_TEXT_LEN {\n        assert(body[(index - LB_PAYMENT_TEXT_LEN) + i] == payment_text_bytes[i], \"Invalid payment text sequence.\");\n    }\n\n    let mut amount: Field = 0;\n    let fixed_values = 4; // '$', '.', and two decimals\n    let commas: Field = ((amount_length - fixed_values - 1) / 4) as Field; // account for \n    let mut power: Field = amount_length as Field - commas - 3; // 3 represents '$' and '.' and power is equal to numberic len - 1\n\n    // ensure first character is '$'\n    assert(body[index] == 36);\n\n    // if second character is a zero then decrement power\n    if body[index + 1] == 48 {\n        power = power - 1;\n    }\n\n    for i in 1..MAX_BILLED_AMOUNT {\n        if i < amount_length {\n            let byte = body[index + i];\n            // check that byte is not a comma or period\n            if (byte != 44) & (byte != 46) {\n                amount = amount + ((byte as Field - 48) * (10 as Field).pow_32(power));\n                power = power - 1;\n            }\n        }\n    }\n    amount as u32\n}\n\n// #[test]\n// fn value_extraction() {\n//     let index = 0;\n//     let mut body: [u8; MAX_EMAIL_BODY_LENGTH] = [0; MAX_EMAIL_BODY_LENGTH];\n//     let val = \"$4,123.00\";\n//     let bytes = val.as_bytes();\n//     for i in 0..bytes.len() {\n//         body[i] = bytes[i];\n//     }\n//     let extracted = extract_billed_amount(body, index, bytes.len());\n//     println(extracted);\n// }\n\n#[test]\nfn test_payment_string_bytes() {\n let bytes = LINODE_BILLING_PAYMENT_TEXT.as_bytes();\n println(bytes);\n}"},"372":{"path":"/Users/ianbrighton/nargo/github.com/zkemail/zkemail.nrv0.2.0/lib/src/base64.nr","source":"use crate::BODY_HASH_BASE64_LENGTH;\n\n// noir_base64 has issues right now, just use this for now\n\n/**\n * Decodes a base64 encoded body hash into a 32 byte sha256 hash of the body\n * @notice from https://github.com/richardliang/noir-rsa/blob/main/crates/rsa-biguint/src/lib.nr\n\n * @param encoded - the base 64 encoded body hash\n * @returns the decoded sha256 hash\n */\npub fn bodyhash_base64_decode(encoded: [u8; BODY_HASH_BASE64_LENGTH]) -> [u8; 32] {\n    let mut total_bits = [0 as u1; BODY_HASH_BASE64_LENGTH * 6];\n    for i in 0..BODY_HASH_BASE64_LENGTH {\n        let translate = base64_lookup(encoded[i] as u8);\n        // Store as big endian\n        let translate_bits: [u1; 6] = (translate as Field).to_be_bits();\n        for j in 0..6 {\n            total_bits[i * 6 + j] = translate_bits[j];\n        }\n    }\n\n    // Since we're returning the SHA256 hash, only need first 32 bytes (=256 bits)\n    let mut output = [0 as u8; 32];\n    for i in 0..32 {\n        for j in 0..8 {\n            // Convert from big endian back to little endian\n            output[i] |= (total_bits[i * 8 + j] as u8) << (7 - j) as u8;\n        }\n    }\n\n    output\n}\n\n/**\n * Lookup for the base 64 encoding\n * @todo: replace with noir_lang base64 lib\n *\n * @param input - the base 64 encoded character\n * @returns the decoded value\n */\nfn base64_lookup(input: u8) -> u8 {\n    // A-Z: 65-90\n    if input >= 65 & input <= 90 {\n        input - 65\n    } else if input >= 97 & input <= 122 {\n        // a-z: 97-122\n        input - 71\n    } else if input >= 48 & input <= 57 {\n        // 0-9: 48-57\n        input + 4\n    } else if input == 43 {\n        // +\n        62\n    } else if input == 47 {\n        // /\n        63\n    } else {\n        // =\n        0\n    }\n}"},"373":{"path":"/Users/ianbrighton/nargo/github.com/zkemail/zkemail.nrv0.2.0/lib/src/body_hash.nr","source":"use crate::BODY_HASH_BASE64_LENGTH;\nuse crate::base64::bodyhash_base64_decode;\nuse dep::std::hash::sha256_var;\n\nglobal BH_PREFIX: [u8; 3] = [98, 104, 61]; // \"bh=\"\nglobal BH_SUFFIX: u8 = 59; // \";\"\n\n/**\n * Get the body hash from the header by allowing circuit input to choose index\n * @notice unsafe, can theoretically make a recipient display name = the bh\n *\n * @param HEADER_LENGTH - The length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param index - The asserted index to find the body hash at\n * @returns The base 64 encoded body hash\n */\npub fn get_body_hash_by_index<let MAX_HEADER_LENGTH: u32>(\n    header: [u8; MAX_HEADER_LENGTH],\n    index: u32\n) -> [u8; BODY_HASH_BASE64_LENGTH] {\n    // check index range\n    assert(index >= 3, \"Index does not leave room for 'bh=' prefix\");\n    assert(index + BODY_HASH_BASE64_LENGTH < MAX_HEADER_LENGTH, \"Index does not leave room for body hash\");\n    // check for 'bh=' prefix\n    for i in 0..3 {\n        assert(header[index - 3 + i] == BH_PREFIX[i], \"No 'bh=' prefix found\");\n    }\n    // check for base64 suffix\n    assert(header[index + BODY_HASH_BASE64_LENGTH] == BH_SUFFIX, \"No base64 suffix found\");\n    // retrieve body hash\n    let mut body_hash = [0 as u8; BODY_HASH_BASE64_LENGTH];\n    for i in 0..BODY_HASH_BASE64_LENGTH {\n        body_hash[i] = header[index + i];\n    }\n    body_hash\n}\n\n/**\n * Given a retrieved base64-encoded body hash and the actual body, check that the body hashes to the same value\n * @notice not used with partial hash, see compare_partial_body_hash\n * @dev todo: check if b64 encoding or decoding is cheaper\n *\n * @param MAX_BODY_LENGTH - The maximum length of the email body\n * @param body_hash_encoded - The base 64 encoded body hash retrieved from the DKIM-signed header\n * @param body - The email body, 0-padded at end to the MAX_BODY_LENGTH\n * @param body_length - The actual length of the email body\n */\npub fn compare_body_hash<let MAX_BODY_LENGTH: u32>(\n    body_hash_encoded: [u8; BODY_HASH_BASE64_LENGTH],\n    body: [u8; MAX_BODY_LENGTH],\n    body_length: u32\n) {\n    // base64 decode the retrieved encoded body hash\n    // let signed_body_hash: [u8; 32] = base64_decode(body_hash_encoded);\n    let signed_body_hash: [u8; 32] = bodyhash_base64_decode(body_hash_encoded);\n    // sha256 hash the body\n    let computed_body_hash: [u8; 32] = sha256_var(body, body_length as u64);\n    // check the body hashes match\n    assert(\n        signed_body_hash == computed_body_hash, \"Sha256 hash computed over body does not match DKIM-signed header\"\n    );\n}\n"},"375":{"path":"/Users/ianbrighton/nargo/github.com/zkemail/zkemail.nrv0.2.0/lib/src/dkim.nr","source":"use dep::rsa::bignum::fields::{Params1024, Params2048};\nuse dep::rsa::bignum::runtime_bignum::BigNumInstance;\nuse dep::rsa::types::RSA;\nuse dep::rsa::bignum::BigNum;\nuse dep::std::hash::sha256_var;\nuse crate::{KEY_LIMBS_1024, KEY_LIMBS_2048, KEY_BYTES_1024, KEY_BYTES_2048, RSA_EXPONENT};\n\ntype BN1024 = BigNum<KEY_LIMBS_1024, Params1024>;\ntype RSA1024 = RSA<BN1024, BigNumInstance<KEY_LIMBS_1024, Params1024>, KEY_BYTES_1024>;\ntype BN2048 = BigNum<KEY_LIMBS_2048, Params2048>;\ntype RSA2048 = RSA<BN2048, BigNumInstance<KEY_LIMBS_2048, Params2048>, KEY_BYTES_2048>;\n\n/**\n * Verify a 1024-bit RSA (DKIM) signature over an email header\n * \n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header, 0-padded to the maximum possible length for this circuit\n * @param header_length - The actual length of the email header\n * @param pubkey_modulus_limbs - The DKIM RSA Pubkey\n * @param redc_params_limbs - Barrett Reduction Parameter for Pubkey for efficient signature verification\n * @param signature - The DKIM RSA Signature \n */\npub fn verify_dkim_1024<let MAX_HEADER_LENGTH: u32>(\n    header: [u8; MAX_HEADER_LENGTH],\n    header_length: u32,\n    pubkey: [Field; KEY_LIMBS_1024],\n    pubkey_redc: [Field; KEY_LIMBS_1024],\n    signature: [Field; KEY_LIMBS_1024]\n) {\n    // check the header length is within bounds\n    assert(header_length <= MAX_HEADER_LENGTH);\n\n    // instantiate the BNInstance for the pubkey\n    let pubkey: BigNumInstance<KEY_LIMBS_1024, Params1024> = BigNumInstance::new(pubkey, pubkey_redc);\n\n    // instantiate BN for the signature\n    let signature: BN1024 = BigNum::from_array(signature);\n\n    // hash the header\n    let header_hash = sha256_var(header, header_length as u64);\n\n    // verify the DKIM signature over the header\n    let rsa: RSA1024 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n}\n\n/**\n * Verify a 1024-bit RSA (DKIM) signature over an email header\n * \n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header, 0-padded to the maximum possible length for this circuit\n * @param header_length - The actual length of the email header\n * @param pubkey_modulus_limbs - The DKIM RSA Pubkey\n * @param redc_params_limbs - Barrett Reduction Parameter for Pubkey for efficient signature verification\n * @param signature - The DKIM RSA Signature \n */\npub fn verify_dkim_2048<let MAX_HEADER_LENGTH: u32>(\n    header: [u8; MAX_HEADER_LENGTH],\n    header_length: u32,\n    pubkey: [Field; KEY_LIMBS_2048],\n    pubkey_redc: [Field; KEY_LIMBS_2048],\n    signature: [Field; KEY_LIMBS_2048]\n) {\n    // check the header length is within bounds\n    assert(header_length <= MAX_HEADER_LENGTH);\n\n    // instantiate the BNInstance for the pubkey\n    let pubkey: BigNumInstance<KEY_LIMBS_2048, Params2048> = BigNumInstance::new(pubkey, pubkey_redc);\n\n    // instantiate BN for the signature\n    let signature: BN2048 = BigNum::from_array(signature);\n\n    // hash the header\n    let header_hash = sha256_var(header, header_length as u64);\n\n    // verify the DKIM signature over the header\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n}\n"},"378":{"path":"/Users/ianbrighton/nargo/github.com/noir-lang/noir_rsav0.3.0/lib/src/rsa.nr","source":"use dep::bignum::BigNum;\nuse dep::bignum::runtime_bignum::BigNumInstance;\nuse dep::bignum::runtime_bignum::BigNumTrait;\nuse dep::bignum::runtime_bignum::BigNumInstanceTrait;\n\nuse crate::types::{RSA, BN1024, BN2048, BNInst1024, BNInst2048, RSA1024, RSA2048};\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n\n    for i in 0..32 {\n        // Padded hash is reversed\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] = [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i as u32 < 52 + ps_len as u32 {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i as u32 == 52 + ps_len as u32 {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i as u32 == 53 + ps_len as u32 {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\nimpl<BN, BNInstance, let NumBytes: u32> RSA<BN, BNInstance, NumBytes>  where BN: BigNumTrait, BNInstance: BigNumInstanceTrait<BN> {\n    /**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @details The fourth function parameter is required to define the value of `NBytes`\n *          when converting a BigNum into a byte array, the number of bytes is required and currently cannot be inferred.\n *          Once numeric generics can be derived by applying operations to other numeric generics the need for this will go away.\n *\n * @note The exponent `e` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\n    pub fn verify_sha256_pkcs1v15(_: Self, instance: BNInstance, msg_hash: [u8; 32], sig: BN, exponent: u32) -> bool {\n        assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n        let mut exponentiated = instance.mul(sig, sig); // sig^2\n\n        if exponent == 65537 {\n            // e = 65537 = 1 0000 0000 0000 0001\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2 * sig^2 = sig^4\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^64\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^128\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^256\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^512\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^1024\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2048\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^4096\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8192\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16384\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32768\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^65536\n        }\n        // otherwise, e = 3 = 11\n\n        exponentiated = instance.mul(exponentiated, sig); // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n\n        let mut padded_sha256_hash_bytes: [u8; NumBytes] = exponentiated.to_le_bytes();\n        compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n    }\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_1024() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst1024 = BigNumInstance::new(\n        [\n        0xe908724e0d28a1565511879e00f063, 0x58dea28d5112982c8ab8597d3e611f, 0xb115f9878acc910a47b41ac8d5f763, 0xc71b0a719c2283f710f86024737cee, 0x9ee9eb73e95b84f033af5217337427, 0x8fcab34c99cc2661dd57de15ae2110, 0xa38db8a829eec5550342f6f66334dc, 0xd7c4b32fd351a47d860fda1897330e, 0x98c92a33a0f33fd7\n    ],\n        [\n        0x55582e8ba08822783fbd7d07390be2, 0x1d7d83f9dce3983c66f440dcc2f33e, 0x6072d13c84a4cb304f58fbabe782e7, 0x0cee5e0dd62bc54d15a91a4ea3bc50, 0xc485e6f946c45cf660fba4f49325cb, 0x1f0e45df0464b065c94e84ed1dad8c, 0xe4c7b3976310ea239059d834b545f3, 0xd418145200fa77235f5f8d852b121f, 0x01acf0bd16cad9bd8f\n    ]\n    );\n    let signature: BN1024 = BigNum::from_array(\n        [\n        0x393f230b55a12fb7bb39c7edd2cf48, 0x78f7d0a217d340407cae4f39b8f001, 0x603909ff76a519f3c8e96d695d462e, 0x0640ab230b459bf4b20b4823a5b850, 0x02ba190de61a85074b18e228231984, 0xe1424c0779825707aa433ecb86c388, 0xbed8087d947a9c6c56625ad20c91aa, 0x7da4a0c2eee3a3c0d61e892ab4ada9, 0x6ef98a936c8bf8e5\n    ]\n    );\n\n    let rsa: RSA1024 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world\".as_bytes());\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0x183b4cadacea64716b6535b25a86ad, 0x129a32e9fbd374949e81b080546c2b, 0x9276332765f54b9b4d6fe23f4983a4, 0x91df05fde1a414c9fbf38808a01032, 0x97ca171c382e082ddd6c81be090902, 0x97161dde47ed979939451704b72648, 0x3b66f0c93f8ddbc62bb99f6b8fad2d, 0xc3a046fcad814d8938da372cd84d2a, 0xfe903cfe3ee4de6de3916023bb87f2, 0x8be5fd99c8b46dce9aab27ce4b3883, 0x0d99dfe50dd2288123804872da8543, 0xbb6d8afef8b2c7e3b86ad96973d4e5, 0x17e08fa3c5391279b844581f67825c, 0x09511f4a436abe495bfbfcc254d9c5, 0xf80d02572d620eab5ad7ecfbe2c20c, 0x2a5307402a05f59ba232ad0c8366d0, 0x7b9169630b317c38d549a86f85fcfc, 0xf2\n    ],\n        [\n        0xf4effa025abe90db41dc5bb5934a5f, 0x2596b25aa09f6a0e290accebbef006, 0x330e9567ec5eca92b7a8ce72ad3d83, 0xccf98d178ec4017e4947cadc02da7c, 0xaed6044ffeeb12de4d1e67aedfda78, 0xb5ae8a5a4637b632800e2f41dfbf0a, 0x8304360d359cf2f0d5d97c039f9b04, 0x53cde0d0633c0e66e1da9a118f6a96, 0xf9a83822351097bb1ed123d10290f5, 0xeb489c7f7227c09ca0117264dcf04f, 0x6a1b3618478a235f438adf84533177, 0x71c03085e38a87f5ec8e51c27dde98, 0xcf3e89d9cf253ef61d65d4431334d9, 0xa5a1a59e98fb7f49c746149324201d, 0x38f46c635f884f24c254eaa37981d6, 0x1c42be15dd95e1ac5bf01972b24ff9, 0x4555dd506d1f89e61279293c03db90, 0x010e\n    ]\n    );\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x5f0937ed1aacbdb83991e21c89ca8a, 0x5a1fa4ef2faf4042401c9121c73874, 0x7379fbb7713fbf807d250f7401afb8, 0x9cc5ce8813f3a83a72b681a4d434b2, 0x11cb49ac2ee1f9bed8a008b8327e1e, 0xf3362524f1224e48827b34a62f6ace, 0x3498a2944e32a3798fe9da684b32ae, 0xc346c33528bcdf7a06805126a29402, 0x6ac93f2fa68f270ec73674eae24380, 0x222c72de080496533ceeb8af827910, 0xc22889b311a53203278b942ca67100, 0x93d75567f7fe9ee7ca9871a0cb09f9, 0x049dabd976a9574847b1614f6b739c, 0xdc66b621dbae623df9b657b52fa1b0, 0xf37e82cc1eced382e11fc32e673f67, 0xe50545eb9027f1144a0ba7bbb0c886, 0xb6193409539c515d3c55a45c5734b1, 0x4b\n    ]\n    );\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0xc6a1c5e80ce354c6b00ccf20cf3a1d, 0x178d135f925a03eceb25f79bab56ee, 0x13ab3d6d8a5c5586752b5a3bc74ec3, 0x3d13b47b152367e3e2fc014d03d19f, 0xe89a7278a2945b4a672011691db30f, 0x5b4c1b061378143629dbb29dea1e4, 0x26a48b6f4e8df1472fd4fc12b17c18, 0xc7c92ead0ce810520cf3a8267254c1, 0x806b8cdba93909e9d9a71ee1bcdac2, 0x703ef80f8eb703b84c201366dff1c7, 0x7361034bb2c4c081aad8b1bcca83de, 0xb23c7e1109e65e6d08fa72cc862008, 0x750bc927874455782cd2d6fd5a51f6, 0xf0b83665fbf8cb5cf31cee9f89848e, 0x20d447b08953c7ce3330197938a8ae, 0x11a08bb5a2241c6a2a69f930d8b28b, 0xef5bca8dd582570a44705cb123d09e, 0xb7\n    ],\n        [\n        0xbc93ee57c1c8adc53f0a995a6221ca, 0x2a9b43587534b20dd85a5233329f10, 0xc587fd488f64eed02adc1f462f7448, 0xf1484d37676bb0e800996757382522, 0xc2126c48221aa61c9f52c6b918bab3, 0x8660c861dd52ed958beaf6c6c2cff0, 0x5edd9dc4f02a000f350948c70bdf94, 0x6f3b9603149272e9b232a379a017bb, 0x950fd85cffbdf4476b1cb66c1f63d6, 0xee459417b1a56b6f7ef3b89e385ac, 0x48daeef6d1a055f3746ab71058e137, 0x3cbc0ba96d541feee92dd27f9d0306, 0x6a2a42384cc388fa113ee80317e0a0, 0x43b4f89c508a42d309f295c0d9f3a5, 0x8d8c28b05f71b962b40ea906ff407f, 0x390a7989eb9cecc5827cb00e1ca693, 0x4cbf158eabf7e96ef7f2586d0ce613, 0x164\n    ]\n    );\n\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x19772b9af8a031170a7844ce4f3d7c, 0x4808e817258f57805a7326f70bcd74, 0xca8f3f98e374d52100115bfa645a7d, 0x49547189edff3b683fee267e717b7f, 0x96f263b47e96925f3b5898a7389ceb, 0x4cc50a893da91d0e085fc6656b30bc, 0x67e84ff92d88c0ad2c17ad2701309e, 0x095326818578173289665fcd9ad788, 0x775c6e85b745065db9411b9d579763, 0xad0f20c8a5265dfca4080ca877a2b8, 0xbfd199372f1680b3bc583a08bd8ba9, 0x663476ca3e5ede3e5976887db2c4e5, 0x531192309d0d49fed47c0216c27f9e, 0x37d26d31c86b951ca1c17b517063b7, 0x3cdb362ed5dfd06568eb9a9bbb6a91, 0x14520b9c23f583314729a9d858bca9, 0x5e0505067ada1026721d45997bf2c4, 0x3e\n    ]\n    );\n\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 3));\n}\n"},"381":{"path":"/Users/ianbrighton/nargo/github.com/noir-lang/noir-bignumv0.3.3/src/utils/split_bits.nr","source":"\n// Decomposes a single field into two 120 bit fields and a carry\nunconstrained pub fn split_120_bits(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let offsets: [Field; 17] = [\n        1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000, 0x10000000000000000, 0x1000000000000000000, 0x100000000000000000000, 0x10000000000000000000000, 0x1000000000000000000000000, 0x100000000000000000000000000, 0x10000000000000000000000000000, 0x1000000000000000000000000000000, 0x100000000000000000000000000000000\n    ];\n\n    for i in 0..15 {\n        low += (x_bytes[i] as Field) * offsets[i];\n        high += (x_bytes[i + 15] as Field) * offsets[i];\n    }\n    high += (x_bytes[30] as Field) * offsets[15];\n    high += (x_bytes[31] as Field) * offsets[16];\n    // TDOO: investigate why this is triggered in BigCurve crate? it shouldn't be?\n    //   assert(x_bytes[31] == 0);\n    (low, high)\n}\n\n/**\n * @brief Decomposes a single field into two 60 bit fields\n *\n * @description Expects the input limb to be in the range [0, ..., 2^{120 - 1}]\n **/\nunconstrained pub fn split_60_bits(x: Field) -> (u64, u64) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: u64 = 0;\n    let mut high: u64 = 0;\n\n    let offsets: [u64; 8] = [1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000];\n    for i in 0..8 {\n        low += (x_bytes[i] as u64) * offsets[i];\n        high += (x_bytes[i + 8] as u64) * offsets[i];\n    }\n    let t1 = low >> 60;\n    let mask = ((1 as u64) << 60 as u8) - 1;\n    low = low & mask;\n    high = (high << 4) | t1;\n    (low, high)\n}\n"},"382":{"path":"/Users/ianbrighton/nargo/github.com/noir-lang/noir-bignumv0.3.3/src/utils/arrayX.nr","source":"use dep::std;\nuse crate::utils::split_bits;\n\n/**\n * @brief Array abstraction, whose size is a known multiplier `SizeMultiplier` of an initial size `N`\n *\n * @note ArrayX is a workaround for the lack of arithmetic over generics.\n *       e.g. [Field; N * 2] is not currently possible\n *       This abstraction can be removed once Noir supports arithmetic on generics.\n**/\nstruct  ArrayX<T, let N: u32, let SizeMultiplier: u32> {\n    segments: [[T; N]; SizeMultiplier]\n}\n\nimpl<T, let N: u32, let SizeMultiplier: u32> std::convert::From<[T; N]> for ArrayX<T, N, SizeMultiplier> where T: std::default::Default {\n    fn from(input: [T; N]) -> Self {\n        assert(N == 1);\n        let mut result = ArrayX::new();\n        result.segments[0] = input;\n        result\n    }\n}\n\nimpl<T, let N: u32, let SizeMultiplier: u32> std::convert::From<[[T; N]; SizeMultiplier]> for ArrayX<T, N, SizeMultiplier> where T: std::default::Default {\n    fn from(input: [[T; N]; SizeMultiplier]) -> Self {\n        ArrayX { segments: input }\n    }\n}\n\nimpl<T, let N: u32, let SizeMultiplier: u32> std::cmp::Eq for ArrayX<T, N, SizeMultiplier> where T: std::cmp::Eq {\n    fn eq(self, other: Self) -> bool {\n        let mut result: bool = true;\n        for i in 0..SizeMultiplier {\n            for j in 0..N {\n                result = result & (self.segments[i][j] == other.segments[i][j]);\n            }\n        }\n        result\n    }\n}\n\nimpl<T, let N: u32, let SizeMultiplier: u32> ArrayX<T, N, SizeMultiplier> {\n\n    fn new() -> Self where T: std::default::Default {\n        ArrayX { segments: [[T::default(); N]; SizeMultiplier] }\n    }\n\n    fn mul_assign(&mut self, i: u32, rhs: T) where T: std::ops::Mul {\n        let segment = i / N;\n        let index = i % N;\n        self.segments[segment][index] *= rhs;\n    }\n\n    fn add_assign(&mut self, i: u32, rhs: T) where T: std::ops::Add {\n        let segment = i / N;\n        let index = i % N;\n        self.segments[segment][index] += rhs;\n    }\n\n    fn sub_assign(&mut self, i: u32, rhs: T) where T: std::ops::Sub {\n        let segment = i / N;\n        let index = i % N;\n        self.segments[segment][index] -= rhs;\n    }\n\n    fn set(&mut self, i: u32, x: T) {\n        let segment = i / N;\n        let index = i % N;\n        self.segments[segment][index] = x;\n    }\n\n    fn get(self, i: u32) -> T {\n        let segment = i / N;\n        let index = i % N;\n        self.segments[segment][index]\n    }\n}\n\nimpl<let N: u32, let SizeMultiplier: u32> ArrayX<Field, N, SizeMultiplier> {\n\n    unconstrained fn __normalize_limbs(self, range: u32) -> Self {\n        let mut normalized: Self = ArrayX::new();\n        let mut inp = self;\n        // (9 limb mul = 17 product terms)\n\n        // a2 a1 a0\n        // b2 b1 b0\n\n        // a0b0\n        // a1b0 a0b1\n        // a2b0 a1b1 a0b2\n        // a2b1 a1b2\n        // a2b2\n\n        // r0 lo\n        // r0 hi + r1 lo\n        // r1 hi + r2 lo\n        // r2 hi + r3 lo\n        // r3 hi + r4 lo\n        // r4 hi = 6?\n        for i in 0..(range - 1) {\n            let (lo, hi) = split_bits::split_120_bits(inp.get(i));\n\n            normalized.set(i, lo);\n            inp.set(i + 1, inp.get(i + 1) + hi);\n        }\n        {\n            let (lo, hi) = split_bits::split_120_bits(inp.get(range - 1));\n            normalized.set(range - 1, lo);\n            assert(hi == 0);\n        }\n        normalized\n    }\n}\n"},"383":{"path":"/Users/ianbrighton/nargo/github.com/noir-lang/noir-bignumv0.3.3/src/utils/u60_representation.nr","source":"use dep::std;\n\nuse crate::utils::arrayX::ArrayX;\nuse crate::utils::split_bits;\nuse crate::utils::msb::get_msb64;\n\n/**\n * @brief U60Repr represents a BigNum element as a sequence of 60-bit unsigned integers.\n *\n * @description: used in unconstrained functions when computing witness values.\n * It is helpful to use u60 types when evaluating addition operations that can overflow the field modulus,\n * as well as when performing bit shifts.\n */\nstruct  U60Repr<let N: u32, let NumSegments: u32>\n{\n    limbs: ArrayX<u64, N, NumSegments>\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Add for U60Repr<N, NumSegments> {\n    fn add(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: ArrayX { segments: [[0; N]; NumSegments] } };\n\n        let mut carry: u64 = 0;\n        for j in 0..NumSegments {\n            for i in 0..N {\n                let mut add: u64 = self.limbs.segments[j][i] + b.limbs.segments[j][i] + carry;\n                carry = add >> 60;\n                add = add - (carry << 60);\n                result.limbs.segments[j][i] = add;\n            }\n        }\n\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Sub for U60Repr<N, NumSegments> {\n    fn sub(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: ArrayX { segments: [[0; N]; NumSegments] } };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        for j in 0..NumSegments {\n            for i in 0..N {\n                borrow = ((b.limbs.segments[j][i] + borrow_in) > self.limbs.segments[j][i]) as u64;\n                let sub = (borrow << 60) + self.limbs.segments[j][i] - b.limbs.segments[j][i] - borrow_in;\n                result.limbs.segments[j][i] = sub;\n                borrow_in = borrow;\n            }\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::From<[Field; N]> for U60Repr<N, NumSegments> {\n    fn from(input: [Field; N]) -> Self {\n        let mut result: Self = U60Repr { limbs: ArrayX { segments: [[0; N]; NumSegments] } };\n        for i in 0..(N) {\n            let (lo, hi) = split_bits::split_60_bits(input[i]);\n            result.limbs.set(2 * i, lo);\n            result.limbs.set(2 * i + 1, hi);\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::Into<[Field; N]> for U60Repr<N, NumSegments> {\n    fn into(x: U60Repr<N, NumSegments>) -> [Field; N] {\n        let mut result: [Field; N] = [0; N];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..N {\n            result[i] = x.limbs.get(2 * i) as Field + (x.limbs.get(2 * i + 1) as Field * two_pow_60);\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::cmp::Eq for U60Repr<N, NumSegments> {\n    fn eq(self, other: Self) -> bool {\n        self.limbs == other.limbs\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> U60Repr<N, NumSegments> {\n\n    unconstrained fn new<let NumFieldSegments: u32>(x: ArrayX<Field, N, NumFieldSegments>) -> Self {\n        let mut result: Self = U60Repr { limbs: ArrayX { segments: [[0; N]; NumSegments] } };\n        for i in 0..(N * NumFieldSegments) {\n            let (lo, hi) = split_bits::split_60_bits(x.get(i));\n            result.limbs.set(2 * i, lo);\n            result.limbs.set(2 * i + 1, hi);\n        }\n        result\n    }\n\n    unconstrained fn one() -> Self {\n        let mut result: Self = U60Repr { limbs: ArrayX { segments: [[0; N]; NumSegments] } };\n        result.limbs.set(0, 1);\n        result\n    }\n\n    unconstrained fn into_arrayX<let NumFieldSegments: u32>(x: U60Repr<N, NumSegments>) -> ArrayX<Field, N, NumFieldSegments> {\n        let mut result: ArrayX<Field, N, NumFieldSegments> = ArrayX { segments: [[0; N]; NumFieldSegments] };\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..(N * NumFieldSegments) {\n            result.set(\n                i,\n                x.limbs.get(2 * i) as Field + (x.limbs.get(2 * i + 1) as Field * two_pow_60)\n            );\n        }\n        result\n    }\n\n    unconstrained fn gte(self, b: Self) -> bool {\n        let mut result = false;\n        let mut early_exit = false;\n        for i in 0..(N * NumSegments) {\n            if (b.limbs.get((N * NumSegments) - 1 - i) < (self.limbs.get((N * NumSegments) - 1 - i))) {\n                result = true;\n                early_exit = true;\n                break;\n            } else if (b.limbs.get((N * NumSegments) - 1 - i) != (self.limbs.get((N * NumSegments) - 1 - i))) {\n                result = false;\n                early_exit = true;\n                break;\n            }\n        }\n        if (early_exit == false) {\n            result = (self.limbs.get(0) == b.limbs.get(0));\n        }\n        result\n    }\n\n    fn get_bit(self, bit: u32) -> bool {\n        let segment_index = bit / 60;\n        let uint_index = bit % 60;\n\n        let limb: u64 = self.limbs.get(segment_index);\n        let value = (limb >> uint_index as u8) & 1;\n        value == 1\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: ArrayX { segments: [[0; N]; NumSegments] } };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = shift % 60;\n        let remainder_shift = 60 - limb_shift;\n        let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        result.limbs.set(\n            0,\n            (self.limbs.get(0 + num_shifted_limbs) >> limb_shift as u8)\n        );\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs.get(i + num_shifted_limbs);\n            result.limbs.set(i, (value >> limb_shift as u8));\n            let remainder: u64 = (value << remainder_shift as u8) & mask;\n            result.limbs.set(i - 1, result.limbs.get(i - 1) + remainder);\n        }\n        result\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr1(&mut self) {\n        let value = self.limbs.segments[NumSegments - 1][N - 1];\n        self.limbs.segments[NumSegments - 1][N - 1] = value >> 1;\n\n        let mut remainder = (value & 1) << 59;\n\n        for j in 0..NumSegments {\n            for i in 0..N {\n                let value = self.limbs.segments[NumSegments - 1 - j][N - 1 - i];\n                self.limbs.segments[NumSegments - 1 - j][N - 1 - i] = (value >> 1) + remainder;\n                remainder = (value << 59) & 0x800000000000000;\n            }\n        }\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shl(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: ArrayX { segments: [[0; N]; NumSegments] } };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = (shift % 60) as u8;\n        let remainder_shift: u8 = 60 - limb_shift as u8;\n\n        // 83\n        // limb shift = 1\n        // inside shift = 19 bits to the left\n        // meaning we have 19 carry bits and 41 remainder bits\n        let mask: u64 = (1 as u64 << 60) - 1;\n        //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        let value = self.limbs.get(0);\n\n        let mut remainder = (value >> remainder_shift);\n        result.limbs.set(num_shifted_limbs, (value << (limb_shift as u8)) & mask);\n\n        // shift 84. num shifted = 1\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs.get(i);\n            let upshift = ((value << (limb_shift as u8)) + remainder) & mask;\n            result.limbs.set(i + num_shifted_limbs, upshift);\n            remainder = (value >> remainder_shift);\n            // let remainder: u64 = (self.limbs.get(i + num_shifted_limbs as u64) << remainder_shift as u8) & mask;\n            // result.limbs.set(i - 1, result.limbs.get(i - 1) + remainder);\n        }\n        result\n    }\n\n    fn increment(&mut self) {\n        let mut carry: u64 = 0;\n\n        let mut add: u64 = self.limbs.segments[0][0] + 1;\n        carry = add >> 60;\n        add = add - (carry << 60);\n        self.limbs.segments[0][0] = add;\n        for i in 1..N {\n            let mut add: u64 = self.limbs.segments[0][i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            self.limbs.segments[0][i] = add;\n        }\n        for j in 1..NumSegments {\n            for i in 0..N {\n                let mut add: u64 = self.limbs.segments[j][i] + carry;\n                carry = add >> 60;\n                add = add - (carry << 60);\n                self.limbs.segments[j][i] = add;\n            }\n        }\n    }\n\n    unconstrained  fn get_msb(val: Self) -> u32 {\n        let mut count = 0;\n        for i in 0..N * NumSegments {\n            let v = val.limbs.get((N * NumSegments) - 1 - i);\n            if (v > 0) {\n                count = 60 * ((N * NumSegments) - 1 - i) + get_msb64(v);\n                break;\n            }\n        }\n        count\n    }\n}\n"},"418":{"path":"/Users/ianbrighton/nargo/github.com/noir-lang/noir-bignumv0.3.3/src/runtime_bignum.nr","source":"use dep::std;\nuse crate::utils::u60_representation::U60Repr;\nuse crate::utils::arrayX::ArrayX;\nuse crate::utils::split_bits;\nuse crate::BigNum;\n\n/**\n * @brief runtime_bignum::BigNumTrait defines methods available to BigNum *if* the modulus is not known at compile time.\n *        e.g. RSA where the modulus is a witness value as it changes for every RSA signature\n *        tee `lib.nr` for a trait definition where the modulus is known at compile time\n **/\ntrait BigNumTrait {\n    fn new() -> Self;\n    fn one() -> Self;\n    fn from(limbs: [Field]) -> Self;\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self;\n    fn to_le_bytes<let NBytes: u32>(val: Self) -> [u8; NBytes];\n    fn get(self) -> [Field];\n    fn get_limb(self, idx: u64) -> Field;\n    fn set_limb(&mut self, idx: u32, value: Field);\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n    fn validate_in_range(self);\n    fn validate_quotient_in_range(self);\n    fn __is_zero(self) -> bool;\n    fn __eq(self, rhs: Self) -> bool;\n}\n\n/**\n * @brief BigNumInstanceTrait defines methods available to a runtime BigNumInstance.\n *        BigNumInstance wraps the modulus parameter (as well as a Barret reduction parameter),\n *        which is required for the majority of BigNum operations\n **/\ntrait BigNumInstanceTrait<BN> where BN: BigNumTrait {\n    fn modulus(self) -> BN;\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BN;\n    fn eq(self, lhs: BN, rhs: BN) -> bool;\n    fn __neg(self, val: BN) -> BN;\n    fn __add(self, lhs: BN, rhs: BN) -> BN;\n    fn __sub(self, lhs: BN, rhs: BN) -> BN;\n    fn __mul(self, lhs: BN, rhs: BN) -> BN;\n    fn __div(self, lhs: BN, rhs: BN) -> BN;\n    fn __batch_invert<let M: u32>(self, x: [BN; M]) -> [BN; M];\n    fn __udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn __invmod(self, val: BN) -> BN;\n    fn __pow(self, val: BN, exponent: BN) -> BN;\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BN, BN);\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    );\n\n    fn validate_in_field(self, val: BN);\n    fn validate_gt(self, lhs: BN, rhs: BN);\n    fn assert_is_not_equal(self, lhs: BN, rhs: BN);\n    fn neg(self, val: BN) -> BN;\n    fn add(self, lhs: BN, rhs: BN) -> BN;\n    fn sub(self, lhs: BN, rhs: BN) -> BN;\n    fn mul(self, lhs: BN, rhs: BN) -> BN;\n    fn div(self, lhs: BN, rhs: BN) -> BN;\n    fn udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn udiv(self, numerator: BN, divisor: BN) -> BN;\n    fn umod(self, numerator: BN, divisor: BN) -> BN;\n\n}\n\n/**\n * @brief BigNumParamsTrait defines a \"field\" with which to parametrise BigNum.\n * @description The \"field\" does not need to be prime, any value *should* work (TODO: test!)\n**/\ntrait BigNumParamsTrait<let N: u32> {\n    /**\n     * @brief modulus_bits = log2(modulus) rounded up\n     **/\n    fn modulus_bits() -> u32;\n\n    fn has_multiplicative_inverse() -> bool { true }\n}\n\nstruct  BigNumInstance<let N: u32, Params> {\n    \n    /**\n     * @brief modulus: all BigNum operations are evaluated modulo this value\n     **/\n    modulus: [Field; N],\n\n    /**\n     * @brief modulus but represented in a U60Repr form\n     **/\n    modulus_u60: U60Repr<N, 2>,\n    modulus_u60_x4: U60Repr<N, 4>,\n\n    // /**\n    //  * @brief double_modulus: used when performing negations and subtractions\n    //  **/\n    double_modulus: [Field; N],\n    // /**\n    //  * @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    //  **/\n    redc_param: [Field; N],\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> {\n    // some strange circular dependency problem means we need to define `new` as a member of BigNumTrait as well as a definition outside of the trait\n    // (delete this method to see. BigNumInstance methods that use BigNum::new() error out, and I can't find a way of declaring BigNum to satisfy BigNumTrait as part of the BigNumInstance definition because BigNumInstance has no contextual knowledge of the BigNum type...)\n    fn new() -> Self {\n        BigNum { limbs: [0; N] }\n    }\n    fn one() -> BigNum<N, Params> {\n        let mut result: Self = BigNum { limbs: [0; N] };\n        result.limbs[0] = 1;\n        result\n    }\n}\n\nimpl<let N: u32, Params> BigNumTrait for BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn new() -> Self {\n        BigNum::new()\n    }\n    fn one() -> Self {\n        BigNum::one()\n    }\n\n    fn from(limbs: [Field]) -> Self {\n        BigNum { limbs: limbs.as_array() }\n    }\n\n    /**\n     * @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n     * @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n     *               is precisely large enough to cover Params::modulus_bits()\n     * @param x: input byte array\n     **/\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> BigNum<N, Params> {\n        let num_bits = NBytes * 8;\n        let modulus_bits = Params::modulus_bits();\n        assert(num_bits >= modulus_bits);\n        assert(num_bits - modulus_bits < 8);\n        let mut result = BigNum::new();\n\n        let excess_bytes = N * 15 - NBytes;\n        let final_limb_bytes = 15 - excess_bytes;\n        let mut limb: Field = 0;\n        let mut k = 0;\n        for _j in 0..final_limb_bytes {\n            limb *= 256;\n            limb += x[k] as Field;\n            k += 1;\n        }\n        result.limbs[N - 1] = limb;\n\n        for i in 1..N {\n            let mut limb: Field = 0;\n            for _j in 0..15 {\n                limb *= 256;\n                limb += x[k] as Field;\n                k += 1;\n            }\n            result.limbs[N - i - 1] = limb;\n        }\n\n        // max_bits_in_most_significant_byte should be known at comptime. if not...messy!\n        let mut max_bits_in_most_significant_byte = 8 - (num_bits - modulus_bits);\n\n        let most_significant_byte: Field = x[0] as Field;\n\n        most_significant_byte.assert_max_bit_size(max_bits_in_most_significant_byte as u32);\n        result\n    }\n\n    fn to_le_bytes<let NBytes: u32>(val: BigNum<N, Params>) -> [u8; NBytes] {\n        let nbytes = (Params::modulus_bits() / 8) + (Params::modulus_bits() % 8 != 0) as u32;\n        assert(nbytes <= NBytes);\n\n        let mut result: [u8; NBytes] = [0; NBytes];\n        for i in 0..N - 1 {\n            let limb_bytes: [u8; 15] = val.limbs[i].to_le_bytes();\n            for j in 0..15 {\n                result[i * 15 + j] = limb_bytes[j];\n            }\n        }\n        let last_limb_bytes: [u8; 15] = val.limbs[N - 1].to_le_bytes();\n        let num_last_bytes = (NBytes - (N - 1) * 15);\n        for i in 0..num_last_bytes {\n            result[(N-1) * 15 + i] = last_limb_bytes[i];\n        }\n        result\n    }\n\n    fn get(self) -> [Field] {\n        self.limbs\n    }\n    fn get_limb(self, idx: u64) -> Field {\n        self.limbs[idx]\n    }\n    fn set_limb(&mut self, idx: u32, value: Field) {\n        self.limbs[idx] = value;\n    }\n\n    /**\n     * @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n     * @description should be cheaper than using an IF statement (TODO: check!)\n     **/\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let mut result: Self = lhs;\n        for i in 0..N {\n            result.limbs[i] = (lhs.limbs[i] - rhs.limbs[i]) * predicate as Field + rhs.limbs[i];\n        }\n        result\n    }\n\n    /**\n     * @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n     **/\n    fn validate_in_range(self) {\n        for i in 0..(N - 1) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120);\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    /**\n     * @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n     * @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n     *              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n     *              Why is this?\n     *              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n     *                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n     *                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n     *              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n     *\n     *              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n     *              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n     **/\n    fn validate_quotient_in_range(self) {\n        for i in 0..(N) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        // Note: replace magic number 6 with definition\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120) + 6;\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    fn __is_zero(self) -> bool {\n        self.__is_zero_impl()\n    }\n\n    fn __eq(self, rhs: Self) -> bool {\n        self.__eq_impl(rhs)\n    }\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn from_array(limbs: [Field; N]) -> BigNum<N, Params> {\n        BigNum { limbs }\n    }\n\n    unconstrained fn __is_zero_impl(self) -> bool {\n        let mut result: bool = true;\n        for i in 0..N {\n            result = result & (self.limbs[i] == 0);\n        }\n        result\n    }\n\n    unconstrained fn __eq_impl(lhs: Self, rhs: Self) -> bool {\n        lhs.limbs == rhs.limbs\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstanceTrait<BigNum<N, Params>> for BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn modulus(self) -> BigNum<N, Params> {\n        BigNum { limbs: self.modulus }\n    }\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        self.__derive_from_seed_impl(seed)\n    }\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ### NOTE: these functions call unconstrained internal implementations because trait impl modifiers are not supported \n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn __neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__neg_impl(val)\n    }\n\n    fn __add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add_impl(lhs, rhs)\n    }\n\n    fn __sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__sub_impl(lhs, rhs)\n    }\n\n    fn __mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__mul_impl(lhs, rhs)\n    }\n\n    fn __div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__div_impl(lhs, rhs)\n    }\n\n    fn __batch_invert<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        self.batch_invert_impl(x)\n    }\n\n    fn __invmod(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__invmod_impl(val)\n    }\n\n    fn __pow(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__pow_impl(val, exponent)\n    }\n\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__compute_quadratic_expression_impl(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        )\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    /**\n     * @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n     * @description The expression is of the form (when evaluated as an integer relation):\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * Note: this method requires the remainder term of the expression to be ZERO\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The expensive parts of this algorithm are the following:\n     *      1. evaluating the limb products required to compute `lhs * rhs`\n     *      2. applying range constraints to validate the result is 0\n     *\n     * Range constraints are needed for the following reason:\n     * When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n     * Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n     * Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n     * To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n     * (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n     * To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n     * We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n     * TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n     * I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n     * TODO: explain why we apply a 126-bit range check, this feels like a magic number\n     * (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n     * TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n     * \n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) {\n        // use an unconstrained function to compute the value of the quotient\n        let (quotient, _, borrow_flags): (BigNum<N, Params>, BigNum<N, Params>, ArrayX<Field, N, 2>) = self.__compute_quadratic_expression_with_borrow_flags(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n        // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n        quotient.validate_quotient_in_range();\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        // (should be a compile-time check...unconstrained function?)\n\n        // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n        let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t4: [Field; N] = [0; N];\n\n        // TODO: this is super nasty as it requires a multiplication\n        let double_modulus: [Field; N] = self.double_modulus;\n        for k in 0..NUM_PRODUCTS {\n            for i in 0..N {\n                for j in 0..LHS_N {\n                    // note: if is_negative is not known at comptime this is very expensive\n                    if (lhs_flags[k][j]) {\n                        t0[k][i] -= lhs_terms[k][j].limbs[i];\n                        t0[k][i] += double_modulus[i];\n                    } else {\n                        t0[k][i] += lhs_terms[k][j].limbs[i];\n                    }\n                }\n                for j in 0..RHS_N {\n                    if (rhs_flags[k][j]) {\n                        t1[k][i] -= rhs_terms[k][j].limbs[i];\n                        t1[k][i] += double_modulus[i];\n                    } else {\n                        t1[k][i] += rhs_terms[k][j].limbs[i];\n                    }\n                }\n            }\n        }\n        for i in 0..N {\n            for j in 0..ADD_N {\n                if (linear_flags[j]) {\n                    t4[i] -= linear_terms[j].limbs[i];\n                    t4[i] += double_modulus[i];\n                } else {\n                    t4[i] += linear_terms[j].limbs[i];\n                }\n            }\n        }\n\n        // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n        // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n        // so that we can ensure that no limbs will underflow for an honest Prover\n        let mut product_limbs: ArrayX<Field, N,2> = ArrayX::new();\n        //       let fff: [Field; N] = quotient.limbs;\n        //      let mut borrow_flags: ArrayX<Field, N,2> = BigNum::get_borrow_flags3(t0, t1, t2, t3, t4, fff, self.modulus);\n\n        // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n        // TODO: this is super nasty as it requires a multiplication\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    if k == 0 {\n                        let new_term = t0[k][i] * t1[k][j] - quotient.limbs[i] * self.modulus[j];\n                        std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                        product_limbs.add_assign(i + j, new_term);\n                    } else {\n                        product_limbs.add_assign(i + j, t0[k][i] * t1[k][j]);\n                    }\n                }\n                if (NUM_PRODUCTS == 0) {\n                    product_limbs.sub_assign(i + j, quotient.limbs[i] * self.modulus[j]);\n                }\n            }\n            product_limbs.add_assign(i, t4[i]);\n        }\n\n        // each limb product represents the sum of 120-bit products.\n        // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n        // where no more than 64 limb products are summed together.\n        // TODO: check in unconstrained function that this condition is satisfied\n        // TODO: define trade-offs regarding the value of borrow_shift\n        // (the larger the value, the greater the range check that is required on product_limbs)\n        // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n        // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n\n        // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n        //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n        // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n        borrow_flags.get(0).assert_max_bit_size(1);\n        product_limbs.add_assign(0, borrow_flags.get(0) * borrow_shift);\n        for i in 1..(N + N - 2) {\n            borrow_flags.get(i).assert_max_bit_size(1);\n            product_limbs.add_assign(\n                i,\n                (borrow_flags.get(i) * borrow_shift - borrow_flags.get(i - 1) * borrow_carry)\n            );\n        }\n        product_limbs.sub_assign(N + N - 2, borrow_flags.get(N + N - 3) * borrow_carry);\n\n        // Final step: Validate `product_limbs` represents the integer value `0`\n        // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n        // i.e. we need to do the following for each limb `i`:\n        //      1. validate the limb's low-120 bits equals zero\n        //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n        //      3. add the carry into limb `i+1`\n        // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n        // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n        // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n        //  where k is the number of bits in the prime field)\n        // We then add the result into the next limb and repeat.\n        let hi_shift: Field = 0x1000000000000000000000000000000;\n        let hi_downshift: Field = 1 / hi_shift;\n        for i in 0..N + N - 2 {\n            product_limbs.mul_assign(i, hi_downshift);\n            std::as_witness(product_limbs.get(i));\n            product_limbs.get(i).assert_max_bit_size(126); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n            product_limbs.add_assign(i + 1, product_limbs.get(i));\n        }\n        // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n        assert(product_limbs.get(N + N - 2) == 0);\n    }\n\n    fn validate_in_field(self, val: BigNum<N, Params>) {\n        // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n        let mut p_minus_self: [Field; N] = [0; N];\n        let modulus: [Field; N] = self.modulus;\n        for i in 0..N {\n            p_minus_self[i] = modulus[i] - val.limbs[i];\n        }\n        let borrow_flags = self.__validate_in_field_compute_borrow_flags(val);\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        p_minus_self[0] += borrow_flags[0] as Field * two_pow_120;\n        for i in 1..N - 1 {\n            p_minus_self[i] += (borrow_flags[i] as Field * two_pow_120 - borrow_flags[i-1] as Field);\n        }\n        p_minus_self[N - 1] -= borrow_flags[N - 2] as Field;\n        let mut compare = val;\n        compare.limbs = p_minus_self;\n        compare.validate_in_range();\n    }\n\n    /**\n     * @brief Validate self != other\n     * @details If A == B, then A == B mod N.\n     *          We can efficiently evaluate A == B mod N where N = circuit modulus\n     *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n     *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n     *          (todo: compute how tiny)\n     **/\n    fn assert_is_not_equal(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        let mut l: Field = 0;\n        let mut r: Field = 0;\n        let mut modulus_mod_n: Field = 0;\n        let mut two_pow_120: Field = 0x1000000000000000000000000000000;\n        let modulus = self.modulus;\n        for i in 0..N {\n            l *= two_pow_120;\n            r *= two_pow_120;\n            modulus_mod_n *= two_pow_120;\n            l += lhs.limbs[N - i - 1];\n            r += rhs.limbs[N - i - 1] ;\n            modulus_mod_n += modulus[N - i - 1];\n        }\n\n        // lhs can be either X mod N or P + X mod N\n        // rhs can be either Y mod N or P + Y mod N\n        // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n        let mut diff = l - r;\n        let mut target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n        assert(target != 0, \"asssert_is_not_equal fail\");\n    }\n\n    fn eq(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> bool {\n        let diff = self.sub(lhs, rhs);\n        // if self == other, possible values of `diff` will be `p` or `0`\n        // (the subtract operator constrains diff to be < ceil(log(p)))\n        // TODO: can do this more efficiently via witngen in unconstrained functions?\n        let mut is_equal_modulus: bool = true;\n        let mut is_equal_zero: bool = true;\n        for i in 0..N {\n            is_equal_modulus = is_equal_modulus & (diff.limbs[i] == self.modulus[i]);\n            is_equal_zero = is_equal_zero & (diff.limbs[i] == 0);\n        }\n        is_equal_modulus | is_equal_zero\n    }\n\n    fn neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = self.__neg_with_flags(val);\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let result_limb = modulus[0] - val.limbs[0] - result.limbs[0] + (borrow_flags[0] as Field * borrow_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] - val.limbs[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + (borrow_flags[i] as Field * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val.limbs[N - 1] - result.limbs[N - 1] - borrow_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    fn add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) = self.__add_with_flags(lhs, rhs);\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut subtrahend: [Field; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let result_limb = lhs.limbs[0] + rhs.limbs[0] - subtrahend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] + rhs.limbs[i]\n                - subtrahend[i]\n                - result.limbs[i]\n                - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] + rhs.limbs[N - 1]\n            - subtrahend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    // validate that lhs - rhs does not underflow i.e. lhs > rhs\n    fn validate_gt(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags) = self.__validate_gt_remainder(lhs, rhs);\n\n        result.validate_in_range();\n\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0] - 1\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n    }\n\n    fn sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) = self.__sub_with_flags(lhs, rhs);\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let result = self.__mul(lhs, rhs);\n        self.evaluate_quadratic_expression([[lhs]], [[false]], [[rhs]], [[false]], [result], [true]);\n        result\n    }\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        assert(\n            Params::has_multiplicative_inverse(), \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\"\n        );\n        let result = self.__div(lhs, rhs);\n        self.evaluate_quadratic_expression([[result]], [[false]], [[rhs]], [[false]], [lhs], [true]);\n        result\n    }\n\n    /**\n     * @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn __udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__udiv_mod_impl(numerator, divisor)\n    }\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let (quotient, remainder) = BigNumInstance::__udiv_mod_impl(self, numerator, divisor);\n\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        self.evaluate_quadratic_expression(\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false]\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        self.validate_gt(divisor, remainder);\n        (quotient, remainder)\n    }\n\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. return param is floor(numerator / divisor)\n     **/\n    fn udiv(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).0\n    }\n\n    /**\n     * @brief udiv_mod performs integer modular reduction\n     *\n     * i.e. 1. numerator % divisor = return value\n     **/\n    fn umod(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).1\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C  O  N  S  T  R  U  C  T  O  R  S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn new(modulus: [Field; N], redc_param: [Field; N]) -> Self {\n        Self {\n            redc_param,\n            modulus,\n            modulus_u60: U60Repr::from(modulus),\n            modulus_u60_x4: U60Repr::from(modulus),\n            double_modulus: get_double_modulus(modulus)\n        }\n    }\n\n    unconstrained fn __derive_from_seed_impl<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        let mut rolling_seed = seed;\n\n        let mut to_reduce: ArrayX<Field, N, 2> = ArrayX { segments: [[0; N], [0; N]] };\n\n        let mut double_modulus_bits = Params::modulus_bits() * 2;\n        let mut double_modulus_bytes = (double_modulus_bits) / 8 + (double_modulus_bits % 8 != 0) as u32;\n\n        let mut last_limb_bytes = double_modulus_bytes % 15;\n        if (last_limb_bytes == 0) {\n            last_limb_bytes = 15;\n        }\n        let mut last_limb_bits = double_modulus_bits % 8;\n        if (last_limb_bits == 0) {\n            last_limb_bits = 8;\n        }\n\n        for i in 0..(N - 1) {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut lo: Field = 0;\n            let mut hi: Field = 0;\n            for j in 0..15 {\n                hi *= 256;\n                lo *= 256;\n\n                if (i < 2 * N - 2) {\n                    lo += hash[j + 15] as Field;\n                    hi += hash[j] as Field;\n                }\n            }\n            to_reduce.set(2 * i, lo);\n            to_reduce.set(2 * i + 1, hi);\n            rolling_seed[0] += 1;\n        }\n\n        {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut hi: Field = 0;\n            for j in 0..(last_limb_bytes - 1) {\n                hi *= 256;\n                hi += hash[j] as Field;\n            }\n            hi *= 256;\n            let last_byte = hash[last_limb_bytes - 1];\n            let mask = (1 as u64 << (last_limb_bits) as u8) - 1;\n            let last_bits = last_byte as u64 & mask;\n            hi += last_bits as Field;\n            to_reduce.set(2 * N - 2, hi);\n        }\n\n        let (_, remainder) = __barrett_reduction(\n            to_reduce,\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n        let mut result = BigNum::new();\n        result.limbs = remainder;\n        result\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    unconstrained fn __validate_in_field_compute_borrow_flags(self: Self, val: BigNum<N, Params>) -> [bool; N] {\n        let mut flags: [bool; N] = [false; N];\n        let modulus: [Field; N] = self.modulus;\n        flags[0] = modulus[0].lt(val.limbs[0]);\n        for i in 1..N - 1 {\n            flags[i] = modulus[i].lt(val.limbs[i] + flags[i - 1] as Field);\n        }\n        flags\n    }\n\n    unconstrained fn __pow_impl(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x: U60Repr<N, 2> = U60Repr::from(exponent.limbs);\n\n        let num_bits = Params::modulus_bits() + 1;\n\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n\n        for i in 0..num_bits {\n            accumulator = self.__mul(accumulator, accumulator);\n            if x.get_bit(num_bits - i - 1) {\n                accumulator = self.__mul(accumulator, val);\n            }\n        }\n        accumulator\n    }\n\n    unconstrained fn __mul_with_quotient(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut mul: ArrayX<Field, N, 2> = ArrayX::new();\n        for i in 0..N {\n            for j in 0..N {\n                mul.add_assign(i + j, lhs.limbs[i] * rhs.limbs[j]);\n            }\n        }\n        let (q, r) = __barrett_reduction(\n            mul.__normalize_limbs(N + N),\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut quotient = BigNum::from_array(q);\n        let mut remainder = BigNum::from_array(r);\n        (quotient, remainder)\n    }\n\n    unconstrained fn __mul_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let (_, b) = self.__mul_with_quotient(lhs, rhs);\n        b\n    }\n\n    unconstrained fn __add_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let y_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let mut z_u60 = x_u60 + y_u60;\n\n        if z_u60.gte(self.modulus_u60) {\n            z_u60 = z_u60 - self.modulus_u60;\n        }\n        let mut result = BigNum::from_array(U60Repr::into(z_u60));\n        result\n    }\n\n    /**\n     * @brief given an input `x`, compute `2p - x` (unconstrained)\n     *\n     * @description we subtract the input from double the modulus, because all constrained BigNum operations\n     *              only guarantee that the output is in the range [0, ceil(log2(p))].\n     *              I.E. the input may be larger than the modulus `p`.\n     *              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n     *              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n     *              because such a check is expensive and usually unneccesary.\n     */\n    unconstrained fn __neg_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result = BigNum::from_array(U60Repr::into(self.modulus_u60 - x_u60));\n        result\n    }\n\n    unconstrained fn __add_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n        let add_u60 = a_u60 + b_u60;\n\n        let overflow = add_u60.gte(self.modulus_u60);\n\n        let mut subtrahend_u60 : U60Repr<N, 2> = U60Repr { limbs: ArrayX::new() };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: ArrayX::new() };\n\n        if overflow {\n            subtrahend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for j in 0..2 {\n            for i in 0..N {\n                let mut add_term: u64 = a_u60.limbs.segments[j][i] + b_u60.limbs.segments[j][i] + carry_in;\n                carry = (add_term >= 0x1000000000000000) as u64;\n                add_term -= (carry as u64 * 0x1000000000000000);\n                result_u60.limbs.segments[j][i] = add_term;\n                carry_in = carry as u64;\n                borrow = ((subtrahend_u60.limbs.segments[j][i] + borrow_in) > result_u60.limbs.segments[j][i]) as u64;\n                let sub = (borrow << 60) + result_u60.limbs.segments[j][i]\n                    - subtrahend_u60.limbs.segments[j][i]\n                    - borrow_in;\n                result_u60.limbs.segments[j][i] = sub;\n                borrow_in = borrow;\n\n                if ((j * N + i) & 1 == 1) {\n                    let idx = (j * N + i - 1) / 2;\n                    if (carry & borrow == 1) {\n                        carry = 0;\n                        borrow = 0;\n                    }\n                    carry_flags[idx] = carry as bool;\n                    borrow_flags[idx] = borrow as bool;\n                }\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n\n        (result, carry_flags, borrow_flags, overflow)\n    }\n\n    unconstrained fn __validate_gt_remainder(\n        _: Self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N]) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let mut b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60);\n        b_u60 += U60Repr::one();\n        assert(underflow == false, \"BigNum::validate_gt check fails\");\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: ArrayX::new() };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: ArrayX::new() };\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for j in 0..2 {\n            for i in 0..N {\n                let mut add_term: u64 = a_u60.limbs.segments[j][i] + addend_u60.limbs.segments[j][i] + carry_in;\n                carry = (add_term >= 0x1000000000000000) as u64;\n                add_term -= (carry as u64 * 0x1000000000000000);\n                result_u60.limbs.segments[j][i] = add_term;\n                carry_in = carry as u64;\n                borrow = ((b_u60.limbs.segments[j][i] + borrow_in) > result_u60.limbs.segments[j][i]) as u64;\n                let sub = (borrow << 60) + result_u60.limbs.segments[j][i]\n                    - b_u60.limbs.segments[j][i]\n                    - borrow_in;\n                result_u60.limbs.segments[j][i] = sub;\n                borrow_in = borrow;\n\n                if ((j * N + i) & 1 == 1) {\n                    let idx = (j * N + i - 1) / 2;\n                    if (carry & borrow == 1) {\n                        carry = 0;\n                        borrow = 0;\n                    }\n                    carry_flags[idx] = carry as bool;\n                    borrow_flags[idx] = borrow as bool;\n                }\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags)\n    }\n\n    unconstrained fn __sub_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60 + U60Repr::one());\n\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: ArrayX::new() };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: ArrayX::new() };\n\n        if underflow {\n            addend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for j in 0..2 {\n            for i in 0..N {\n                let mut add_term: u64 = a_u60.limbs.segments[j][i] + addend_u60.limbs.segments[j][i] + carry_in;\n                carry = (add_term >= 0x1000000000000000) as u64;\n                add_term -= (carry as u64 * 0x1000000000000000);\n                result_u60.limbs.segments[j][i] = add_term;\n                carry_in = carry as u64;\n                borrow = ((b_u60.limbs.segments[j][i] + borrow_in) > result_u60.limbs.segments[j][i]) as u64;\n                let sub = (borrow << 60) + result_u60.limbs.segments[j][i]\n                    - b_u60.limbs.segments[j][i]\n                    - borrow_in;\n                result_u60.limbs.segments[j][i] = sub;\n                borrow_in = borrow;\n\n                if ((j * N + i) & 1 == 1) {\n                    let idx = (j * N + i - 1) / 2;\n                    if (carry & borrow == 1) {\n                        carry = 0;\n                        borrow = 0;\n                    }\n                    carry_flags[idx] = carry as bool;\n                    borrow_flags[idx] = borrow as bool;\n                }\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags, underflow)\n    }\n\n    unconstrained fn __neg_with_flags(self, val: BigNum<N, Params>) -> (BigNum<N, Params>, [bool; N]) {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: ArrayX::new() };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        let mut borrow_flags: [bool; N] = [false; N];\n        for j in 0..2 {\n            for i in 0..N {\n                borrow = ((x_u60.limbs.segments[j][i] + borrow_in) > self.modulus_u60.limbs.segments[j][i]) as u64;\n                let sub = (borrow << 60) + self.modulus_u60.limbs.segments[j][i]\n                    - x_u60.limbs.segments[j][i]\n                    - borrow_in;\n                result_u60.limbs.segments[j][i] = sub;\n                borrow_in = borrow;\n                if ((j * N + i) & 1 == 1) {\n                    let idx = (j * N + i - 1) / 2;\n                    borrow_flags[idx] = borrow as bool;\n                }\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, borrow_flags)\n    }\n\n    /**\n     * @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n     * @description see `__neg` for why we use 2p instead of p\n     **/\n    unconstrained fn __sub_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add(lhs, self.__neg(rhs))\n    }\n\n    unconstrained fn __invmod_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let one: BigNum<N, Params> = BigNum::one();\n        let one_u60: U60Repr<N, 2> = U60Repr::from(one.limbs);\n        let exponent = self.modulus_u60.sub(one_u60.add(one_u60));\n        let mut result = BigNum::from_array(U60Repr::into(exponent));\n        self.__pow(val, result)\n    }\n\n    unconstrained fn batch_invert_impl<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>; M] = [BigNum::new(); M];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn batch_invert_slice_impl(self, x: [BigNum<N, Params>]) -> [BigNum<N, Params>] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>] = [BigNum::new()];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n            result = result.push_back(BigNum::new());\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn __div_impl(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        let t0 = self.__invmod(divisor);\n        self.__mul(numerator, t0)\n    }\n\n    /**\n     * @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n     **/\n    // NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n    // To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n    // We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n    // Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n    // Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\n    unconstrained fn __add_linear_expression<let M: u32>(\n        self,\n        x: [BigNum<N, Params>; M],\n        flags: [bool; M]\n    ) -> ([Field; N]) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut sum: [Field; N] = [0; N];\n        // TODO: ugly! Will fail if input array is empty\n        let modulus2: [Field;N] = self.double_modulus;\n        for i in 0..M {\n            if (flags[i]) {\n                for j in 0..N {\n                    sum[j] = sum[j] + modulus2[j] - x[i].limbs[j];\n                    assert(x[i].limbs[j].lt(modulus2[j]));\n                }\n            } else {\n                for j in 0..N {\n                    sum[j] = sum[j] + x[i].limbs[j];\n                }\n            }\n        }\n        // problem if we normalize when used in computing quotient\n        sum\n        //   let result_p: ArrayX<Field, N, 1> = BigNum::__normalize_limbs(ArrayX::from_array(lhs_sum_p), N);\n        //  let result_n: ArrayX<Field, N, 1> = BigNum::__normalize_limbs(ArrayX::from_array(lhs_sum_n), N);\n        //  (result_p.segments[0], result_n.segments[0])\n    }\n\n    /**\n     * @brief computes the limb products of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_product<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> ArrayX<Field, N, 2> {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut lhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut rhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut add: [Field; N] = [0; N];\n\n        for i in 0..NUM_PRODUCTS {\n            lhs[i] = self.__add_linear_expression(lhs_terms[i], lhs_flags[i]);\n            rhs[i] = self.__add_linear_expression(rhs_terms[i], rhs_flags[i]);\n        }\n\n        let add: [Field; N] = self.__add_linear_expression(linear_terms, linear_flags);\n\n        let mut mulout: ArrayX<Field, N,2> = ArrayX::new();\n\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    mulout.add_assign(i + j, (lhs[k][i] * rhs[k][j]));\n                }\n            }\n            mulout.add_assign(i, add[i]);\n        }\n        mulout\n    }\n\n    /**\n     * @brief computes the quotient/remainder of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_impl<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mulout = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let relation_result: ArrayX<Field, N, 2> = mulout.__normalize_limbs(N + N);\n\n        // TODO: ugly! Will fail if input slice is empty\n        let k  = Params::modulus_bits();\n\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            k,\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r)\n    }\n\n    /**\n     * @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n     * @description The expression is of the form:\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n     * For example, when computing the product a * b - q * p = 0, it is possible that:\n     *      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n     *      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n     * In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n     * In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n     *\n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    unconstrained fn __compute_quadratic_expression_with_borrow_flags<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>, ArrayX<Field, N, 2>) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n\n        let mut mulout_p = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let mut mulout_n: ArrayX<Field, N, 2> = ArrayX::new();\n\n        let relation_result: ArrayX<Field, N, 2> = mulout_p.__normalize_limbs(N + N);\n        let modulus: [Field; N] = self.modulus;\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            Params::modulus_bits(),\n            modulus,\n            self.modulus_u60_x4\n        );\n        assert(remainder == [0; N]);\n\n        for i in 0..N {\n            for j in 0..N {\n                mulout_n.add_assign(i + j, quotient[i] * modulus[j]);\n            }\n        }\n\n        // compute borrow flags from mulout_p and mulout_n\n        let mut borrow_flags: ArrayX<Field, N, 2> = ArrayX::new();\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        let downshift: Field = 1 / two_pow_120;\n\n        // determine whether we need to borrow from more significant limbs.\n        // initial limb is \"simple\" comparison operation\n        // TODO: check how expensive `lt` operator is w.r.t. witness generation\n        borrow_flags.set(0, mulout_p.get(0).lt(mulout_n.get(0)) as Field);\n        // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n        // and there is nothing to borrow against for the final limb.\n        let mut hi_bits = (mulout_p.get(0) - mulout_n.get(0) + (borrow_flags.get(0) * borrow_shift)) * downshift;\n        for i in 1..(N + N - 2) {\n            // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n            // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n            //     * downshift;\n            mulout_p.add_assign(i, hi_bits);\n\n            // determine whether negative limb values are greater than positive limb values\n            let underflow: Field = mulout_p.get(i).lt(mulout_n.get(i) + (borrow_flags.get(i - 1) * borrow_carry)) as Field;\n            borrow_flags.set(i, underflow);\n\n            hi_bits = (mulout_p.get(i) - mulout_n.get(i) + (borrow_flags.get(i) * borrow_shift)\n                - (borrow_flags.get(i - 1) * borrow_carry)) * downshift;\n        }\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r, borrow_flags)\n    }\n\n    unconstrained fn __udiv_mod_impl(\n        _: Self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut quotient_u60: U60Repr<N, 2> = U60Repr::from([0; N]);\n        let mut remainder_u60: U60Repr<N, 2> = U60Repr::from(numerator.limbs);\n\n        let mut divisor_u60: U60Repr<N, 2> = U60Repr::from(divisor.limbs);\n        let b = divisor_u60;\n\n        let mut bit_difference = remainder_u60.get_msb() - divisor_u60.get_msb();\n\n        let mut accumulator_u60: U60Repr<N, 2> = U60Repr::one();\n        divisor_u60 = divisor_u60.shl(bit_difference);\n        accumulator_u60 = accumulator_u60.shl(bit_difference);\n\n        if (divisor_u60.gte(remainder_u60 + U60Repr::one())) {\n            divisor_u60.shr1();\n            accumulator_u60.shr1();\n        }\n        for _ in 0..(N * 120) {\n            if (remainder_u60.gte(b) == false) {\n                break;\n            }\n\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (remainder_u60.gte(divisor_u60)) {\n                remainder_u60 -= divisor_u60;\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient_u60 = quotient_u60 + accumulator_u60;\n            }\n            divisor_u60.shr1(); // >>= 1;\n            accumulator_u60.shr1(); //  >>= 1;\n        }\n\n        (\n            BigNum::from_array(U60Repr::into(quotient_u60)), BigNum::from_array(U60Repr::into(remainder_u60))\n        )\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [Field; N]) -> [Field; N] {\n    let TWO_POW_120: Field = 0x1000000000000000000000000000000;\n    let m: U60Repr<N, 2> = U60Repr::from(modulus);\n    let mut result: [Field; N] = U60Repr::into(m + m);\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n\nunconstrained fn __barrett_reduction<let N: u32>(\n    x: ArrayX<Field, N, 2>,\n    redc_param: [Field; N],\n    k: u32,\n    modulus: [Field; N],\n    modulus_u60: U60Repr<N, 4>\n) -> ([Field; N], [Field; N]) {\n    let mut mulout: ArrayX<Field, N, 3>  = ArrayX { segments: [[0; N]; 3] };\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout.add_assign(i + j, x.get(i) * redc_param[j]);\n        }\n    }\n    mulout = mulout.__normalize_limbs(3 * N - 1);\n    let mulout_u60: U60Repr<N, 6> = U60Repr::new(mulout);\n    let mut quotient_u60 = mulout_u60.shr((k + k));\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient: ArrayX<Field, N, 2> = quotient_u60.into_arrayX();\n\n    // quotient_mul_modulus can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus: ArrayX<Field, N, 2>  = ArrayX { segments: [[0; N]; 2] };\n    let mut quotient_mul_modulus_normalized: ArrayX<Field, N, 2>  = ArrayX { segments: [[0; N]; 2] };\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus.add_assign(i + j, partial_quotient.get(i) * modulus[j]);\n        }\n    }\n\n    for i in 0..(N + N) {\n        let (lo, hi) = split_bits::split_120_bits(quotient_mul_modulus.get(i));\n        quotient_mul_modulus_normalized.set(i, lo);\n        // TODO: what is faster, leaving this if statement in or out?\n        // (array is size-1 too large so we can tolerate adding 0 into max element)\n        if (i + 1 < N + N) {\n            quotient_mul_modulus.add_assign(i + 1, hi);\n        }\n    }\n    let quotient_mul_modulus_u60: U60Repr<N, 4> = U60Repr::new(quotient_mul_modulus_normalized);\n\n    let x_u60 : U60Repr<N, 4> = U60Repr::new(x);\n    let mut remainder_u60 = x_u60 - quotient_mul_modulus_u60;\n\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    } else {}\n\n    let q: [Field; N] = U60Repr::into(quotient_u60);\n    let r: [Field; N] = U60Repr::into(remainder_u60);\n\n    (q, r)\n}\n"},"55":{"path":"std/ops/arith.nr","source":"// docs:start:add-trait\npub trait Add {\n    fn add(self, other: Self) -> Self;\n}\n// docs:end:add-trait\n\nimpl Add for Field {\n    fn add(self, other: Field) -> Field {\n        self + other\n    }\n}\n\nimpl Add for u64 {\n    fn add(self, other: u64) -> u64 {\n        self + other\n    }\n}\nimpl Add for u32 {\n    fn add(self, other: u32) -> u32 {\n        self + other\n    }\n}\nimpl Add for u16 {\n    fn add(self, other: u16) -> u16 {\n        self + other\n    }\n}\nimpl Add for u8 {\n    fn add(self, other: u8) -> u8 {\n        self + other\n    }\n}\nimpl Add for u1 {\n    fn add(self, other: u1) -> u1 {\n        self + other\n    }\n}\n\nimpl Add for i8 {\n    fn add(self, other: i8) -> i8 {\n        self + other\n    }\n}\nimpl Add for i16 {\n    fn add(self, other: i16) -> i16 {\n        self + other\n    }\n}\nimpl Add for i32 {\n    fn add(self, other: i32) -> i32 {\n        self + other\n    }\n}\nimpl Add for i64 {\n    fn add(self, other: i64) -> i64 {\n        self + other\n    }\n}\n\n// docs:start:sub-trait\npub trait Sub {\n    fn sub(self, other: Self) -> Self;\n}\n// docs:end:sub-trait\n\nimpl Sub for Field {\n    fn sub(self, other: Field) -> Field {\n        self - other\n    }\n}\n\nimpl Sub for u64 {\n    fn sub(self, other: u64) -> u64 {\n        self - other\n    }\n}\nimpl Sub for u32 {\n    fn sub(self, other: u32) -> u32 {\n        self - other\n    }\n}\nimpl Sub for u16 {\n    fn sub(self, other: u16) -> u16 {\n        self - other\n    }\n}\nimpl Sub for u8 {\n    fn sub(self, other: u8) -> u8 {\n        self - other\n    }\n}\nimpl Sub for u1 {\n    fn sub(self, other: u1) -> u1 {\n        self - other\n    }\n}\n\nimpl Sub for i8 {\n    fn sub(self, other: i8) -> i8 {\n        self - other\n    }\n}\nimpl Sub for i16 {\n    fn sub(self, other: i16) -> i16 {\n        self - other\n    }\n}\nimpl Sub for i32 {\n    fn sub(self, other: i32) -> i32 {\n        self - other\n    }\n}\nimpl Sub for i64 {\n    fn sub(self, other: i64) -> i64 {\n        self - other\n    }\n}\n\n// docs:start:mul-trait\npub trait Mul {\n    fn mul(self, other: Self) -> Self;\n}\n// docs:end:mul-trait\n\nimpl Mul for Field {\n    fn mul(self, other: Field) -> Field {\n        self * other\n    }\n}\n\nimpl Mul for u64 {\n    fn mul(self, other: u64) -> u64 {\n        self * other\n    }\n}\nimpl Mul for u32 {\n    fn mul(self, other: u32) -> u32 {\n        self * other\n    }\n}\nimpl Mul for u16 {\n    fn mul(self, other: u16) -> u16 {\n        self * other\n    }\n}\nimpl Mul for u8 {\n    fn mul(self, other: u8) -> u8 {\n        self * other\n    }\n}\nimpl Mul for u1 {\n    fn mul(self, other: u1) -> u1 {\n        self * other\n    }\n}\n\nimpl Mul for i8 {\n    fn mul(self, other: i8) -> i8 {\n        self * other\n    }\n}\nimpl Mul for i16 {\n    fn mul(self, other: i16) -> i16 {\n        self * other\n    }\n}\nimpl Mul for i32 {\n    fn mul(self, other: i32) -> i32 {\n        self * other\n    }\n}\nimpl Mul for i64 {\n    fn mul(self, other: i64) -> i64 {\n        self * other\n    }\n}\n\n// docs:start:div-trait\npub trait Div {\n    fn div(self, other: Self) -> Self;\n}\n// docs:end:div-trait\n\nimpl Div for Field {\n    fn div(self, other: Field) -> Field {\n        self / other\n    }\n}\n\nimpl Div for u64 {\n    fn div(self, other: u64) -> u64 {\n        self / other\n    }\n}\nimpl Div for u32 {\n    fn div(self, other: u32) -> u32 {\n        self / other\n    }\n}\nimpl Div for u16 {\n    fn div(self, other: u16) -> u16 {\n        self / other\n    }\n}\nimpl Div for u8 {\n    fn div(self, other: u8) -> u8 {\n        self / other\n    }\n}\nimpl Div for u1 {\n    fn div(self, other: u1) -> u1 {\n        self / other\n    }\n}\n\nimpl Div for i8 {\n    fn div(self, other: i8) -> i8 {\n        self / other\n    }\n}\nimpl Div for i16 {\n    fn div(self, other: i16) -> i16 {\n        self / other\n    }\n}\nimpl Div for i32 {\n    fn div(self, other: i32) -> i32 {\n        self / other\n    }\n}\nimpl Div for i64 {\n    fn div(self, other: i64) -> i64 {\n        self / other\n    }\n}\n\n// docs:start:rem-trait\npub trait Rem {\n    fn rem(self, other: Self) -> Self;\n}\n// docs:end:rem-trait\n\nimpl Rem for u64 {\n    fn rem(self, other: u64) -> u64 {\n        self % other\n    }\n}\nimpl Rem for u32 {\n    fn rem(self, other: u32) -> u32 {\n        self % other\n    }\n}\nimpl Rem for u16 {\n    fn rem(self, other: u16) -> u16 {\n        self % other\n    }\n}\nimpl Rem for u8 {\n    fn rem(self, other: u8) -> u8 {\n        self % other\n    }\n}\nimpl Rem for u1 {\n    fn rem(self, other: u1) -> u1 {\n        self % other\n    }\n}\n\nimpl Rem for i8 {\n    fn rem(self, other: i8) -> i8 {\n        self % other\n    }\n}\nimpl Rem for i16 {\n    fn rem(self, other: i16) -> i16 {\n        self % other\n    }\n}\nimpl Rem for i32 {\n    fn rem(self, other: i32) -> i32 {\n        self % other\n    }\n}\nimpl Rem for i64 {\n    fn rem(self, other: i64) -> i64 {\n        self % other\n    }\n}\n\n// docs:start:neg-trait\npub trait Neg {\n    fn neg(self) -> Self;\n}\n// docs:end:neg-trait\n\n// docs:start:neg-trait-impls\nimpl Neg for Field {\n    fn neg(self) -> Field {\n        -self\n    }\n}\n\nimpl Neg for i8 {\n    fn neg(self) -> i8 {\n        -self\n    }\n}\nimpl Neg for i16 {\n    fn neg(self) -> i16 {\n        -self\n    }\n}\nimpl Neg for i32 {\n    fn neg(self) -> i32 {\n        -self\n    }\n}\nimpl Neg for i64 {\n    fn neg(self) -> i64 {\n        -self\n    }\n}\n// docs:end:neg-trait-impls\n\n"},"58":{"path":"std/option.nr","source":"use crate::hash::{Hash, Hasher};\nuse crate::cmp::{Ordering, Ord, Eq};\nuse crate::default::Default;\n\npub struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::mem::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some { self._value } else { default }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// Asserts `self.is_some()` with a provided custom message and returns the contained `Some` value\n    fn expect<let N: u32, MessageTypes>(self, message: fmtstr<N, MessageTypes>) -> T {\n        assert(self.is_some(), message);\n        self._value\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some { self } else { other }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some { self } else { default() }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some { Option::none() } else { self }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n\nimpl<T> Default for Option<T> {\n    fn default() -> Self {\n        Option::none()\n    }\n}\n\nimpl<T> Eq for Option<T> where T: Eq {\n    fn eq(self, other: Self) -> bool {\n        if self._is_some == other._is_some {\n            if self._is_some {\n                self._value == other._value\n            } else {\n                true\n            }\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T> Hash for Option<T> where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self._is_some.hash(state);\n        if self._is_some {\n            self._value.hash(state);\n        }\n    }\n}\n\n// For this impl we're declaring Option::none < Option::some\nimpl<T> Ord for Option<T> where T: Ord {\n    fn cmp(self, other: Self) -> Ordering {\n        if self._is_some {\n            if other._is_some {\n                self._value.cmp(other._value)\n            } else {\n                Ordering::greater()\n            }\n        } else if other._is_some {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n"},"59":{"path":"std/panic.nr","source":"pub fn panic<T, U, let N: u32>(message: fmtstr<N, T>) -> U {\n    assert(false, message);\n    crate::mem::zeroed()\n}\n"},"6":{"path":"std/cmp.nr","source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(s, quote { Eq }, signature, for_each_field, quote { & }, body)\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N] where T: Eq {\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T] where T: Eq {\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B) where A: Eq, B: Eq {\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C) where A: Eq, B: Eq, C: Eq {\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D) where A: Eq, B: Eq, C: Eq, D: Eq {\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E) where A: Eq, B: Eq, C: Eq, D: Eq, E: Eq {\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B) where A: Ord, B: Ord {\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C) where A: Ord, B: Ord, C: Ord {\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D) where A: Ord, B: Ord, C: Ord, D: Ord {\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E) where A: Ord, B: Ord, C: Ord, D: Ord, E: Ord {\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v1 } else { v2 }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v2 } else { v1 }\n}\n\nmod cmp_tests {\n    use crate::cmp::{min, max};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n"},"68":{"path":"std/uint128.nr","source":"use crate::ops::{Add, Sub, Mul, Div, Rem, Not, BitOr, BitAnd, BitXor, Shl, Shr};\nuse crate::cmp::{Eq, Ord, Ordering};\n\nglobal pow64 : Field = 18446744073709551616; //2^64;\nglobal pow63 : Field = 9223372036854775808; // 2^63;\npub struct U128 {\n    lo: Field,\n    hi: Field,\n}\n\nimpl U128 {\n\n    pub fn from_u64s_le(lo: u64, hi: u64) -> U128 {\n        // in order to handle multiplication, we need to represent the product of two u64 without overflow\n        assert(crate::field::modulus_num_bits() as u32 > 128);\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    pub fn from_u64s_be(hi: u64, lo: u64) -> U128 {\n        U128::from_u64s_le(lo, hi)\n    }\n\n    pub fn zero() -> U128 {\n        U128 { lo: 0, hi: 0 }\n    }\n\n    pub fn one() -> U128 {\n        U128 { lo: 1, hi: 0 }\n    }\n    pub fn from_le_bytes(bytes: [u8; 16]) -> U128 {\n        let mut lo = 0;\n        let mut base = 1;\n        for i in 0..8 {\n            lo += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        let mut hi = 0;\n        base = 1;\n        for i in 8..16 {\n            hi += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        U128 { lo, hi }\n    }\n\n    pub fn to_be_bytes(self: Self) -> [u8; 16] {\n        let lo: [u8; 8] = self.lo.to_be_bytes();\n        let hi: [u8; 8] = self.hi.to_be_bytes();\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = hi[i];\n            bytes[i+8] = lo[i];\n        }\n        bytes\n    }\n\n    pub fn to_le_bytes(self: Self) -> [u8; 16] {\n        let lo: [u8; 8] = self.lo.to_le_bytes();\n        let hi: [u8; 8] = self.hi.to_le_bytes();\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = lo[i];\n            bytes[i+8] = hi[i];\n        }\n        bytes\n    }\n\n    pub fn from_hex<let N: u32>(hex: str<N>) -> U128 {\n        let N = N as u32;\n        let bytes = hex.as_bytes();\n        // string must starts with \"0x\"\n        assert((bytes[0] == 48) & (bytes[1] == 120), \"Invalid hexadecimal string\");\n        assert(N < 35, \"Input does not fit into a U128\");\n\n        let mut lo = 0;\n        let mut hi = 0;\n        let mut base = 1;\n        if N <= 18 {\n            for i in 0..N - 2 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n        } else {\n            for i in 0..16 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n            base = 1;\n            for i in 17..N - 1 {\n                hi += U128::decode_ascii(bytes[N-i])*base;\n                base = base*16;\n            }\n        }\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    unconstrained fn uconstrained_check_is_upper_ascii(ascii: u8) -> bool {\n        ((ascii >= 65) & (ascii <= 90)) // Between 'A' and 'Z'\n    }\n\n    fn decode_ascii(ascii: u8) -> Field {\n        (if ascii < 58 {\n            ascii - 48\n        } else {\n            let ascii = ascii + 32 * (unsafe {\n                        U128::uconstrained_check_is_upper_ascii(ascii) as u8\n                    });\n            assert(ascii >= 97); // enforce >= 'a'\n            assert(ascii <= 102); // enforce <= 'f'\n            ascii - 87\n        }) as Field\n    }\n\n    // TODO: Replace with a faster version. \n    // A circuit that uses this function can be slow to compute\n    // (we're doing up to 127 calls to compute the quotient)\n    unconstrained fn unconstrained_div(self: Self, b: U128) -> (U128, U128) {\n        if b == U128::zero() {\n            // Return 0,0 to avoid eternal loop\n            (U128::zero(), U128::zero())\n        } else if self < b {\n            (U128::zero(), self)\n        } else if self == b {\n            (U128::one(), U128::zero())\n        } else {\n            let (q,r) = if b.hi as u64 >= pow63 as u64 {\n                // The result of multiplication by 2 would overflow\n                (U128::zero(), self)\n            } else {\n                self.unconstrained_div(b * U128::from_u64s_le(2, 0))\n            };\n            let q_mul_2 = q * U128::from_u64s_le(2, 0);\n            if r < b {\n                (q_mul_2, r)\n            } else {\n                (q_mul_2 + U128::one(), r - b)\n            }\n        }\n    }\n\n    pub fn from_integer<T>(i: T) -> U128 {\n        let f = crate::as_field(i);\n        // Reject values which would overflow a u128\n        f.assert_max_bit_size(128);\n        let lo = f as u64 as Field;\n        let hi = (f - lo) / pow64;\n        U128 { lo, hi }\n    }\n\n    pub fn to_integer<T>(self) -> T {\n        crate::from_field(self.lo + self.hi * pow64)\n    }\n\n    fn wrapping_mul(self: Self, b: U128) -> U128 {\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = self.lo * b.hi + self.hi * b.lo + carry;\n        let hi = high as u64 as Field;\n        U128 { lo, hi }\n    }\n}\n\nimpl Add for U128 {\n    fn add(self: Self, b: U128) -> U128 {\n        let low = self.lo + b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = self.hi + b.hi + carry;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to add with overflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Sub for U128 {\n    fn sub(self: Self, b: U128) -> U128 {\n        let low = pow64 + self.lo - b.lo;\n        let lo = low as u64 as Field;\n        let borrow = (low == lo) as Field;\n        let high = self.hi - b.hi - borrow;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to subtract with underflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Mul for U128 {\n    fn mul(self: Self, b: U128) -> U128 {\n        assert(self.hi * b.hi == 0, \"attempt to multiply with overflow\");\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = if crate::field::modulus_num_bits() as u32 > 196 {\n            (self.lo + self.hi) * (b.lo + b.hi) - low + carry\n        } else {\n            self.lo * b.hi + self.hi * b.lo + carry\n        };\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to multiply with overflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Div for U128 {\n    fn div(self: Self, b: U128) -> U128 {\n        unsafe {\n            let (q,r) = self.unconstrained_div(b);\n            let a = b * q + r;\n            assert_eq(self, a);\n            assert(r < b);\n            q\n        }\n    }\n}\n\nimpl Rem for U128 {\n    fn rem(self: Self, b: U128) -> U128 {\n        unsafe {\n            let (q,r) = self.unconstrained_div(b);\n            let a = b * q + r;\n            assert_eq(self, a);\n            assert(r < b);\n\n            r\n        }\n    }\n}\n\nimpl Eq for U128 {\n    fn eq(self: Self, b: U128) -> bool {\n        (self.lo == b.lo) & (self.hi == b.hi)\n    }\n}\n\nimpl Ord for U128 {\n    fn cmp(self, other: Self) -> Ordering {\n        let hi_ordering = (self.hi as u64).cmp((other.hi as u64));\n        let lo_ordering = (self.lo as u64).cmp((other.lo as u64));\n\n        if hi_ordering == Ordering::equal() {\n            lo_ordering\n        } else {\n            hi_ordering\n        }\n    }\n}\n\nimpl Not for U128 {\n    fn not(self) -> U128 {\n        U128 { lo: (!(self.lo as u64)) as Field, hi: (!(self.hi as u64)) as Field }\n    }\n}\n\nimpl BitOr for U128 {\n    fn bitor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) | (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) | (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitAnd for U128 {\n    fn bitand(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) & (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) & (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitXor for U128 {\n    fn bitxor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) ^ (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) ^ (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl Shl for U128 {\n    fn shl(self, other: u8) -> U128 {\n        assert(other < 128, \"attempt to shift left with overflow\");\n        let exp_bits: [u1; 7] = (other as Field).to_be_bits();\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            let bit = exp_bits[7 - i] as Field;\n            y = bit * (r * y) + (1 - bit) * y;\n            r *= r;\n        }\n        self.wrapping_mul(U128::from_integer(y))\n    }\n}\n\nimpl Shr for U128 {\n    fn shr(self, other: u8) -> U128 {\n        assert(other < 128, \"attempt to shift right with overflow\");\n        let exp_bits: [u1; 7] = (other as Field).to_be_bits();\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            let bit = exp_bits[7 - i] as Field;\n            y = bit * (r * y) + (1 - bit) * y;\n            r *= r;\n        }\n        self / U128::from_integer(y)\n    }\n}\n\nmod tests {\n    use crate::uint128::{U128, pow64, pow63};\n\n    #[test]\n    fn test_not(lo: u64, hi: u64) {\n        let num = U128::from_u64s_le(lo, hi);\n        let not_num = num.not();\n\n        assert_eq(not_num.hi, (hi.not() as Field));\n        assert_eq(not_num.lo, (lo.not() as Field));\n\n        let not_not_num = not_num.not();\n        assert_eq(num, not_not_num);\n    }\n    #[test]\n    fn test_construction() {\n        // Check little-endian u64 is inversed with big-endian u64 construction\n        let a = U128::from_u64s_le(2, 1);\n        let b = U128::from_u64s_be(1, 2);\n        assert_eq(a, b);\n        // Check byte construction is equivalent\n        let c = U128::from_le_bytes([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n        let d = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        assert_eq(c, d);\n    }\n    #[test]\n    fn test_byte_decomposition() {\n        let a = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        // Get big-endian and little-endian byte decompostions\n        let le_bytes_a= a.to_le_bytes();\n        let be_bytes_a= a.to_be_bytes();\n\n        // Check equivalence\n        for i in 0..16 {\n            assert_eq(le_bytes_a[i], be_bytes_a[15 - i]);\n        }\n        // Reconstruct U128 from byte decomposition\n        let b= U128::from_le_bytes(le_bytes_a);\n        // Check that it's the same element\n        assert_eq(a, b);\n    }\n    #[test]\n    fn test_hex_constuction() {\n        let a = U128::from_u64s_le(0x1, 0x2);\n        let b = U128::from_hex(\"0x20000000000000001\");\n        assert_eq(a, b);\n\n        let c= U128::from_hex(\"0xffffffffffffffffffffffffffffffff\");\n        let d= U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff);\n        assert_eq(c, d);\n\n        let e= U128::from_hex(\"0x00000000000000000000000000000000\");\n        let f= U128::from_u64s_le(0, 0);\n        assert_eq(e, f);\n    }\n\n    // Ascii decode tests\n\n    #[test]\n    fn test_ascii_decode_correct_range() {\n        // '0'..'9' range\n        for i in 0..10 {\n            let decoded= U128::decode_ascii(48 + i);\n            assert_eq(decoded, i as Field);\n        }\n        // 'A'..'F' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(65 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n        // 'a'..'f' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(97 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_0() {\n        crate::println(U128::decode_ascii(0));\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_1() {\n        crate::println(U128::decode_ascii(47));\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_0() {\n        let _ = U128::decode_ascii(58);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_1() {\n        let _ = U128::decode_ascii(64);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_0() {\n        let _ = U128::decode_ascii(71);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_1() {\n        let _ = U128::decode_ascii(96);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_greater_than_102_fails() {\n        let _ = U128::decode_ascii(103);\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_regression() {\n        // This code will actually fail because of ascii_decode,\n        // but in the past it was possible to create a value > (1<<128)\n        let a = U128::from_hex(\"0x~fffffffffffffffffffffffffffffff\");\n        let b:Field= a.to_integer();\n        let c: [u8; 17]= b.to_le_bytes();\n        assert(c[16] != 0);\n    }\n\n    #[test]\n    fn test_unconstrained_div() {\n        // Test the potential overflow case\n        let a= U128::from_u64s_le(0x0, 0xffffffffffffffff);\n        let b= U128::from_u64s_le(0x0, 0xfffffffffffffffe);\n        let c= U128::one();\n        let d= U128::from_u64s_le(0x0, 0x1);\n        unsafe {\n            let (q,r) = a.unconstrained_div(b);\n            assert_eq(q, c);\n            assert_eq(r, d);\n        }\n\n        let a = U128::from_u64s_le(2, 0);\n        let b = U128::one();\n        // Check the case where a is a multiple of b\n        unsafe {\n            let (c, d) = a.unconstrained_div(b);\n            assert_eq((c, d), (a, U128::zero()));\n        }\n\n        // Check where b is a multiple of a\n        unsafe {\n            let (c,d) = b.unconstrained_div(a);\n            assert_eq((c, d), (U128::zero(), b));\n        }\n\n        // Dividing by zero returns 0,0\n        let a = U128::from_u64s_le(0x1, 0x0);\n        let b = U128::zero();\n        unsafe {\n            let (c, d)= a.unconstrained_div(b);\n            assert_eq((c, d), (U128::zero(), U128::zero()));\n        }\n        // Dividing 1<<127 by 1<<127 (special case)\n        let a = U128::from_u64s_le(0x0, pow63 as u64);\n        let b = U128::from_u64s_le(0x0, pow63 as u64);\n        unsafe {\n            let (c, d) = a.unconstrained_div(b);\n            assert_eq((c, d), (U128::one(), U128::zero()));\n        }\n    }\n\n    #[test]\n    fn integer_conversions() {\n        // Maximum\n        let start:Field = 0xffffffffffffffffffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Minimum\n        let start:Field = 0x0;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Low limb\n        let start:Field = 0xffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // High limb\n        let start:Field = 0xffffffffffffffff0000000000000000;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn integer_conversions_fuzz(lo: u64, hi: u64) {\n        let start: Field = (lo as Field) + pow64 * (hi as Field);\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn test_wrapping_mul() {\n        // 1*0==0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::one()));\n\n        // 0*1==0\n        assert_eq(U128::zero(), U128::one().wrapping_mul(U128::zero()));\n\n        // 1*1==1\n        assert_eq(U128::one(), U128::one().wrapping_mul(U128::one()));\n\n        // 0 * ( 1 << 64 ) ==  0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * 0 == 0\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::zero()));\n\n        // 1 * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::from_u64s_le(0, 1).wrapping_mul(U128::one()));\n\n        // ( 1 << 64 ) * 1 == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::one().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::from_u64s_le(0, 1)));\n        // -1 * -1 == 1\n        assert_eq(\n            U128::one(), U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff).wrapping_mul(U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff))\n        );\n    }\n}\n"},"7":{"path":"std/collections/bounded_vec.nr","source":"use crate::{cmp::Eq, convert::From};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n/// \n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n/// \n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n/// \n/// Example:\n/// \n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a \n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    /// \n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    /// \n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    /// \n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure. \n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    /// \n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    /// \n    /// Panics if the new length of the vector will be greater than the max length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// \n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    /// \n    /// v.push(100);\n    /// assert(v.len() == 1);\n    /// \n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    /// \n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    /// \n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    /// \n    /// Note that uninitialized elements may be zeroed out!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    /// \n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    /// \n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    /// \n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input. \n    /// The maximum length of the vector is determined based on the type signature.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    /// \n    /// Panics if the vector is empty.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// let two = v.pop();\n    /// let one = v.pop();\n    /// \n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    /// \n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.  \n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    /// \n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n        for i in 0..MaxLen {\n            if i < self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        }\n        ret\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen> where T: Eq {\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n\n        (self.len == other.len) & (self.storage == other.storage)\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2)  as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.storage()[2], 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n            assert_eq(bounded_vec.storage()[2], 3);\n        }\n\n        #[test(should_fail_with=\"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n}\n"},"71":{"path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/contracts/zimburse/src/types/uint_note.nr","source":"use dep::aztec::{\n    prelude::{NullifiableNote, PrivateContext},\n    protocol_types::{constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    note::utils::compute_note_hash_for_nullify, keys::getters::get_nsk_app, macros::notes::note\n};\n\n#[note]\npub struct UintNote {\n    // The integer stored by the note\n    value: U128,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    // Randomness of the note to hide its contents\n    randomness: Field,\n}\n\nimpl NullifiableNote for UintNote {\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify, secret],\n            GENERATOR_INDEX__NOTE_NULLIFIER\n        )\n    }\n}\n\nimpl Eq for UintNote {\n    fn eq(self, other: Self) -> bool {\n        (self.value == other.value)\n            & (self.npk_m_hash == other.npk_m_hash)\n            & (self.randomness == other.randomness)\n    }\n}"},"72":{"path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/contracts/zimburse/src/types/definition.nr","source":"use dep::aztec::protocol_types::{address::AztecAddress, traits::{Serialize, Deserialize}};\nuse dep::compressed_string::CompressedString;\n\nglobal DEFINITION_LENGTH: u32 = 4;\nglobal TITLE_LENGTH: u32 = 60;\nglobal TITLE_SERIALIZED_LENGTH: u32 = 2;\n\npub struct Definition {\n    admin: AztecAddress,\n    usdc: AztecAddress,\n    title: CompressedString<TITLE_SERIALIZED_LENGTH, TITLE_LENGTH>\n}\n\nimpl Serialize<DEFINITION_LENGTH> for Definition {\n    fn serialize(self: Self) -> [Field; DEFINITION_LENGTH] {\n        [self.admin.to_field(), self.usdc.to_field(), self.title.value[0], self.title.value[1]]\n    }\n}\n\nimpl Deserialize<DEFINITION_LENGTH> for Definition {\n    fn deserialize(fields: [Field; DEFINITION_LENGTH]) -> Self {\n        Definition {\n            admin: AztecAddress::from_field(fields[0]),\n            usdc: AztecAddress::from_field(fields[1]),\n            title: CompressedString { value: [fields[2], fields[3]] }\n        }\n    }\n}\n\nimpl Definition {\n    /**\n     * Create a new definition for a Z-Imburse escrow contract with the uncompressed string\n     *\n     * @param admin The address of the admin of the contract\n     * @param usdc The address of the USDC token\n     * @param title The title of the contract as a string of max length 60\n     * @return The new definition\n     */\n    pub fn new(admin: AztecAddress, usdc: AztecAddress, title: str<TITLE_LENGTH>) -> Self {\n        Definition { admin, usdc, title: CompressedString::from_string(title) }\n    }\n\n    /**\n     * Return the bytes of the title to display as a string\n     *\n     * @return The title as a string\n     */\n    pub fn title_as_string(self) -> [u8; TITLE_LENGTH] {\n        self.title.to_bytes()\n    }\n}\n"},"74":{"path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/contracts/zimburse/src/types/recurring_entitlement_note.nr","source":"use dep::aztec::protocol_types::{address::AztecAddress, traits::{Serialize, Deserialize}, constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator};\nuse dep::aztec::{note::utils::compute_note_hash_for_nullify, oracle::unsafe_rand::unsafe_rand};\nuse dep::compressed_string::CompressedString;\nuse dep::aztec::macros::notes::note;\nuse dep::aztec::prelude::{NoteHeader, NullifiableNote, PrivateContext};\nuse dep::aztec::keys::getters::get_nsk_app;\n\n// unique ids for each verifier type\nmod HOSTING_VERIFIER_TYPE {\n    global LINODE: u8 = 1; // supported\n    global HEROKU: u8 = 2; // todo: supported\n    global AWS: u8 = 3; // todo: supported\n    global GCP: u8 = 4; // not supported in mvp\n    global AZURE: u8 = 5; // not supported in mvp\n    global HETZNER: u8 = 6; // not supported in mvp\n    global DIGITAL_OCEAN: u8 = 7; // not supported in mvp\n}\n\n// trait OwnedNote {\n//     fn new(\n//         owner: AztecAddress,\n//         external_nullifier_hash: Field,\n//         npk_m_hash: Field,\n//         max_value: U128,\n//         verifier_type: u8,\n//     ) -> Self;\n// }\n\ntrait OwnedNote {\n    fn new(\n        owner: AztecAddress,\n        npk_m_hash: Field,\n        max_value: U128,\n    ) -> Self;\n}\n\n#[note]\npub struct RecurringEntitlementNote {\n    // the user that is allowed to use this entitlement\n    owner: AztecAddress,\n    // // the external nullifier that the admin can use to nullify the note\n    // external_nullifier_hash: Field,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    // the maximum value that can be withdrawn from the escrow using this entitlement\n    max_value: U128,\n    // // the type of email verifier that should be used for this entitlement\n    // verifier_type: u8,\n    // random entropy to make the note private\n    randomness: Field,\n}\n\nimpl NullifiableNote for RecurringEntitlementNote {\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n    // docs:end:nullifier\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify, secret],\n            GENERATOR_INDEX__NOTE_NULLIFIER\n        )\n    }\n}\n\nimpl Eq for RecurringEntitlementNote {\n    fn eq(self, other: Self) -> bool {\n        (self.owner == other.owner)\n            & (self.max_value == other.max_value)\n            & (self.npk_m_hash == other.npk_m_hash)\n            & (self.randomness == other.randomness)\n    }\n}\n\nimpl OwnedNote for RecurringEntitlementNote {\n    // fn new(\n    //     owner: AztecAddress,\n    //     external_nullifier_hash: Field,\n    //     npk_m_hash: Field,\n    //     max_value: U128,\n    //     verifier_type: u8,\n    //     randomness: Field\n    // ) -> Self {\n    //     Self {\n    //         owner,\n    //         external_nullifier_hash,\n    //         npk_m_hash,\n    //         max_value,\n    //         verifier_type,\n    //         randomness: unsafe_rand()\n    //         header: NoteHeader::empty()\n    //     }\n    // }\n    fn new(\n        owner: AztecAddress,\n        npk_m_hash: Field,\n        max_value: U128,\n    ) -> Self {\n        Self {\n            owner,\n            npk_m_hash,\n            max_value,\n            randomness: unsafe { unsafe_rand() },\n            header: NoteHeader::empty()\n        }\n    }\n}"},"77":{"path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/contracts/zimburse/src/main.nr","source":"use dep::aztec::macros::aztec;\n\nmod constants;\nmod types;\n// mod date_parser;\n\n#[aztec]\ncontract ZImburse {\n    use dep::aztec::prelude::{AztecAddress, PrivateImmutable, PrivateSet, SharedImmutable, Map};\n    use dep::aztec::encrypted_logs::encrypted_note_emission::encode_and_encrypt_note;\n    use dep::aztec::macros::{storage::storage, functions::{private, public, view, initializer}};\n    use dep::aztec::keys::getters::get_public_keys;\n    use dep::address_note::address_note::AddressNote;\n    use dep::aztec::note::note_getter_options::NoteGetterOptions;\n    use dep::zimburse_verifiers::{\n        constants::{MAX_EMAIL_BODY_LENGTH, MAX_EMAIL_HEADER_LENGTH},\n        linode::verify_linode_billing_receipt,\n        zkemail::KEY_LIMBS_2048\n    };\n    \n    use crate::types::definition::{Definition, TITLE_LENGTH};\n    use crate::types::recurring_entitlement_note::RecurringEntitlementNote;\n    // use dep::aztec::macros::{storage::storage, functions::{private, initializer}};\n    use dep::token::Token;\n\n    #[storage]\n    struct Storage<Context> {\n        definition: SharedImmutable<Definition, Context>,\n        entitlements: Map<AztecAddress, PrivateSet<RecurringEntitlementNote, Context>, Context>\n    }\n\n\n    /**\n     * Initialize the Z-Imburse contract by setting the owner and USDC token.\n     *\n     * @param usdc_token The address of the USDC token\n     */\n    #[public]\n    #[initializer]\n    fn constructor(usdc_token: AztecAddress, title: str<TITLE_LENGTH>) {\n        let definition = Definition::new(context.msg_sender(), usdc_token, title);\n        storage.definition.initialize(definition);\n    }\n\n\n    #[private]\n    fn give_entitlement(to: AztecAddress, amount: Field) {\n        let recipient = get_public_keys(to);\n        let mut entitlement: RecurringEntitlementNote = RecurringEntitlementNote::new(to, recipient.npk_m.hash(), U128::from_integer(amount));\n        storage.entitlements.at(to).insert(&mut entitlement).emit(\n            encode_and_encrypt_note(&mut context, context.msg_sender(), to)\n        );\n    }\n\n    #[private]\n    fn redeem_entitlement() {\n        // read note\n        let notes = storage.entitlements.at(context.msg_sender()).pop_notes(\n            NoteGetterOptions::new().set_limit(1)\n        );\n        assert(notes.len() == 1, \"No entitlements to redeem\");\n        let note = notes.get_unchecked(0);\n        assert(note.owner == context.msg_sender(), \"Entitlement does not belong to the sender\");\n        let amount = note.max_value;\n        // read USDC address\n        let token_address = storage.definition.read_private().usdc;\n        // transfer USDC to the user\n        // todo: fix\n        // Token::at(token_address).transfer(note.owner, amount.to_field()).call(&mut context);\n    }\n\n    #[private]\n    fn redeem_linode_entitlement(\n        body: [u8; MAX_EMAIL_BODY_LENGTH],\n        body_hash_index: u32,\n        body_length: u32,\n        header: [u8; MAX_EMAIL_HEADER_LENGTH],\n        header_length: u32,\n        pubkey: [Field; KEY_LIMBS_2048],\n        pubkey_redc: [Field; KEY_LIMBS_2048],\n        signature: [Field; KEY_LIMBS_2048],\n        from_index: u32,\n        subject_index: u32,\n        amount_index: u32,\n        amount_length: u32,\n        receipt_id_length: u32\n    ) {\n        // read note\n        let notes = storage.entitlements.at(context.msg_sender()).pop_notes(\n            NoteGetterOptions::new().set_limit(1)\n        );\n        assert(notes.len() == 1, \"No entitlements to redeem\");\n        let note = notes.get_unchecked(0);\n        assert(note.owner == context.msg_sender(), \"Entitlement does not belong to the sender\");\n        // extract value from linode billing email\n\n        // if billed amount exceeds max then use max, otherwise use billed\n        let billed_amount = U128::from_integer(verify_linode_billing_receipt(\n            body, body_hash_index, body_length, header, header_length, pubkey, pubkey_redc, signature, from_index, subject_index, amount_index, amount_length, receipt_id_length\n        ));\n\n        let amount = if note.max_value >= billed_amount {\n            billed_amount\n        } else {\n            note.max_value\n        };\n\n        assert(billed_amount.to_integer() == 2200);\n\n        // read USDC address\n        let token_address = storage.definition.read_private().usdc;\n        // transfer USDC to the user\n        // todo: fix\n        // Token::at(token_address).transfer(note.owner, amount.to_field()).call(&mut context);\n    }\n\n    /**\n     * Get the title of the Z-Imburse escrow\n     */\n    #[public]\n    #[view]\n    pub fn get_title() -> [u8; TITLE_LENGTH]{\n        storage.definition.read_public().title_as_string()\n    }\n}\n"},"79":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/address-note/src/address_note.nr","source":"use dep::aztec::{\n    protocol_types::{address::AztecAddress, constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    note::{note_header::NoteHeader, note_interface::NullifiableNote, utils::compute_note_hash_for_nullify},\n    oracle::unsafe_rand::unsafe_rand, keys::getters::get_nsk_app, context::PrivateContext,\n    macros::notes::note\n};\n\n// docs:start:address_note_def\n// docs:start:address_note_struct\n// Stores an address\n#[note]\npub struct AddressNote {\n    address: AztecAddress,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    randomness: Field,\n}\n// docs:end:address_note_struct\n\nimpl NullifiableNote for AddressNote {\n\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n}\n\nimpl AddressNote {\n    pub fn new(address: AztecAddress, npk_m_hash: Field) -> Self {\n        let randomness = unsafe_rand();\n        AddressNote { address, npk_m_hash, randomness, header: NoteHeader::empty() }\n    }\n    // docs:end:address_note_def\n}\n"},"84":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/note/lifecycle.nr","source":"use crate::context::{PrivateContext, PublicContext};\nuse crate::note::{\n    note_header::NoteHeader, note_interface::{NoteInterface, NullifiableNote},\n    utils::{compute_note_hash_for_read_request, compute_note_hash_for_nullify_internal},\n    note_emission::NoteEmission\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\n\npub fn create_note<Note, let N: u32>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note\n) -> NoteEmission<Note> where Note: NoteInterface<N> + NullifiableNote {\n    let contract_address = (*context).this_address();\n    let note_hash_counter = context.side_effect_counter;\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, note_hash_counter };\n    note.set_header(header);\n    let note_hash = note.compute_note_hash();\n\n    let serialized_note = Note::serialize_content(*note);\n    assert(\n        notify_created_note(\n        storage_slot,\n        Note::get_note_type_id(),\n        serialized_note,\n        note_hash,\n        note_hash_counter\n    )\n        == 0\n    );\n\n    context.push_note_hash(note_hash);\n\n    NoteEmission::new(*note)\n}\n\npub fn create_note_hash_from_public<Note, let N: u32>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note\n) where Note: NoteInterface<N> + NullifiableNote {\n    let contract_address = (*context).this_address();\n    // Public note hashes are transient, but have no side effect counters, so we just need note_hash_counter != 0\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, note_hash_counter: 1 };\n    note.set_header(header);\n    let note_hash = note.compute_note_hash();\n\n    context.push_note_hash(note_hash);\n}\n\n// Note: This function is currently totally unused.\npub fn destroy_note<Note, let N: u32>(\n    context: &mut PrivateContext,\n    note: Note\n) where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n\n    destroy_note_unsafe(context, note, note_hash_for_read_request)\n}\n\npub fn destroy_note_unsafe<Note, let N: u32>(\n    context: &mut PrivateContext,\n    note: Note,\n    note_hash_for_read_request: Field\n) where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash_for_nullify = compute_note_hash_for_nullify_internal(note, note_hash_for_read_request);\n    let nullifier = note.compute_nullifier(context, note_hash_for_nullify);\n\n    let note_hash_counter = note.get_header().note_hash_counter;\n    let notification_note_hash = if (note_hash_counter == 0) {\n        // Counter is zero, so we're nullifying a settled note and we don't populate the note_hash with real value.\n        0\n    } else {\n        // A non-zero note hash counter implies that we're nullifying a pending note (i.e. one that has not yet been\n        // persisted in the trees and is instead in the pending new note hashes array). In such a case we populate its\n        // hash with real value to inform the kernel which note we're nullifyng so that it can either squash both\n        // the note and the nullifier if it's an inner note hash, or check that the it matches a pending note if it's\n        // a siloed note hash.\n        note_hash_for_nullify\n    };\n\n    let nullifier_counter = context.side_effect_counter;\n    assert(notify_nullified_note(nullifier, notification_note_hash, nullifier_counter) == 0);\n\n    context.push_nullifier_for_note_hash(nullifier, notification_note_hash)\n}\n\n"},"85":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/note/utils.nr","source":"use crate::{\n    context::PrivateContext,\n    note::{note_header::NoteHeader, note_interface::{NullifiableNote, NoteInterface}}\n};\n\nuse dep::protocol_types::{\n    hash::{\n    compute_unique_note_hash, compute_siloed_note_hash as compute_siloed_note_hash,\n    compute_siloed_nullifier as compute_siloed_nullifier_from_preimage\n},\n    utils::arr_copy_slice\n};\n\npub fn compute_siloed_nullifier<Note, let N: u32>(\n    note_with_header: Note,\n    context: &mut PrivateContext\n) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let header = note_with_header.get_header();\n    let note_hash_for_nullify = compute_note_hash_for_nullify(note_with_header);\n    let inner_nullifier = note_with_header.compute_nullifier(context, note_hash_for_nullify);\n\n    compute_siloed_nullifier_from_preimage(header.contract_address, inner_nullifier)\n}\n\n// TODO(#7775): make this not impossible to understand\npub fn compute_note_hash_for_read_request<Note, let N: u32>(note: Note) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash = note.compute_note_hash();\n    let nonce = note.get_header().nonce;\n    let counter = note.get_header().note_hash_counter;\n\n    if counter != 0 {\n        note_hash\n    } else {\n        compute_unique_note_hash(nonce, note_hash)\n    }\n}\n\n// TODO(#7775): make this not impossible to understand\npub fn compute_note_hash_for_nullify_internal<Note, let N: u32>(\n    note: Note,\n    note_hash_for_read_request: Field\n) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let header = note.get_header();\n\n    if header.note_hash_counter != 0 {\n        if header.nonce == 0 {\n            // Case 1: Transient note\n            note_hash_for_read_request\n        } else {\n            // Case 2: Non-revertible note, nullified by a revertible nullifier\n            let unique_note_hash = compute_unique_note_hash(header.nonce, note_hash_for_read_request);\n            compute_siloed_note_hash(header.contract_address, unique_note_hash)\n        }\n    } else {\n        // Case 3: Note from a previous transaction\n        // note_hash_for_read_request is already the unique_note_hash in this case\n        compute_siloed_note_hash(header.contract_address, note_hash_for_read_request)\n    }\n}\n\n// TODO(#7775): nuke this commented out code - kept it around as it contains comments which might be helpful when tackling #7775\n// pub fn compute_note_hash_for_nullify<Note, let N: u32, let M: u32>(note: Note) -> Field where Note: NoteInterface<N> {\n//     let header = note.get_header();\n//     // There are 3 cases for reading a note intended for consumption:\n//     // 1. The note was inserted in this transaction, is revertible, or is not nullified by a revertible nullifier in\n//     //    the same transaction: (note_hash_counter != 0) & (nonce == 0)\n//     // 2. The note was inserted in this transaction, is non-revertible, and is nullified by a revertible nullifier in\n//     //    the same transaction: (note_hash_counter != 0) & (nonce != 0)\n//     // 3. The note was inserted in a previous transaction: (note_hash_counter == 0) & (nonce != 0)\n\n//     let note_hash = note.compute_note_hiding_point().x;\n\n//     if header.nonce == 0 {\n//         // Case 1.\n//         // If a note is transient, we just read the note_hash (kernel will hash it with nonce and silo by contract address).\n//         note_hash\n//     } else {\n//         // Case 2: If a note is non-revertible, and is nullified by a revertible nullifier, we cannot squash them in the\n//         // private reset circuit. Because if the tx reverts, we will have to keep the note hash and throw away the\n//         // nullifier.\n//         // And if the tx does not revert, both will be emitted. In which case, the nullifier must be created in the app\n//         // from the siloed note hash.\n//         // The kernel circuit will check that a nullifier with non-zero note_nonce is linked to a note hash, whose\n//         // siloed note hash matches the note hash specified in the nullifier.\n\n//         // Case 3: If a note is not from the current transaction, that means we are reading a settled note (from\n//         // tree) created in a previous TX. So we need the siloed_note_hash which has already been hashed with\n//         // nonce and then contract address. This hash will match the existing leaf in the note hash\n//         // tree, so the kernel can just perform a membership check directly on this hash/leaf.\n//         let unique_note_hash = compute_unique_note_hash(header.nonce, note_hash);\n//         compute_siloed_note_hash(header.contract_address, unique_note_hash)\n//         // IMPORTANT NOTE ON REDUNDANT SILOING BY CONTRACT ADDRESS: The note hash computed above is\n//         // \"siloed\" by contract address. When a note hash is computed solely for the purpose of\n//         // nullification, it is not strictly necessary to silo the note hash before computing\n//         // its nullifier. In other words, it is NOT NECESSARY for protocol security that a nullifier\n//         // be computed from a siloed note hash. After all, persistable note hashes and nullifiers are\n//         // siloed by the kernel circuit. That being said, the siloed note hash computed above CAN be\n//         // used for nullifier computation, and this achieves the (arguably unnecessary) property that\n//         // nullifiers are computed from a note hash's fully-computed note hash tree leaf.\n//     }\n// }\n\npub fn compute_note_hash_for_nullify<Note, let N: u32>(note: Note) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n    compute_note_hash_for_nullify_internal(note, note_hash_for_read_request)\n}\n\npub fn compute_note_hash_and_optionally_a_nullifier<T, let N: u32, let S: u32>(\n    deserialize_content: fn([Field; N]) -> T,\n    note_header: NoteHeader,\n    compute_nullifier: bool,\n    serialized_note: [Field; S]\n) -> [Field; 4] where T: NoteInterface<N> + NullifiableNote {\n    let mut note = deserialize_content(arr_copy_slice(serialized_note, [0; N], 0));\n    note.set_header(note_header);\n\n    let note_hash = note.compute_note_hash();\n    let unique_note_hash = compute_unique_note_hash(note_header.nonce, note_hash);\n    let siloed_note_hash = compute_siloed_note_hash(note_header.contract_address, unique_note_hash);\n\n    let inner_nullifier = if compute_nullifier {\n        note.compute_nullifier_without_context()\n    } else {\n        0\n    };\n    // docs:start:compute_note_hash_and_optionally_a_nullifier_returns\n    [note_hash, unique_note_hash, siloed_note_hash, inner_nullifier]\n    // docs:end:compute_note_hash_and_optionally_a_nullifier_returns\n}\n"},"87":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/note/note_getter/mod.nr","source":"use dep::protocol_types::{constants::{MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, GET_NOTES_ORACLE_RETURN_LENGTH}};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    constants::{GET_NOTE_ORACLE_RETURN_LENGTH, VIEW_NOTE_ORACLE_RETURN_LENGTH},\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder, NoteStatus, PropertySelector},\n    note_interface::{NoteInterface, NullifiableNote}, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_request\n};\nuse crate::oracle;\nuse crate::utils::comparison::compare;\n\npub use crate::note::constants::MAX_NOTES_PER_PAGE;\n\nmod test;\n\nfn extract_property_value_from_selector<let N: u32>(\n    serialized_note: [Field; N],\n    selector: PropertySelector\n) -> Field {\n    // Selectors use PropertySelectors in order to locate note properties inside the serialized note.\n    // This allows easier packing and custom (de)serialization schemas. A note property is located\n    // inside the serialized note using the index inside the array, a byte offset and a length.\n    let value: [u8; 32] = serialized_note[selector.index].to_be_bytes();\n    let offset = selector.offset;\n    let length = selector.length;\n    let mut value_field = 0 as Field;\n    let mut acc: Field = 1;\n    for i in 0..32 {\n        if i < length {\n            value_field += value[31 + offset - i] as Field * acc;\n            acc = acc * 256;\n        }\n    }\n    value_field\n}\n\nfn check_note_header<Note, let N: u32>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note: Note\n) where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let contract_address = context.this_address();\n    assert(header.contract_address.eq(contract_address), \"Mismatch note header contract address.\");\n    assert(header.storage_slot == storage_slot, \"Mismatch note header storage slot.\");\n}\n\nfn check_note_fields<let N: u32>(\n    serialized_note: [Field; N],\n    selects: BoundedVec<Option<Select>, N>\n) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        let value_field = extract_property_value_from_selector(serialized_note, select.property_selector);\n\n        assert(\n            compare(value_field, select.comparator, select.value.to_field()), \"Mismatch return note field.\"\n        );\n    }\n}\n\nfn check_notes_order<let N: u32>(\n    fields_0: [Field; N],\n    fields_1: [Field; N],\n    sorts: BoundedVec<Option<Sort>, N>\n) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let field_0 = extract_property_value_from_selector(fields_0, sort.property_selector);\n        let field_1 = extract_property_value_from_selector(fields_1, sort.property_selector);\n        let eq = field_0 == field_1;\n        let lt = field_0.lt(field_1);\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, let N: u32>(\n    context: &mut PrivateContext,\n    storage_slot: Field\n) -> (Note, Field) where Note: NoteInterface<N> + NullifiableNote {\n    let note = unsafe {\n        get_note_internal(storage_slot)\n    };\n\n    // Constraining that we got a valid note from the oracle is fairly straightforward: all we need to do is check that\n    // the metadata is correct, and that the note exists.\n    check_note_header(*context, storage_slot, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n    context.push_note_hash_read_request(note_hash_for_read_request);\n\n    (note, note_hash_for_read_request)\n}\n\npub fn get_notes<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n) -> (BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>, BoundedVec<Field, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>) where Note: NoteInterface<N> + NullifiableNote + Eq {\n    let opt_notes = unsafe {\n        get_notes_internal(storage_slot, options)\n    };\n\n    // We apply the constraints in a separate function instead of inlining them here to make it easier to test that\n    // these checks correctly reject bad notes.\n    constrain_get_notes_internal(context, storage_slot, opt_notes, options)\n}\n\nunconstrained fn apply_preprocessor<Note, PREPROCESSOR_ARGS>(\n    notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    preprocessor: fn([Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL], PREPROCESSOR_ARGS) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    preprocessor_args: PREPROCESSOR_ARGS\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] {\n    preprocessor(notes, preprocessor_args)\n}\n\nfn constrain_get_notes_internal<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    opt_notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n) -> (BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>, BoundedVec<Field, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>) where Note: NoteInterface<N> + NullifiableNote + Eq {\n    // The filter is applied first to avoid pushing note read requests for notes we're not interested in. Note that\n    // while the filter function can technically mutate the contents of the notes (as opposed to simply removing some),\n    // the private kernel will later validate that these note actually exist, so transformations would cause for that\n    // check to fail.\n    let filter_fn = options.filter;\n    let filter_args = options.filter_args;\n    let filtered_notes = filter_fn(opt_notes, filter_args);\n\n    let notes = crate::utils::collapse_array(filtered_notes);\n    let mut note_hashes: BoundedVec<Field, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> = BoundedVec::new();\n\n    // We have now collapsed the sparse array of Options into a BoundedVec. This is a more ergonomic type and also\n    // results in reduced gate counts when setting a limit value, since we guarantee that the limit is an upper bound\n    // for the runtime length, and can therefore have fewer loop iterations.\n    assert(notes.len() <= options.limit, \"Got more notes than limit.\");\n\n    let mut prev_fields = [0; N];\n    for i in 0..options.limit {\n        if i < notes.len() {\n            let note = notes.get_unchecked(i);\n            let fields = note.serialize_content();\n            check_note_header(*context, storage_slot, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_note_hash_read_request(note_hash_for_read_request);\n            note_hashes.push(note_hash_for_read_request);\n        };\n    }\n\n    (notes, note_hashes)\n}\n\nunconstrained fn get_note_internal<Note, let N: u32>(storage_slot: Field) -> Note where Note: NoteInterface<N> {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        0,\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        NoteStatus.ACTIVE,\n        placeholder_note,\n        placeholder_fields,\n        placeholder_note_length\n    )[0].expect(f\"Failed to get a note\") // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS>(\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    // This function simply performs some transformations from NoteGetterOptions into the types required by the oracle.\n\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    apply_preprocessor(opt_notes, options.preprocessor, options.preprocessor_args)\n}\n\nunconstrained pub fn view_notes<Note, let N: u32>(\n    storage_slot: Field,\n    options: NoteViewerOptions<Note, N>\n) -> BoundedVec<Note, MAX_NOTES_PER_PAGE> where Note: NoteInterface<N> {\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n\n    let notes_array = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    let mut notes = BoundedVec::new();\n    for i in 0..notes_array.len() {\n        if notes_array[i].is_some() {\n            notes.push(notes_array[i].unwrap_unchecked());\n        }\n    }\n\n    notes\n}\n\nunconstrained fn flatten_options<let N: u32>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>\n) -> (u8, [u8; N], [u8; N], [u8; N], [Field; N], [u8; N], [u8; N], [u8; N], [u8; N], [u8; N]) {\n    let mut num_selects = 0;\n    let mut select_by_indexes = [0; N];\n    let mut select_by_offsets = [0; N];\n    let mut select_by_lengths = [0; N];\n    let mut select_values = [0; N];\n    let mut select_comparators = [0; N];\n\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by_indexes[num_selects] = select.unwrap_unchecked().property_selector.index;\n            select_by_offsets[num_selects] = select.unwrap_unchecked().property_selector.offset;\n            select_by_lengths[num_selects] = select.unwrap_unchecked().property_selector.length;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            select_comparators[num_selects] = select.unwrap_unchecked().comparator;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by_indexes = [0; N];\n    let mut sort_by_offsets = [0; N];\n    let mut sort_by_lengths = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by_indexes[i] = sort.unwrap_unchecked().property_selector.index;\n            sort_by_offsets[i] = sort.unwrap_unchecked().property_selector.offset;\n            sort_by_lengths[i] = sort.unwrap_unchecked().property_selector.length;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (\n        num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order\n    )\n}\n"},"90":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/note/note_emission.nr","source":"/**\n * A note emission struct containing the information required for emitting a note.\n * The exact `emit` logic is passed in by the application code\n */\npub struct NoteEmission<Note> {\n    note: Note\n}\n\nimpl<Note> NoteEmission<Note> {\n    pub fn new(note: Note) -> Self {\n        Self { note }\n    }\n\n    pub fn emit<Env>(self, _emit: fn[Env](Self) -> ()) {\n        _emit(self);\n    }\n\n    pub fn discard(_self: Self) {}\n}\n\n/**\n * A struct wrapping note emission in `Option<T>`.\n * This is the struct provided to application codes, which can be used to emit\n * only when a note was actually inserted.\n * It is fairly common to have cases where a function conditionally inserts,\n * and this allows us to keep the same API for emission in both cases (e.g. inserting\n * a change note in a token's transfer function only when there is \"change\" left).\n */\npub struct OuterNoteEmission<Note> {\n    emission: Option<NoteEmission<Note>>,\n}\n\nimpl<Note> OuterNoteEmission<Note> {\n    pub fn new(emission: Option<NoteEmission<Note>>) -> Self {\n        Self { emission }\n    }\n\n    pub fn emit<Env>(self, _emit: fn[Env](NoteEmission<Note>) -> ()) {\n        if self.emission.is_some() {\n            _emit(self.emission.unwrap());\n        }\n    }\n\n    pub fn discard(_self: Self) {}\n}\n"},"92":{"path":"/Users/ianbrighton/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.56.0/noir-projects/aztec-nr/aztec/src/note/note_getter_options.nr","source":"use std::option::Option;\nuse dep::protocol_types::{constants::MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, traits::ToField};\nuse crate::note::note_interface::NoteInterface;\n\npub struct PropertySelector {\n    index: u8, // index of the field in the serialized note array\n    offset: u8, // offset in the byte representation of the field (selected with index above) from which to reading\n    length: u8, // number of bytes to read after the offset\n}\n\npub struct Select {\n    property_selector: PropertySelector,\n    comparator: u8,\n    value: Field,\n}\n\nimpl Select {\n    // The selected property will be the left hand side and value the right hand side of the operation, so e.g. the\n    // object created by new(property, Comparator.GT, value) represents 'property > value'.\n    pub fn new(property_selector: PropertySelector, comparator: u8, value: Field) -> Self {\n        Select { property_selector, comparator, value }\n    }\n}\n\npub struct SortOrderEnum {\n    DESC: u8,\n    ASC: u8,\n}\n\nglobal SortOrder = SortOrderEnum {\n    DESC: 1,\n    ASC: 2,\n};\n\npub struct Sort {\n    property_selector: PropertySelector,\n    order: u8,\n}\n\nimpl Sort {\n    pub fn new(property_selector: PropertySelector, order: u8) -> Self {\n        Sort { property_selector, order }\n    }\n}\n\npub struct NoteStatusEnum {\n    ACTIVE: u8,\n    ACTIVE_OR_NULLIFIED: u8,\n}\n\nglobal NoteStatus = NoteStatusEnum {\n    ACTIVE: 1,\n    ACTIVE_OR_NULLIFIED: 2,\n    // TODO 4217: add 'NULLIFIED'\n};\n\n// This is the default filter and preprocessor, which does nothing\nfn return_all_notes<Note>(\n    notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    _p: Field\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] {\n    notes\n}\n\n// docs:start:NoteGetterOptions\npub struct NoteGetterOptions<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS> {\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>,\n    limit: u32,\n    offset: u32,\n    // Preprocessor and filter functions are used to filter notes. The preprocessor is applied before the filter and\n    // unlike filter it is applied in an unconstrained context.\n    preprocessor: fn ([Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL], PREPROCESSOR_ARGS) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    preprocessor_args: PREPROCESSOR_ARGS,\n    filter: fn ([Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL], FILTER_ARGS) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    filter_args: FILTER_ARGS,\n    status: u8,\n}\n// docs:end:NoteGetterOptions\n\n// When retrieving notes using the NoteGetterOptions, the configurations are applied in a specific sequence to ensure\n// precise and controlled data retrieval.\n// The database-level configurations are applied first:\n// `selects` to specify fields, `sorts` to establish sorting criteria, `offset` to skip items, and `limit` to cap\n// the result size.\n// And finally, a custom preprocessor and filter to refine the outcome further.\nimpl<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS> NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS> {\n    // This method adds a `Select` criterion to the options.\n    // It takes a property_selector indicating which field to select,\n    // a value representing the specific value to match in that field, and\n    // a comparator (For possible values of comparators, please see the Comparator enum from `utils::comparison`)\n    pub fn select<T>(\n        &mut self,\n        property_selector: PropertySelector,\n        comparator: u8,\n        value: T\n    ) -> Self where T: ToField {\n        self.selects.push(Option::some(Select::new(property_selector, comparator, value.to_field())));\n        *self\n    }\n\n    // This method adds a `Sort` criterion to the options.\n    // It takes a field_index indicating which field to sort by and an order (SortOrder) to determine the sorting direction.\n    pub fn sort(&mut self, property_selector: PropertySelector, order: u8) -> Self {\n        self.sorts.push(Option::some(Sort::new(property_selector, order)));\n        *self\n    }\n\n    // This method lets you set a limit for the maximum number of notes to be retrieved in a single query result.\n    pub fn set_limit(&mut self, limit: u32) -> Self {\n        assert(limit <= MAX_NOTE_HASH_READ_REQUESTS_PER_CALL as u32);\n        // By requesting that the limit is a constant, we guarantee that it will be possible to loop over it, reducing\n        // gate counts when a limit has been set.\n        assert_constant(limit);\n\n        self.limit = limit;\n        *self\n    }\n\n    // This method sets the offset value, which determines where to start retrieving notes in the query results.\n    pub fn set_offset(&mut self, offset: u32) -> Self {\n        self.offset = offset;\n        *self\n    }\n\n    // This method sets the status value, which determines whether to retrieve active or nullified notes.\n    pub fn set_status(&mut self, status: u8) -> Self {\n        self.status = status;\n        *self\n    }\n}\n\nimpl<Note, let N: u32> NoteGetterOptions<Note, N, Field, Field> where Note: NoteInterface<N> {\n    // This function initializes a NoteGetterOptions that simply returns the maximum number of notes allowed in a call.\n    pub fn new() -> Self {\n        Self {\n            selects: BoundedVec::new(),\n            sorts: BoundedVec::new(),\n            limit: MAX_NOTE_HASH_READ_REQUESTS_PER_CALL as u32,\n            offset: 0,\n            preprocessor: return_all_notes,\n            preprocessor_args: 0,\n            filter: return_all_notes,\n            filter_args: 0,\n            status: NoteStatus.ACTIVE\n        }\n    }\n}\n\nimpl<Note, let N: u32, PREPROCESSOR_ARGS> NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, Field> where Note: NoteInterface<N> {\n    // This function initializes a NoteGetterOptions with a preprocessor, which takes the notes returned from\n    // the database and preprocessor_args as its parameters.\n    // `preprocessor_args` allows you to provide additional data or context to the custom preprocessor.\n    pub fn with_preprocessor(\n        preprocessor: fn([Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL], PREPROCESSOR_ARGS) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n        preprocessor_args: PREPROCESSOR_ARGS\n    ) -> Self {\n        Self {\n            selects: BoundedVec::new(),\n            sorts: BoundedVec::new(),\n            limit: MAX_NOTE_HASH_READ_REQUESTS_PER_CALL as u32,\n            offset: 0,\n            preprocessor,\n            preprocessor_args,\n            filter: return_all_notes,\n            filter_args: 0,\n            status: NoteStatus.ACTIVE\n        }\n    }\n}\n\nimpl<Note, let N: u32, FILTER_ARGS> NoteGetterOptions<Note, N, Field, FILTER_ARGS> where Note: NoteInterface<N> {\n    // This function initializes a NoteGetterOptions with a filter, which takes\n    // the notes returned from the database and filter_args as its parameters.\n    // `filter_args` allows you to provide additional data or context to the custom filter.\n    pub fn with_filter(\n        filter: fn([Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL], FILTER_ARGS) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n        filter_args: FILTER_ARGS\n    ) -> Self {\n        Self {\n            selects: BoundedVec::new(),\n            sorts: BoundedVec::new(),\n            limit: MAX_NOTE_HASH_READ_REQUESTS_PER_CALL as u32,\n            offset: 0,\n            preprocessor: return_all_notes,\n            preprocessor_args: 0,\n            filter,\n            filter_args,\n            status: NoteStatus.ACTIVE\n        }\n    }\n}\n"}}}