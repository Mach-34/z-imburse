{"noir_version":"1.0.0-beta.1+03b58fa2dfcc8acc8cf5198b1b23b55676fbdb02","hash":13072574262050983010,"abi":{"parameters":[{"name":"params","type":{"kind":"struct","path":"zimburse_verifiers::linode::constants::LinodeBillingParams","fields":[{"name":"header","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":640,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":832,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"pubkey","type":{"kind":"struct","path":"zimburse_verifiers::zkemail::dkim::RSAPubkey","fields":[{"name":"modulus","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"redc","type":{"kind":"array","length":18,"type":{"kind":"field"}}}]}},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"dkim_header_sequence","type":{"kind":"struct","path":"zimburse_verifiers::zkemail::Sequence","fields":[{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"from_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"subject_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"amount_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"date_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"receipt_id_length","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":3,"type":{"kind":"field"}},"visibility":"public"},"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"3951064283418873378":{"error_kind":"fmtstring","length":123,"item_types":[{"kind":"integer","sign":"unsigned","width":32},{"kind":"integer","sign":"unsigned","width":32}]},"4118337510742699159":{"error_kind":"string","string":"No ';' suffix found at asserted bh index"},"4524007320076231485":{"error_kind":"string","string":"Header field out of bounds of header"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"5311612262851012862":{"error_kind":"string","string":"Email subject is not Linode billing receipt"},"5466606472443271855":{"error_kind":"string","string":"Header field must not contain newlines"},"5634341720269277520":{"error_kind":"fmtstring","length":58,"item_types":[{"kind":"integer","sign":"unsigned","width":8},{"kind":"integer","sign":"unsigned","width":32}]},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"},"8069834165538890230":{"error_kind":"string","string":"Email subject not found"},"8386845565670372523":{"error_kind":"string","string":"SHA256 hash computed over body does not match body hash found in DKIM-signed header"},"9619408434855056367":{"error_kind":"string","string":"Header field name must be followed by a colon"},"10534381802472382343":{"error_kind":"string","string":"Invalid date prefix"},"11586751196748062521":{"error_kind":"string","string":"Invalid payment text sequence."},"11883698362854120768":{"error_kind":"string","string":"Header field must start with CRLF"},"11944910942351401099":{"error_kind":"string","string":"No 'bh=' prefix found at asserted bh index"},"12712340723692189130":{"error_kind":"string","string":"Header field name does not match"},"14189582366648875147":{"error_kind":"string","string":"Email sender not found."},"14304927234259905409":{"error_kind":"fmtstring","length":129,"item_types":[{"kind":"integer","sign":"unsigned","width":32},{"kind":"integer","sign":"unsigned","width":32}]},"14514982005979867414":{"error_kind":"string","string":"attempt to bit-shift with overflow"},"14734181347393705282":{"error_kind":"string","string":"Header field must end with CRLF"},"15512795827244806757":{"error_kind":"string","string":"Body hash index accessed outside of DKIM header field"},"15829874291159973514":{"error_kind":"string","string":"Invalid month retrieved"},"16614201451245602033":{"error_kind":"string","string":"Invalid CRLF sequence"},"16761564377371454734":{"error_kind":"string","string":"Array index out of bounds"},"16954218183513903507":{"error_kind":"string","string":"Attempted to read past end of BoundedVec"},"17755483265475326010":{"error_kind":"string","string":"Email not from Linode billing."},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"}}},"bytecode":"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","debug_symbols":"","file_map":{"6":{"source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use crate::cmp::{max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n","path":"std/cmp.nr"},"7":{"source":"use crate::{cmp::Eq, convert::From};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n///\n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n///\n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n///\n/// Example:\n///\n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a\n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    ///\n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    ///\n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    ///\n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure.\n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    ///\n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    ///\n    /// Panics if the new length of the vector will be greater than the max length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    ///\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    ///\n    /// v.push(100);\n    /// assert(v.len() == 1);\n    ///\n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    ///\n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    ///\n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    ///\n    /// Note that uninitialized elements may be zeroed out!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    ///\n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    ///\n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    ///\n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input.\n    /// The maximum length of the vector is determined based on the type signature.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    ///\n    /// Panics if the vector is empty.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// let two = v.pop();\n    /// let one = v.pop();\n    ///\n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    ///\n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    ///\n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n        for i in 0..MaxLen {\n            if i < self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        }\n        ret\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function will zero out any elements at or past index `len` of `array`.\n    /// This incurs an extra runtime cost of O(MaxLen). If you are sure your array is\n    /// zeroed after that index, you can use `from_parts_unchecked` to remove the extra loop.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    /// ```\n    pub fn from_parts(mut array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        let zeroed = crate::mem::zeroed();\n        for i in 0..MaxLen {\n            if i >= len {\n                array[i] = zeroed;\n            }\n        }\n        BoundedVec { storage: array, len }\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function is unsafe because it expects all elements past the `len` index\n    /// of `array` to be zeroed, but does not check for this internally. Use `from_parts`\n    /// for a safe version of this function which does zero out any indices past the\n    /// given length. Invalidating this assumption can notably cause `BoundedVec::eq`\n    /// to give incorrect results since it will check even elements past `len`.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    ///\n    /// // invalid use!\n    /// let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n    /// let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n    ///\n    /// // both vecs have length 3 so we'd expect them to be equal, but this\n    /// // fails because elements past the length are still checked in eq\n    /// assert_eq(vec1, vec2); // fails\n    /// ```\n    pub fn from_parts_unchecked(array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        BoundedVec { storage: array, len }\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen>\nwhere\n    T: Eq,\n{\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n        if self.len == other.len {\n            self.storage == other.storage\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n            assert_eq(bounded_vec.get(2), 3);\n        }\n\n        #[test(should_fail_with = \"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n\n    mod from_parts {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn from_parts() {\n            // docs:start:from-parts\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // Any elements past the given length are zeroed out, so these\n            // two BoundedVecs will be completely equal\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 2], 3);\n            assert_eq(vec1, vec2);\n            // docs:end:from-parts\n        }\n\n        #[test]\n        fn from_parts_unchecked() {\n            // docs:start:from-parts-unchecked\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // invalid use!\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n\n            // both vecs have length 3 so we'd expect them to be equal, but this\n            // fails because elements past the length are still checked in eq\n            assert(vec1 != vec2);\n            // docs:end:from-parts-unchecked\n        }\n    }\n}\n","path":"std/collections/bounded_vec.nr"},"18":{"source":"use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(mut x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_64 = (x as u64) as Field;\n\n    let high = (x - low_upper_64) / TWO_POW_64;\n    let low = low_upper_64 * TWO_POW_64 + low_lower_64;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    unsafe {\n        /*@safety: borrow is enforced to be boolean due to its type.\n            if borrow is 0, it asserts that (alo > blo && ahi >= bhi)\n            if borrow is 1, it asserts that (alo <= blo && ahi > bhi)\n        */\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        unsafe {\n            /*@safety: decomposition is properly checked below*/\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(\n            unsafe {\n                //@safety: already unconstrained\n                field_less_than(b, a)\n            },\n        );\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        unsafe {\n            //@safety: unsafe in unconstrained\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        unsafe {\n            //@safety: Take a hint of the comparison and verify it\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"19":{"source":"pub mod bn254;\nuse crate::runtime::is_unconstrained;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        assert(BIT_SIZE < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        unsafe {\n            //@safety : unconstrained context\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"21":{"source":"pub mod poseidon;\npub mod poseidon2;\npub mod keccak;\npub mod sha256;\npub mod sha512;\n\nuse crate::default::Default;\nuse crate::embedded_curve_ops::{\n    EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul, multi_scalar_mul_array_return,\n};\nuse crate::meta::derive_via;\nuse crate::uint128::U128;\n\n// Kept for backwards compatibility\npub use sha256::{digest, sha256, sha256_compression, sha256_var};\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n// docs:start:pedersen_commitment\npub fn pedersen_commitment<let N: u32>(input: [Field; N]) -> EmbeddedCurvePoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\n#[inline_always]\npub fn pedersen_commitment_with_separator<let N: u32>(\n    input: [Field; N],\n    separator: u32,\n) -> EmbeddedCurvePoint {\n    let mut points = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N];\n    for i in 0..N {\n        // we use the unsafe version because the multi_scalar_mul will constrain the scalars.\n        points[i] = from_field_unsafe(input[i]);\n    }\n    let generators = derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    multi_scalar_mul(generators, points)\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<let N: u32>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[no_predicates]\npub fn pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    let mut scalars: [EmbeddedCurveScalar; N + 1] = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N + 1];\n    let mut generators: [EmbeddedCurvePoint; N + 1] =\n        [EmbeddedCurvePoint::point_at_infinity(); N + 1];\n    let domain_generators: [EmbeddedCurvePoint; N] =\n        derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n\n    for i in 0..N {\n        scalars[i] = from_field_unsafe(input[i]);\n        generators[i] = domain_generators[i];\n    }\n    scalars[N] = EmbeddedCurveScalar { lo: N as Field, hi: 0 as Field };\n\n    let length_generator: [EmbeddedCurvePoint; 1] =\n        derive_generators(\"pedersen_hash_length\".as_bytes(), 0);\n    generators[N] = length_generator[0];\n    multi_scalar_mul_array_return(generators, scalars)[0]\n}\n\n#[field(bn254)]\n#[inline_always]\npub fn derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32,\n) -> [EmbeddedCurvePoint; N] {\n    crate::assert_constant(domain_separator_bytes);\n    // TODO(https://github.com/noir-lang/noir/issues/5672): Add back assert_constant on starting_index\n    __derive_generators(domain_separator_bytes, starting_index)\n}\n\n#[builtin(derive_pedersen_generators)]\n#[field(bn254)]\nfn __derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32,\n) -> [EmbeddedCurvePoint; N] {}\n\n#[field(bn254)]\n// Same as from_field but:\n// does not assert the limbs are 128 bits\n// does not assert the decomposition does not overflow the EmbeddedCurveScalar\nfn from_field_unsafe(scalar: Field) -> EmbeddedCurveScalar {\n    let (xlo, xhi) = unsafe {\n        //@safety : xlo and xhi decomposition is checked below\n        crate::field::bn254::decompose_hint(scalar)\n    };\n    // Check that the decomposition is correct\n    assert_eq(scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi);\n    EmbeddedCurveScalar { lo: xlo, hi: xhi }\n}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut sum = 0;\n\n    for input in inputs {\n        let input_bytes: [u8; 32] = input.to_le_bytes();\n        sum += crate::field::bytes32_to_field(blake2s(input_bytes));\n    }\n\n    sum\n}\n\n// docs:start:keccak256\npub fn keccak256<let N: u32>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{\n    crate::hash::keccak::keccak256(input, message_size)\n}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<let N: u32>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n// Generic hashing support.\n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\n#[derive_via(derive_hash)]\npub trait Hash {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher;\n}\n\n// docs:start:derive_hash\ncomptime fn derive_hash(s: StructDefinition) -> Quoted {\n    let name = quote { Hash };\n    let signature = quote { fn hash<H>(_self: Self, _state: &mut H) where H: std::hash::Hasher };\n    let for_each_field = |name| quote { _self.$name.hash(_state); };\n    crate::meta::make_trait_impl(\n        s,\n        name,\n        signature,\n        for_each_field,\n        quote {},\n        |fields| fields,\n    )\n}\n// docs:end:derive_hash\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\npub trait Hasher {\n    fn finish(self) -> Field;\n\n    fn write(&mut self, input: Field);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\npub trait BuildHasher<H>\nwhere\n    H: Hasher,\n{\n    fn build_hasher(self) -> H;\n}\n\npub struct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default,\n{\n    fn build_hasher(_self: Self) -> H {\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default,\n{\n    fn default() -> Self {\n        BuildHasherDefault {}\n    }\n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self);\n    }\n}\n\nimpl Hash for u1 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u16 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i16 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H)\n    where\n        H: Hasher,\n    {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self.lo as Field);\n        H::write(state, self.hi as Field);\n    }\n}\n\nimpl<T, let N: u32> Hash for [T; N]\nwhere\n    T: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T]\nwhere\n    T: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B)\nwhere\n    A: Hash,\n    B: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n    D: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n    D: Hash,\n    E: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n\n// Some test vectors for Pedersen hash and Pedersen Commitment.\n// They have been generated using the same functions so the tests are for now useless\n// but they will be useful when we switch to Noir implementation.\n#[test]\nfn assert_pedersen() {\n    assert_eq(\n        pedersen_hash_with_separator([1], 1),\n        0x1b3f4b1a83092a13d8d1a59f7acb62aba15e7002f4440f2275edb99ebbc2305f,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1], 1),\n        EmbeddedCurvePoint {\n            x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n            y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n            is_infinite: false,\n        },\n    );\n\n    assert_eq(\n        pedersen_hash_with_separator([1, 2], 2),\n        0x26691c129448e9ace0c66d11f0a16d9014a9e8498ee78f4d69f0083168188255,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2], 2),\n        EmbeddedCurvePoint {\n            x: 0x2e2b3b191e49541fe468ec6877721d445dcaffe41728df0a0eafeb15e87b0753,\n            y: 0x2ff4482400ad3a6228be17a2af33e2bcdf41be04795f9782bd96efe7e24f8778,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3], 3),\n        0x0bc694b7a1f8d10d2d8987d07433f26bd616a2d351bc79a3c540d85b6206dbe4,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3], 3),\n        EmbeddedCurvePoint {\n            x: 0x1fee4e8cf8d2f527caa2684236b07c4b1bad7342c01b0f75e9a877a71827dc85,\n            y: 0x2f9fedb9a090697ab69bf04c8bc15f7385b3e4b68c849c1536e5ae15ff138fd1,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4], 4),\n        0xdae10fb32a8408521803905981a2b300d6a35e40e798743e9322b223a5eddc,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4], 4),\n        EmbeddedCurvePoint {\n            x: 0x07ae3e202811e1fca39c2d81eabe6f79183978e6f12be0d3b8eda095b79bdbc9,\n            y: 0x0afc6f892593db6fbba60f2da558517e279e0ae04f95758587760ba193145014,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5], 5),\n        0xfc375b062c4f4f0150f7100dfb8d9b72a6d28582dd9512390b0497cdad9c22,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5], 5),\n        EmbeddedCurvePoint {\n            x: 0x1754b12bd475a6984a1094b5109eeca9838f4f81ac89c5f0a41dbce53189bb29,\n            y: 0x2da030e3cfcdc7ddad80eaf2599df6692cae0717d4e9f7bfbee8d073d5d278f7,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6], 6),\n        0x1696ed13dc2730062a98ac9d8f9de0661bb98829c7582f699d0273b18c86a572,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6], 6),\n        EmbeddedCurvePoint {\n            x: 0x190f6c0e97ad83e1e28da22a98aae156da083c5a4100e929b77e750d3106a697,\n            y: 0x1f4b60f34ef91221a0b49756fa0705da93311a61af73d37a0c458877706616fb,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7], 7),\n        0x128c0ff144fc66b6cb60eeac8a38e23da52992fc427b92397a7dffd71c45ede3,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7], 7),\n        EmbeddedCurvePoint {\n            x: 0x015441e9d29491b06563fac16fc76abf7a9534c715421d0de85d20dbe2965939,\n            y: 0x1d2575b0276f4e9087e6e07c2cb75aa1baafad127af4be5918ef8a2ef2fea8fc,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8),\n        0x2f960e117482044dfc99d12fece2ef6862fba9242be4846c7c9a3e854325a55c,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8),\n        EmbeddedCurvePoint {\n            x: 0x1657737676968887fceb6dd516382ea13b3a2c557f509811cd86d5d1199bc443,\n            y: 0x1f39f0cb569040105fa1e2f156521e8b8e08261e635a2b210bdc94e8d6d65f77,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9),\n        0x0c96db0790602dcb166cc4699e2d306c479a76926b81c2cb2aaa92d249ec7be7,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9),\n        EmbeddedCurvePoint {\n            x: 0x0a3ceae42d14914a432aa60ec7fded4af7dad7dd4acdbf2908452675ec67e06d,\n            y: 0xfc19761eaaf621ad4aec9a8b2e84a4eceffdba78f60f8b9391b0bd9345a2f2,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10),\n        0x2cd37505871bc460a62ea1e63c7fe51149df5d0801302cf1cbc48beb8dff7e94,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10),\n        EmbeddedCurvePoint {\n            x: 0x2fb3f8b3d41ddde007c8c3c62550f9a9380ee546fcc639ffbb3fd30c8d8de30c,\n            y: 0x300783be23c446b11a4c0fabf6c91af148937cea15fcf5fb054abf7f752ee245,\n            is_infinite: false,\n        },\n    );\n}\n","path":"std/hash/mod.nr"},"27":{"source":"use crate::runtime::is_unconstrained;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// A message block is up to 64 bytes taken from the input.\nglobal BLOCK_SIZE: u32 = 64;\n\n// The first index in the block where the 8 byte message size will be written.\nglobal MSG_SIZE_PTR: u32 = 56;\n\n// Size of the message block when packed as 4-byte integer array.\nglobal INT_BLOCK_SIZE: u32 = 16;\n\n// A `u32` integer consists of 4 bytes.\nglobal INT_SIZE: u32 = 4;\n\n// Index of the integer in the `INT_BLOCK` where the length is written.\nglobal INT_SIZE_PTR: u32 = MSG_SIZE_PTR / INT_SIZE;\n\n// Magic numbers for bit shifting.\n// Works with actual bit shifting as well as the compiler turns them into * and /\n// but circuit execution appears to be 10% faster this way.\nglobal TWO_POW_8: u32 = 256;\nglobal TWO_POW_16: u32 = TWO_POW_8 * 256;\nglobal TWO_POW_24: u32 = TWO_POW_16 * 256;\nglobal TWO_POW_32: u64 = TWO_POW_24 as u64 * 256;\n\n// Index of a byte in a 64 byte block; ie. 0..=63\ntype BLOCK_BYTE_PTR = u32;\n\n// The foreign function to compress blocks works on 16 pieces of 4-byte integers, instead of 64 bytes.\ntype INT_BLOCK = [u32; INT_BLOCK_SIZE];\n\n// A message block is a slice of the original message of a fixed size,\n// potentially padded with zeros, with neighbouring 4 bytes packed into integers.\ntype MSG_BLOCK = INT_BLOCK;\n\n// The hash is 32 bytes.\ntype HASH = [u8; 32];\n\n// The state accumulates the blocks.\n// Its overall size is the same as the `HASH`.\ntype STATE = [u32; 8];\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> HASH\n// docs:end:sha256\n{\n    digest(input)\n}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: INT_BLOCK, _state: STATE) -> STATE {}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> HASH {\n    sha256_var(msg, N as u64)\n}\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> HASH {\n    let message_size = message_size as u32;\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n    // Intermediate hash, starting with the canonical initial value\n    let mut h: STATE = [\n        1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635,\n        1541459225,\n    ];\n    // Pointer into msg_block on a 64 byte scale\n    let mut msg_byte_ptr = 0;\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            /*@safety  : the msg_block is checked below in verify_msg_block*/\n            build_msg_block(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_block, h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            //@safety : the msg_block is checked below in verify_msg_block\n            build_msg_block(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n                verify_msg_block_padding(msg_block, msg_byte_ptr);\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    // If we had modulo == 0 then it means the last block was full,\n    // and we can reset the pointer to zero to overwrite it.\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    // Here we rely on the fact that everything beyond the available input is set to 0.\n    msg_block = update_block_item(\n        msg_block,\n        msg_byte_ptr,\n        |msg_item| set_item_byte_then_zeros(msg_item, msg_byte_ptr, 1 << 7),\n    );\n    msg_byte_ptr = msg_byte_ptr + 1;\n    let last_block = msg_block;\n\n    // If we don't have room to write the size, compress the block and reset it.\n    if msg_byte_ptr > MSG_SIZE_PTR {\n        h = sha256_compression(msg_block, h);\n        // `attach_len_to_msg_block` will zero out everything after the `msg_byte_ptr`.\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe {\n        //@safety : the msg_len is checked below in verify_msg_len\n        attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size)\n    };\n\n    if !is_unconstrained() {\n        verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size);\n    }\n\n    hash_final_block(msg_block, h)\n}\n\n// Take `BLOCK_SIZE` number of bytes from `msg` starting at `msg_start`.\n// Returns the block and the length that has been copied rather than padded with zeros.\nunconstrained fn build_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_start: u32,\n) -> (MSG_BLOCK, BLOCK_BYTE_PTR) {\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n\n    // Figure out the number of items in the int array that we have to pack.\n    // e.g. if the input is [0,1,2,3,4,5] then we need to pack it as 2 items: [0123, 4500]\n    let mut int_input = block_input / INT_SIZE;\n    if block_input % INT_SIZE != 0 {\n        int_input = int_input + 1;\n    };\n\n    for i in 0..int_input {\n        let mut msg_item: u32 = 0;\n        // Always construct the integer as 4 bytes, even if it means going beyond the input.\n        for j in 0..INT_SIZE {\n            let k = i * INT_SIZE + j;\n            let msg_byte = if k < block_input {\n                msg[msg_start + k]\n            } else {\n                0\n            };\n            msg_item = lshift8(msg_item, 1) + msg_byte as u32;\n        }\n        msg_block[i] = msg_item;\n    }\n\n    // Returning the index as if it was a 64 byte array.\n    // We have to project it down to 16 items and bit shifting to get a byte back if we need it.\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed by `build_msg_block`\n// and matches the input data. Returns the index of the first unset item.\n// If `message_size` is less than `msg_start` then this is called with the old non-empty block;\n// in that case we can skip verification, ie. no need to check that everything is zero.\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: MSG_BLOCK,\n    msg_start: u32,\n) -> BLOCK_BYTE_PTR {\n    let mut msg_byte_ptr = 0;\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n    // We might have to go beyond the input to pad the fields.\n    if msg_end % INT_SIZE != 0 {\n        msg_end = msg_end + INT_SIZE - msg_end % INT_SIZE;\n    }\n\n    // Reconstructed packed item.\n    let mut msg_item: u32 = 0;\n\n    // Inclusive at the end so that we can compare the last item.\n    let mut i: u32 = 0;\n    for k in msg_start..=msg_end {\n        if k % INT_SIZE == 0 {\n            // If we consumed some input we can compare against the block.\n            if (msg_start < message_size) & (k > msg_start) {\n                assert_eq(msg_block[i], msg_item as u32);\n                i = i + 1;\n                msg_item = 0;\n            }\n        }\n        // Shift the accumulator\n        msg_item = lshift8(msg_item, 1);\n        // If we have input to consume, add it at the rightmost position.\n        if k < message_size & k < msg_end {\n            msg_item = msg_item + msg[k] as u32;\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\n// Verify the block we are compressing was appropriately padded with zeros by `build_msg_block`.\n// This is only relevant for the last, potentially partially filled block.\nfn verify_msg_block_padding(msg_block: MSG_BLOCK, msg_byte_ptr: BLOCK_BYTE_PTR) {\n    // Check all the way to the end of the block.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_BLOCK_SIZE);\n}\n\n// Verify that a region of ints in the message block are (partially) zeroed,\n// up to an (exclusive) maximum which can either be the end of the block\n// or just where the size is to be written.\nfn verify_msg_block_zeros(\n    msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    max_int_byte_ptr: u32,\n) {\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // First integer which is supposed to be (partially) zero.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        let zeros = INT_SIZE - modulo;\n        let mask = if zeros == 3 {\n            TWO_POW_24\n        } else if zeros == 2 {\n            TWO_POW_16\n        } else {\n            TWO_POW_8\n        };\n        assert_eq(msg_block[int_byte_ptr] % mask, zero);\n        int_byte_ptr = int_byte_ptr + 1;\n    }\n\n    // Check the rest of the items.\n    for i in 0..max_int_byte_ptr {\n        if i >= int_byte_ptr {\n            assert_eq(msg_block[i], zero);\n        }\n    }\n}\n\n// Verify that up to the byte pointer the two blocks are equal.\n// At the byte pointer the new block can be partially zeroed.\nfn verify_msg_block_equals_last(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n) {\n    // msg_byte_ptr is the position at which they are no longer have to be the same.\n    // First integer which is supposed to be (partially) zero contains that pointer.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Reconstruct the partially zero item from the last block.\n        let last_field = last_block[int_byte_ptr];\n        let mut msg_item: u32 = 0;\n        // Reset to where they are still equal.\n        msg_byte_ptr = msg_byte_ptr - modulo;\n        for i in 0..INT_SIZE {\n            msg_item = lshift8(msg_item, 1);\n            if i < modulo {\n                msg_item = msg_item + get_item_byte(last_field, msg_byte_ptr) as u32;\n                msg_byte_ptr = msg_byte_ptr + 1;\n            }\n        }\n        assert_eq(msg_block[int_byte_ptr], msg_item);\n    }\n\n    for i in 0..INT_SIZE_PTR {\n        if i < int_byte_ptr {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n    }\n}\n\n// Apply a function on the block item which the pointer indicates.\nfn update_block_item<Env>(\n    mut msg_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    f: fn[Env](u32) -> u32,\n) -> MSG_BLOCK {\n    let i = msg_byte_ptr / INT_SIZE;\n    msg_block[i] = f(msg_block[i]);\n    msg_block\n}\n\n// Set the rightmost `zeros` number of bytes to 0.\nfn set_item_zeros(item: u32, zeros: u8) -> u32 {\n    lshift8(rshift8(item, zeros), zeros)\n}\n\n// Replace one byte in the item with a value, and set everything after it to zero.\nfn set_item_byte_then_zeros(msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR, msg_byte: u8) -> u32 {\n    let zeros = INT_SIZE - msg_byte_ptr % INT_SIZE;\n    let zeroed_item = set_item_zeros(msg_item, zeros as u8);\n    let new_item = byte_into_item(msg_byte, msg_byte_ptr);\n    zeroed_item + new_item\n}\n\n// Get a byte of a message item according to its overall position in the `BLOCK_SIZE` space.\nfn get_item_byte(mut msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR) -> u8 {\n    // How many times do we have to shift to the right to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    msg_item = rshift8(msg_item, shifts as u8);\n    // At this point the byte we want is in the rightmost position.\n    msg_item as u8\n}\n\n// Project a byte into a position in a field based on the overall block pointer.\n// For example putting 1 into pointer 5 would be 100, because overall we would\n// have [____, 0100] with indexes [0123,4567].\nfn byte_into_item(msg_byte: u8, msg_byte_ptr: BLOCK_BYTE_PTR) -> u32 {\n    let mut msg_item = msg_byte as u32;\n    // How many times do we have to shift to the left to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    lshift8(msg_item, shifts as u8)\n}\n\n// Construct a field out of 4 bytes.\nfn make_item(b0: u8, b1: u8, b2: u8, b3: u8) -> u32 {\n    let mut item = b0 as u32;\n    item = lshift8(item, 1) + b1 as u32;\n    item = lshift8(item, 1) + b2 as u32;\n    item = lshift8(item, 1) + b3 as u32;\n    item\n}\n\n// Shift by 8 bits to the left between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise multiplies by 256.\nfn lshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        if item == 0 {\n            0\n        } else {\n            // Brillig wouldn't shift 0<<4 without overflow.\n            item << (8 * shifts)\n        }\n    } else {\n        // We can do a for loop up to INT_SIZE or an if-else.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item * TWO_POW_8\n        } else if shifts == 2 {\n            item * TWO_POW_16\n        } else if shifts == 3 {\n            item * TWO_POW_24\n        } else {\n            // Doesn't make sense, but it's most likely called on 0 anyway.\n            0\n        }\n    }\n}\n\n// Shift by 8 bits to the right between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise divides by 256.\nfn rshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        item >> (8 * shifts)\n    } else {\n        // Division wouldn't work on `Field`.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item / TWO_POW_8\n        } else if shifts == 2 {\n            item / TWO_POW_16\n        } else if shifts == 3 {\n            item / TWO_POW_24\n        } else {\n            0\n        }\n    }\n}\n\n// Zero out all bytes between the end of the message and where the length is appended,\n// then write the length into the last 8 bytes of the block.\nunconstrained fn attach_len_to_msg_block(\n    mut msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) -> MSG_BLOCK {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 bits (i.e. until msg_byte_ptr = 56).\n    // There can be one item which has to be partially zeroed.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Index of the block in which we find the item we need to partially zero.\n        let i = msg_byte_ptr / INT_SIZE;\n        let zeros = INT_SIZE - modulo;\n        msg_block[i] = set_item_zeros(msg_block[i], zeros as u8);\n        msg_byte_ptr = msg_byte_ptr + zeros;\n    }\n\n    // The rest can be zeroed without bit shifting anything.\n    for i in (msg_byte_ptr / INT_SIZE)..INT_SIZE_PTR {\n        msg_block[i] = 0;\n    }\n\n    // Set the last two 4 byte ints as the first/second half of the 8 bytes of the length.\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..=1 {\n        let shift = i * 4;\n        msg_block[INT_SIZE_PTR + i] = make_item(\n            len_bytes[shift],\n            len_bytes[shift + 1],\n            len_bytes[shift + 2],\n            len_bytes[shift + 3],\n        );\n    }\n    msg_block\n}\n\n// Verify that the message length was correctly written by `attach_len_to_msg_block`,\n// and that everything between the byte pointer and the size pointer was zeroed,\n// and that everything before the byte pointer was untouched.\nfn verify_msg_len(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) {\n    // Check zeros up to the size pointer.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR);\n\n    // Check that up to the pointer we match the last block.\n    verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr);\n\n    // We verify the message length was inserted correctly by reversing the byte decomposition.\n    let mut reconstructed_len: u64 = 0;\n    for i in INT_SIZE_PTR..INT_BLOCK_SIZE {\n        reconstructed_len = reconstructed_len * TWO_POW_32;\n        reconstructed_len = reconstructed_len + msg_block[i] as u64;\n    }\n    let len = 8 * message_size as u64;\n    assert_eq(reconstructed_len, len);\n}\n\n// Perform the final compression, then transform the `STATE` into `HASH`.\nfn hash_final_block(msg_block: MSG_BLOCK, mut state: STATE) -> HASH {\n    let mut out_h: HASH = [0; 32]; // Digest as sequence of bytes\n    // Hash final padded block\n    state = sha256_compression(msg_block, state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[j] as Field).to_be_bytes();\n        for k in 0..4 {\n            out_h[4 * j + k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod tests {\n    use super::{\n        attach_len_to_msg_block, build_msg_block, byte_into_item, get_item_byte, make_item,\n        set_item_byte_then_zeros, set_item_zeros,\n    };\n    use super::INT_BLOCK;\n    use super::sha256_var;\n\n    #[test]\n    fn smoke_test() {\n        let input = [0xbd];\n        let result = [\n            0x68, 0x32, 0x57, 0x20, 0xaa, 0xbd, 0x7c, 0x82, 0xf3, 0x0f, 0x55, 0x4b, 0x31, 0x3d,\n            0x05, 0x70, 0xc9, 0x5a, 0xcc, 0xbb, 0x7d, 0xc4, 0xb5, 0xaa, 0xe1, 0x12, 0x04, 0xc0,\n            0x8f, 0xfe, 0x73, 0x2b,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116,\n        ];\n        let result = [\n            91, 122, 146, 93, 52, 109, 133, 148, 171, 61, 156, 70, 189, 238, 153, 7, 222, 184, 94,\n            24, 65, 114, 192, 244, 207, 199, 87, 232, 192, 224, 171, 207,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_multiple_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115,\n            99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49,\n            46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46,\n            48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115,\n            117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97,\n            103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45,\n            52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55,\n            64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32,\n            50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32,\n            43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64,\n            103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103,\n            110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115,\n            104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101,\n            108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109,\n            59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56,\n            51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48,\n            87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75,\n            57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67,\n            111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101,\n            114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99,\n        ];\n        let result = [\n            116, 90, 151, 31, 78, 22, 138, 180, 211, 189, 69, 76, 227, 200, 155, 29, 59, 123, 154,\n            60, 47, 153, 203, 129, 157, 251, 48, 2, 79, 11, 65, 47,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_under_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59,\n        ];\n        let result = [\n            143, 140, 76, 173, 222, 123, 102, 68, 70, 149, 207, 43, 39, 61, 34, 79, 216, 252, 213,\n            165, 74, 16, 110, 74, 29, 64, 138, 167, 30, 1, 9, 119,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_not_block_multiple() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115,\n            99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49,\n            46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46,\n            48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115,\n            117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97,\n            103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45,\n            52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55,\n            64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32,\n            50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32,\n            43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64,\n            103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103,\n            110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115,\n            104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101,\n            108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109,\n            59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56,\n            51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48,\n            87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75,\n            57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67,\n            111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101,\n            114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99, 116, 58, 77, 101, 115, 115, 97,\n            103, 101, 45, 73, 100, 58, 68, 97, 116, 101, 58, 116, 111, 59, 32, 98, 61,\n        ];\n        let result = [\n            112, 144, 73, 182, 208, 98, 9, 238, 54, 229, 61, 145, 222, 17, 72, 62, 148, 222, 186,\n            55, 192, 82, 220, 35, 66, 47, 193, 200, 22, 38, 26, 186,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_with_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17,\n            48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12,\n            201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48,\n            37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6,\n            242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2,\n            1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89,\n            110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2,\n            1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75,\n            193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1,\n            12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189,\n            233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4,\n            32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45,\n            105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4,\n            32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188,\n            194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212,\n            181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53,\n        ];\n        let message_size = 297;\n        assert_eq(sha256_var(input, message_size), result);\n    }\n\n    #[test]\n    fn msg_big_no_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17,\n            48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12,\n            201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48,\n            37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6,\n            242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2,\n            1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89,\n            110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2,\n            1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75,\n            193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1,\n            12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189,\n            233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4,\n            32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45,\n            105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4,\n            32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188,\n            194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38,\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212,\n            181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn same_msg_len_variable_padding() {\n        let input = [\n            29, 81, 165, 84, 243, 114, 101, 37, 242, 146, 127, 99, 69, 145, 39, 72, 213, 39, 253,\n            179, 218, 37, 217, 201, 172, 93, 198, 50, 249, 70, 15, 30, 162, 112, 187, 40, 140, 9,\n            236, 53, 32, 44, 38, 163, 113, 254, 192, 197, 44, 89, 71, 130, 169, 242, 17, 211, 214,\n            72, 19, 178, 186, 168, 147, 127, 99, 101, 252, 227, 8, 147, 150, 85, 97, 158, 17, 107,\n            218, 244, 82, 113, 247, 91, 208, 214, 60, 244, 87, 137, 173, 201, 130, 18, 66, 56, 198,\n            149, 207, 189, 175, 120, 123, 224, 177, 167, 251, 159, 143, 110, 68, 183, 189, 70, 126,\n            32, 35, 164, 44, 30, 44, 12, 65, 18, 62, 239, 242, 2, 248, 104, 2, 178, 64, 28, 126, 36,\n            137, 24, 14, 116, 91, 98, 90, 159, 218, 102, 45, 11, 110, 223, 245, 184, 52, 99, 59,\n            245, 136, 175, 3, 72, 164, 146, 145, 116, 22, 66, 24, 49, 193, 121, 3, 60, 37, 41, 97,\n            3, 190, 66, 195, 225, 63, 46, 3, 118, 4, 208, 15, 1, 40, 254, 235, 151, 123, 70, 180,\n            170, 44, 172, 90, 4, 254, 53, 239, 116, 246, 67, 56, 129, 61, 22, 169, 213, 65, 27, 216,\n            116, 162, 239, 214, 207, 126, 177, 20, 100, 25, 48, 143, 84, 215, 70, 197, 53, 65, 70,\n            86, 172, 61, 62, 9, 212, 167, 169, 133, 41, 126, 213, 196, 33, 192, 238, 0, 63, 246,\n            215, 58, 128, 110, 101, 92, 3, 170, 214, 130, 149, 52, 81, 125, 118, 233, 3, 118, 193,\n            104, 207, 120, 115, 77, 253, 191, 122, 0, 107, 164, 207, 113, 81, 169, 36, 201, 228, 74,\n            134, 131, 218, 178, 35, 30, 216, 101, 2, 103, 174, 87, 95, 50, 50, 215, 157, 5, 210,\n            188, 54, 211, 78, 45, 199, 96, 121, 241, 241, 176, 226, 194, 134, 130, 89, 217, 210,\n            186, 32, 140, 39, 91, 103, 212, 26, 87, 32, 72, 144, 228, 230, 117, 99, 188, 50, 15, 69,\n            79, 179, 50, 12, 106, 86, 218, 101, 73, 142, 243, 29, 250, 122, 228, 233, 29, 255, 22,\n            121, 114, 125, 103, 41, 250, 241, 179, 126, 158, 198, 116, 209, 65, 94, 98, 228, 175,\n            169, 96, 3, 9, 233, 133, 214, 55, 161, 164, 103, 80, 85, 24, 186, 64, 167, 92, 131, 53,\n            101, 202, 47, 25, 104, 118, 155, 14, 12, 12, 25, 116, 45, 221, 249, 28, 246, 212, 200,\n            157, 167, 169, 56, 197, 181, 4, 245, 146, 1, 140, 234, 191, 212, 228, 125, 87, 81, 86,\n            119, 30, 63, 129, 143, 32, 96,\n        ];\n\n        // Prepare inputs of different lengths\n        let mut input_511 = [0; 511];\n        let mut input_512 = [0; 512]; // Next block\n        let mut input_575 = [0; 575];\n        let mut input_576 = [0; 576]; // Next block\n        for i in 0..input.len() {\n            input_511[i] = input[i];\n            input_512[i] = input[i];\n            input_575[i] = input[i];\n            input_576[i] = input[i];\n        }\n\n        // Compute hashes of all inputs (with same message length)\n        let fixed_length_hash = super::sha256(input);\n        let var_full_length_hash = sha256_var(input, input.len() as u64);\n        let var_length_hash_511 = sha256_var(input_511, input.len() as u64);\n        let var_length_hash_512 = sha256_var(input_512, input.len() as u64);\n        let var_length_hash_575 = sha256_var(input_575, input.len() as u64);\n        let var_length_hash_576 = sha256_var(input_576, input.len() as u64);\n\n        // All of the above should have produced the same hash\n        assert_eq(var_full_length_hash, fixed_length_hash);\n        assert_eq(var_length_hash_511, fixed_length_hash);\n        assert_eq(var_length_hash_512, fixed_length_hash);\n        assert_eq(var_length_hash_575, fixed_length_hash);\n        assert_eq(var_length_hash_576, fixed_length_hash);\n    }\n\n    #[test]\n    fn test_get_item_byte() {\n        let fld = make_item(10, 20, 30, 40);\n        assert_eq(fld, 0x0a141e28);\n        assert_eq(get_item_byte(fld, 0), 10);\n        assert_eq(get_item_byte(fld, 4), 10);\n        assert_eq(get_item_byte(fld, 6), 30);\n    }\n\n    #[test]\n    fn test_byte_into_item() {\n        let fld = make_item(0, 20, 0, 0);\n        assert_eq(byte_into_item(20, 1), fld);\n        assert_eq(byte_into_item(20, 5), fld);\n    }\n\n    #[test]\n    fn test_set_item_zeros() {\n        let fld0 = make_item(10, 20, 30, 40);\n        let fld1 = make_item(10, 0, 0, 0);\n        assert_eq(set_item_zeros(fld0, 3), fld1);\n        assert_eq(set_item_zeros(fld0, 4), 0);\n        assert_eq(set_item_zeros(0, 4), 0);\n    }\n\n    #[test]\n    fn test_set_item_byte_then_zeros() {\n        let fld0 = make_item(10, 20, 30, 40);\n        let fld1 = make_item(10, 50, 0, 0);\n        assert_eq(set_item_byte_then_zeros(fld0, 1, 50), fld1);\n    }\n\n    #[test]\n    fn test_build_msg_block_start_0() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48,\n        ];\n        assert_eq(input.len(), 22);\n        let (msg_block, msg_byte_ptr) = unsafe {\n            //@safety : testing context\n            build_msg_block(input, input.len(), 0)\n        };\n        assert_eq(msg_byte_ptr, input.len());\n        assert_eq(msg_block[0], make_item(input[0], input[1], input[2], input[3]));\n        assert_eq(msg_block[1], make_item(input[4], input[5], input[6], input[7]));\n        assert_eq(msg_block[5], make_item(input[20], input[21], 0, 0));\n        assert_eq(msg_block[6], 0);\n    }\n\n    #[test]\n    fn test_build_msg_block_start_1() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116,\n        ];\n        assert_eq(input.len(), 68);\n        let (msg_block, msg_byte_ptr) = unsafe {\n            //@safety : testing context\n            build_msg_block(input, input.len(), 64)\n        };\n        assert_eq(msg_byte_ptr, 4);\n        assert_eq(msg_block[0], make_item(input[64], input[65], input[66], input[67]));\n        assert_eq(msg_block[1], 0);\n    }\n\n    #[test]\n    fn test_attach_len_to_msg_block() {\n        let input: INT_BLOCK = [\n            2152555847, 1397309779, 1936618851, 1262052426, 1936876331, 1985297723, 543702374,\n            1919905082, 1131376244, 1701737517, 1417244773, 978151789, 1697470053, 1920166255,\n            1849316213, 1651139939,\n        ];\n        let msg_block = unsafe {\n            //@safety  : testing context\n            attach_len_to_msg_block(input, 1, 448)\n        };\n        assert_eq(msg_block[0], ((1 << 7) as u32) * 256 * 256 * 256);\n        assert_eq(msg_block[1], 0);\n        assert_eq(msg_block[15], 3584);\n    }\n}\n","path":"std/hash/sha256.nr"},"62":{"source":"use dep::zimburse_verifiers::{linode::{constants::LinodeBillingParams, main::verify_linode_billing_receipt}};\n\nfn main(params: LinodeBillingParams) -> pub [Field; 3] {\n    let LinodeBillingParams { \n        header,\n        body,\n        pubkey,\n        signature,\n        dkim_header_sequence,\n        body_hash_index,\n        from_index,\n        subject_index,\n        amount_index,\n        date_index,\n        receipt_id_length\n    } = params;\n\n    verify_linode_billing_receipt(\n        header,\n        pubkey,\n        signature,\n        dkim_header_sequence,\n        body,\n        body_hash_index,\n        from_index,\n        subject_index,\n        amount_index,\n        date_index,\n        receipt_id_length\n    )\n}\n","path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/circuits/library_testers/linode_email_verifier/src/main.nr"},"73":{"source":"use crate::linode::{\n    constants::{\n        LB_FROM_LEN, LB_PAYMENT_TEXT_LEN, LB_SUBJECT_FIXED_END_LEN, LB_SUBJECT_FIXED_START_LEN,\n        LINODE_BILLING_FROM, LINODE_BILLING_SUBJECT_FIXED_END, LINODE_BILLING_SUBJECT_FIXED_START,\n        LINODE_BILLING_PAYMENT_TEXT, MAX_BILLED_AMOUNT, MAX_LINODE_EMAIL_BODY_LENGTH,\n        MAX_LINODE_EMAIL_HEADER_LENGTH\n    }\n};\nuse date_parser::{parse_month, from_month_and_year, to_unix_month, MONTH_LONG_OFFSET};\nuse zkemail::Sequence;\n\n/**\n* Check that email is from linode billing address\n*/\npub fn check_from_linode_billing(index: u32, header: BoundedVec<u8, MAX_LINODE_EMAIL_HEADER_LENGTH>) {\n    // check the first char is \"f\" or \"F\"\n    assert(\n        (header.get_unchecked(index) == 0x66) | (header.get_unchecked(index) != 0x46), \"Email sender not found.\"\n    );\n\n    // check the remaing chars are the expected Linode billing\n    let from_bytes = LINODE_BILLING_FROM.as_bytes();\n    for i in 0..LB_FROM_LEN {\n        assert(header.get_unchecked(index + 1 + i) == from_bytes[i], \"Email not from Linode billing.\");\n    }\n\n    // check for CRLF\n    assert(header.get_unchecked(LB_FROM_LEN + index + 1) == 0x0D, \"Invalid CRLF sequence\");\n    assert(header.get_unchecked(LB_FROM_LEN + index + 2) == 0x0A, \"Invalid CRLF sequence\");\n}\n\n/**\n* Check that email subject is linode billing receipt\n*/\npub fn check_subject_linode_billing_receipt(\n    index: u32,\n    header: BoundedVec<u8, MAX_LINODE_EMAIL_HEADER_LENGTH>,\n    receipt_id_length: u32\n) {\n    // check the first char is \"s\" or \"S\"\n    assert(\n        (header.get_unchecked(index) == 0x73) | (header.get_unchecked(index) == 0x53), \"Email subject not found\"\n    );\n\n    let fixed_start_bytes = LINODE_BILLING_SUBJECT_FIXED_START.as_bytes();\n    // check chars in fixed section start\n    for i in 0..LB_SUBJECT_FIXED_START_LEN {\n        assert(\n            header.get_unchecked(i + index + 1) == fixed_start_bytes[i], \"Email subject is not Linode billing receipt\"\n        );\n    }\n\n    let fixed_end_bytes = LINODE_BILLING_SUBJECT_FIXED_END.as_bytes();\n    // check chars in fixed section end\n    for i in 0..LB_SUBJECT_FIXED_END_LEN {\n        let header_index = i + index + receipt_id_length + LB_SUBJECT_FIXED_START_LEN;\n        assert(\n            header.get_unchecked(header_index) == fixed_end_bytes[i], \"Email subject is not Linode billing receipt\"\n        );\n    }\n}\n\n/**\n* Extract the amount billed by Linode as a u32\n*/\npub fn extract_billed_amount(\n    body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH>,\n    amount_index: u32\n) -> u32 {\n    // ensure billed amount follows valid payment text sequence\n    let payment_text_bytes = LINODE_BILLING_PAYMENT_TEXT.as_bytes();\n    for i in 0..LB_PAYMENT_TEXT_LEN {\n        assert(\n            body.get_unchecked(amount_index - LB_PAYMENT_TEXT_LEN + i) == payment_text_bytes[i], \"Invalid payment text sequence.\"\n        );\n    }\n\n    let mut amount: Field = 0;\n    let mut power: Field = 0;\n\n    // ensure first character is '$'\n    assert(body.get(amount_index) == 36);\n\n    for i in 1..MAX_BILLED_AMOUNT {\n        let byte = body.get(amount_index + MAX_BILLED_AMOUNT - i);\n        // check that byte is numeric \n        if (byte >= 0x30) & (byte <= 0x39) {\n            amount = amount + ((byte as Field - 0x30) * (10 as Field).pow_32(power));\n            power = power + 1;\n        }\n    }\n    amount as u32\n}\n\n/**\n * Parses the month and the year from the email body's \"Payment Date\" field\n *\n * @param body - the signed email body of a linode billing receipt\n * @param date_index - the index of the first character of the \"Payment Date\" field\n * @return - the unix timestamp of the month/ year\n */\npub fn extract_datetime(\n    body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH>,\n    date_index: u32\n) -> u32 {\n    // range check access (TODO)\n    // check the prefix to ensure any other dates in email are not used\n    let prefix: [u8; 16] = comptime { \"\\r\\nPayment Date: \".as_bytes() };\n    for i in 0..16 {\n        let prefix_char = body.get_unchecked(date_index - 16 + i);\n        assert(prefix_char == prefix[i], \"Invalid date prefix\");\n    }\n    \n    // determine month\n    let extracted_month = [\n        body.get_unchecked(date_index),\n        body.get_unchecked(date_index + 1),\n        body.get_unchecked(date_index + 2)\n    ];\n    let month_idx = parse_month(extracted_month);\n    assert(month_idx != 0, \"Invalid month retrieved\");\n    // determine year\n    let offset_to_year = MONTH_LONG_OFFSET[month_idx - 1] + 3 + 5; // (month code), \" xx, \"\n    let extracted_year = [\n        body.get_unchecked(date_index + offset_to_year),\n        body.get_unchecked(date_index + offset_to_year + 1),\n        body.get_unchecked(date_index + offset_to_year + 2),\n        body.get_unchecked(date_index + offset_to_year + 3)\n    ];\n    let datetime = from_month_and_year(month_idx, extracted_year);\n    to_unix_month(datetime)\n}\n\n// fix check for https://veridise.notion.site/Amount-may-be-increased-up-to-maximum-149105edf1db800fa451d9aea3e877e7\n#[test]\nfn test_extract_billed_amount_manipulated_length() {\n    let value = \"$1,000.00.\\r\\n\\r\\nThank you.\".as_bytes();\n    let mut storage: [u8; MAX_LINODE_EMAIL_BODY_LENGTH] = [0; MAX_LINODE_EMAIL_BODY_LENGTH];\n    let sequence_length = value.len();\n    let text_length = LB_PAYMENT_TEXT_LEN + sequence_length;\n    for i in 0..text_length{\n        if i < LB_PAYMENT_TEXT_LEN {\n            storage[i] = LINODE_BILLING_PAYMENT_TEXT.as_bytes()[i];\n        }\n        else {\n            storage[i] = value[i - LB_PAYMENT_TEXT_LEN];\n        }\n    }\n    let body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH> = BoundedVec {\n        storage,\n        len: text_length\n    };\n    let amount_index = LB_PAYMENT_TEXT_LEN;\n    let extracted_amount = extract_billed_amount(body, amount_index);\n    assert(extracted_amount == 100000);\n}\n\n#[test]\nfn test_extract_billed_amount_decimal() {\n    let value = \"$0.67.\\r\\n\\r\\nThank you.\".as_bytes();\n    let mut storage: [u8; MAX_LINODE_EMAIL_BODY_LENGTH] = [0; MAX_LINODE_EMAIL_BODY_LENGTH];\n    let sequence_length = value.len();\n    let text_length = LB_PAYMENT_TEXT_LEN + sequence_length;\n    for i in 0..text_length{\n        if i < LB_PAYMENT_TEXT_LEN {\n            storage[i] = LINODE_BILLING_PAYMENT_TEXT.as_bytes()[i];\n        }\n        else {\n            storage[i] = value[i - LB_PAYMENT_TEXT_LEN];\n        }\n    }\n    let body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH> = BoundedVec {\n        storage,\n        len: text_length\n    };\n    let amount_index = LB_PAYMENT_TEXT_LEN;\n    let extracted_amount = extract_billed_amount(body, amount_index);\n    assert(extracted_amount == 67);\n}\n\n#[test]\nfn test_extract_billed_amount_max() {\n    let value = \"$9,999,999.99.\\r\\n\\r\\nThank you.\".as_bytes();\n    let mut storage: [u8; MAX_LINODE_EMAIL_BODY_LENGTH] = [0; MAX_LINODE_EMAIL_BODY_LENGTH];\n    let text_length = LB_PAYMENT_TEXT_LEN + value.len();\n    for i in 0..text_length{\n        if i < LB_PAYMENT_TEXT_LEN {\n            storage[i] = LINODE_BILLING_PAYMENT_TEXT.as_bytes()[i];\n        }\n        else {\n            storage[i] = value[i - LB_PAYMENT_TEXT_LEN];\n        }\n    }\n    let body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH> = BoundedVec {\n        storage,\n        len: text_length\n    };\n    let amount_index = LB_PAYMENT_TEXT_LEN;\n    let extracted_amount = extract_billed_amount(body, amount_index);\n    assert(extracted_amount == 999999999);\n}\n\n#[test]\nfn test_extract_billed_amount_normal() {\n    let body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH> = BoundedVec {\n        storage: [13, 10, 67, 111, 109, 112, 97, 110, 121, 32, 78, 97, 109, 101, 58, 32, 13, 10, 80, 97, 121, 109, 101, 110, 116, 32, 78, 117, 109, 98, 101, 114, 58, 32, 49, 55, 52, 49, 49, 57, 48, 52, 13, 10, 80, 97, 121, 109, 101, 110, 116, 32, 68, 97, 116, 101, 58, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 32, 48, 49, 44, 32, 50, 48, 50, 52, 13, 10, 80, 97, 121, 109, 101, 110, 116, 32, 67, 97, 114, 100, 58, 32, 48, 48, 51, 52, 13, 10, 13, 10, 84, 104, 105, 115, 32, 105, 115, 32, 121, 111, 117, 114, 32, 114, 101, 99, 101, 105, 112, 116, 32, 111, 102, 32, 112, 97, 121, 109, 101, 110, 116, 32, 97, 103, 97, 105, 110, 115, 116, 32, 121, 111, 117, 114, 32, 99, 114, 101, 100, 105, 116, 32, 99, 97, 114, 100, 32, 105, 110, 32, 116, 104, 101, 32, 13, 10, 97, 109, 111, 117, 110, 116, 32, 111, 102, 32, 36, 50, 50, 46, 48, 48, 46, 13, 10, 13, 10, 84, 104, 97, 110, 107, 32, 121, 111, 117, 46, 13, 10, 13, 10, 80, 108, 101, 97, 115, 101, 32, 110, 111, 116, 101, 32, 116, 104, 97, 116, 32, 99, 104, 97, 114, 103, 101, 115, 32, 119, 105, 108, 108, 32, 97, 112, 112, 101, 97, 114, 32, 97, 115, 32, 34, 76, 105, 110, 111, 100, 101, 42, 65, 107, 97, 109, 97, 105, 34, 32, 111, 110, 32, 121, 111, 117, 114, 13, 10, 99, 114, 101, 100, 105, 116, 32, 99, 97, 114, 100, 39, 115, 32, 115, 116, 97, 116, 101, 109, 101, 110, 116, 46, 13, 10, 13, 10, 70, 111, 114, 32, 97, 99, 99, 111, 117, 110, 116, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 97, 110, 100, 32, 99, 117, 114, 114, 101, 110, 116, 32, 98, 97, 108, 97, 110, 99, 101, 44, 32, 112, 108, 101, 97, 115, 101, 32, 118, 105, 115, 105, 116, 32, 116, 104, 101, 13, 10, 76, 105, 110, 111, 100, 101, 32, 77, 97, 110, 97, 103, 101, 114, 32, 97, 116, 32, 104, 116, 116, 112, 115, 58, 47, 47, 99, 108, 111, 117, 100, 46, 108, 105, 110, 111, 100, 101, 46, 99, 111, 109, 47, 13, 10, 13, 10, 73, 102, 32, 121, 111, 117, 32, 104, 97, 118, 101, 32, 97, 110, 121, 32, 113, 117, 101, 115, 116, 105, 111, 110, 115, 32, 111, 114, 32, 99, 111, 110, 99, 101, 114, 110, 115, 44, 32, 112, 108, 101, 97, 115, 101, 32, 111, 112, 101, 110, 32, 97, 32, 115, 117, 112, 112, 111, 114, 116, 32, 116, 105, 99, 107, 101, 116, 46, 32, 13, 10, 13, 10, 83, 105, 110, 99, 101, 114, 101, 108, 121, 44, 13, 10, 13, 10, 84, 104, 101, 32, 76, 105, 110, 111, 100, 101, 32, 84, 101, 97, 109, 13, 10, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 108, 105, 110, 111, 100, 101, 46, 99, 111, 109, 47, 32, 45, 32, 76, 105, 110, 117, 120, 32, 67, 108, 111, 117, 100, 32, 72, 111, 115, 116, 105, 110, 103, 13, 10, 13, 10, 80, 108, 101, 97, 115, 101, 32, 110, 111, 116, 101, 32, 116, 104, 97, 116, 32, 101, 102, 102, 101, 99, 116, 105, 118, 101, 32, 74, 117, 108, 121, 32, 48, 49, 44, 32, 50, 48, 50, 50, 44, 32, 99, 104, 97, 114, 103, 101, 115, 32, 102, 111, 114, 32, 76, 105, 110, 111, 100, 101, 32, 115, 101, 114, 118, 105, 99, 101, 115, 32, 109, 97, 121, 13, 10, 97, 112, 112, 101, 97, 114, 32, 97, 115, 32, 34, 76, 105, 110, 111, 100, 101, 42, 65, 107, 97, 109, 97, 105, 34, 32, 119, 105, 116, 104, 32, 121, 111, 117, 114, 32, 98, 97, 110, 107, 32, 111, 114, 32, 99, 114, 101, 100, 105, 116, 32, 99, 97, 114, 100, 46, 13, 10, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0],\n        len: 768\n    };\n    let amount_index = 176;\n    let extracted_amount = extract_billed_amount(body, amount_index);\n    assert(extracted_amount == 2200);\n}\n\n#[test]\nfn test_get_date_str() {\n    let mut body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH> = BoundedVec {\n\t\tstorage: [13, 10, 67, 111, 109, 112, 97, 110, 121, 32, 78, 97, 109, 101, 58, 32, 13, 10, 80, 97, 121, 109, 101, 110, 116, 32, 78, 117, 109, 98, 101, 114, 58, 32, 49, 55, 52, 49, 49, 57, 48, 52, 13, 10, 80, 97, 121, 109, 101, 110, 116, 32, 68, 97, 116, 101, 58, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 32, 48, 49, 44, 32, 50, 48, 50, 52, 13, 10, 80, 97, 121, 109, 101, 110, 116, 32, 67, 97, 114, 100, 58, 32, 48, 48, 51, 52, 13, 10, 13, 10, 84, 104, 105, 115, 32, 105, 115, 32, 121, 111, 117, 114, 32, 114, 101, 99, 101, 105, 112, 116, 32, 111, 102, 32, 112, 97, 121, 109, 101, 110, 116, 32, 97, 103, 97, 105, 110, 115, 116, 32, 121, 111, 117, 114, 32, 99, 114, 101, 100, 105, 116, 32, 99, 97, 114, 100, 32, 105, 110, 32, 116, 104, 101, 32, 13, 10, 97, 109, 111, 117, 110, 116, 32, 111, 102, 32, 36, 50, 50, 46, 48, 48, 46, 13, 10, 13, 10, 84, 104, 97, 110, 107, 32, 121, 111, 117, 46, 13, 10, 13, 10, 80, 108, 101, 97, 115, 101, 32, 110, 111, 116, 101, 32, 116, 104, 97, 116, 32, 99, 104, 97, 114, 103, 101, 115, 32, 119, 105, 108, 108, 32, 97, 112, 112, 101, 97, 114, 32, 97, 115, 32, 34, 76, 105, 110, 111, 100, 101, 42, 65, 107, 97, 109, 97, 105, 34, 32, 111, 110, 32, 121, 111, 117, 114, 13, 10, 99, 114, 101, 100, 105, 116, 32, 99, 97, 114, 100, 39, 115, 32, 115, 116, 97, 116, 101, 109, 101, 110, 116, 46, 13, 10, 13, 10, 70, 111, 114, 32, 97, 99, 99, 111, 117, 110, 116, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 97, 110, 100, 32, 99, 117, 114, 114, 101, 110, 116, 32, 98, 97, 108, 97, 110, 99, 101, 44, 32, 112, 108, 101, 97, 115, 101, 32, 118, 105, 115, 105, 116, 32, 116, 104, 101, 13, 10, 76, 105, 110, 111, 100, 101, 32, 77, 97, 110, 97, 103, 101, 114, 32, 97, 116, 32, 104, 116, 116, 112, 115, 58, 47, 47, 99, 108, 111, 117, 100, 46, 108, 105, 110, 111, 100, 101, 46, 99, 111, 109, 47, 13, 10, 13, 10, 73, 102, 32, 121, 111, 117, 32, 104, 97, 118, 101, 32, 97, 110, 121, 32, 113, 117, 101, 115, 116, 105, 111, 110, 115, 32, 111, 114, 32, 99, 111, 110, 99, 101, 114, 110, 115, 44, 32, 112, 108, 101, 97, 115, 101, 32, 111, 112, 101, 110, 32, 97, 32, 115, 117, 112, 112, 111, 114, 116, 32, 116, 105, 99, 107, 101, 116, 46, 32, 13, 10, 13, 10, 83, 105, 110, 99, 101, 114, 101, 108, 121, 44, 13, 10, 13, 10, 84, 104, 101, 32, 76, 105, 110, 111, 100, 101, 32, 84, 101, 97, 109, 13, 10, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 108, 105, 110, 111, 100, 101, 46, 99, 111, 109, 47, 32, 45, 32, 76, 105, 110, 117, 120, 32, 67, 108, 111, 117, 100, 32, 72, 111, 115, 116, 105, 110, 103, 13, 10, 13, 10, 80, 108, 101, 97, 115, 101, 32, 110, 111, 116, 101, 32, 116, 104, 97, 116, 32, 101, 102, 102, 101, 99, 116, 105, 118, 101, 32, 74, 117, 108, 121, 32, 48, 49, 44, 32, 50, 48, 50, 50, 44, 32, 99, 104, 97, 114, 103, 101, 115, 32, 102, 111, 114, 32, 76, 105, 110, 111, 100, 101, 32, 115, 101, 114, 118, 105, 99, 101, 115, 32, 109, 97, 121, 13, 10, 97, 112, 112, 101, 97, 114, 32, 97, 115, 32, 34, 76, 105, 110, 111, 100, 101, 42, 65, 107, 97, 109, 97, 105, 34, 32, 119, 105, 116, 104, 32, 121, 111, 117, 114, 32, 98, 97, 110, 107, 32, 111, 114, 32, 99, 114, 101, 100, 105, 116, 32, 99, 97, 114, 100, 46, 13, 10, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0],\n\t\tlen: 768\n\t};\n    let date_index = 58;\n    let extracted_date = extract_datetime(body, date_index);\n    let expected = 1725148800; // new Date(\"2024-09-01T00:00:00.000Z\").getTime() / 1000\n    assert(extracted_date == expected);\n}","path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/circuits/zimburse_verifiers/src/linode/utils.nr"},"75":{"source":"use crate::linode::{\n    constants::{LinodeBillingParams, MAX_LINODE_EMAIL_BODY_LENGTH, MAX_LINODE_EMAIL_HEADER_LENGTH},\n    utils::{check_from_linode_billing, check_subject_linode_billing_receipt, extract_billed_amount, extract_datetime}\n};\nuse dep::zkemail::{KEY_LIMBS_2048, dkim::RSAPubkey, headers::body_hash::get_body_hash, Sequence};\nuse std::{hash::{sha256_var, pedersen_hash}, collections::bounded_vec::BoundedVec};\n\npub fn verify_linode_billing_receipt(\n    header: BoundedVec<u8, MAX_LINODE_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    dkim_header_field_sequence: Sequence,\n    body: BoundedVec<u8, MAX_LINODE_EMAIL_BODY_LENGTH>,\n    body_hash_index: u32,\n    from_index: u32,\n    subject_index: u32,\n    amount_index: u32,\n    date_index: u32,\n    receipt_id_length: u32\n) -> [Field; 3] {\n    // check the body and header lengths are within bounds\n    assert(header.len() <= MAX_LINODE_EMAIL_HEADER_LENGTH);\n    assert(body.len() <= MAX_LINODE_EMAIL_BODY_LENGTH);\n\n    // verify the dkim signature over the header\n    // pubkey.verify_dkim_signature(header, signature);\n\n    // extract body hash and decode from base64\n    let signed_body_hash = get_body_hash(header, dkim_header_field_sequence, body_hash_index);\n\n    // compute the hash of the asserted body\n    let computed_body_hash = sha256_var(body.storage, body.len() as u64);\n\n    // compare the retrieved body hash to the computed body hash\n    assert(\n        signed_body_hash == computed_body_hash, \"SHA256 hash computed over body does not match body hash found in DKIM-signed header\"\n    );\n\n    // assert email is from billing@linode.com\n    check_from_linode_billing(from_index, header);\n\n    // assert this is a billing receipt email from Linode\n    check_subject_linode_billing_receipt(subject_index, header, receipt_id_length);\n\n    // extract billed amount\n    // note: the billed amount has 2 decimals already\n    let billed_amount = extract_billed_amount(body, amount_index);\n\n    // extract the receipt date from the email body\n    let datetime = extract_datetime(body, date_index);\n\n    // hash the dkim key used to verify the email\n    let dkim_key_hash = pedersen_hash(pubkey.modulus);\n    [dkim_key_hash, datetime as Field, billed_amount as Field]\n}\n","path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/circuits/zimburse_verifiers/src/linode/main.nr"},"337":{"source":"struct Datetime {\n    year: u16,\n    leap_years: u16,\n    add_leap_day: bool,\n    month: u8,\n    day: u8,\n    time: u32,\n    offset: u16,\n    subtract: bool\n}\n\nglobal DATETIME_LENGTH: u32 = 26;\n\n\nglobal MONTHS: [[u8; 3]; 12] = [\n    \"Jan\".as_bytes(),\n    \"Feb\".as_bytes(),\n    \"Mar\".as_bytes(),\n    \"Apr\".as_bytes(),\n    \"May\".as_bytes(),\n    \"Jun\".as_bytes(),\n    \"Jul\".as_bytes(),\n    \"Aug\".as_bytes(),\n    \"Sep\".as_bytes(),\n    \"Oct\".as_bytes(),\n    \"Nov\".as_bytes(),\n    \"Dec\".as_bytes()\n];\n\nglobal DAYS_IN_MONTH: [u32; 12] = [\n    31,\n    28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31\n];\n\n// determines how many chars to skip for long form of month from short\n// i.e Sep -> \"tember\" = 6\nglobal MONTH_LONG_OFFSET: [u32; 12] = [\n    4, // jan-uary\n    5, // feb-ruary\n    2, // mar-ch\n    2, // apr-il\n    0, // may\n    1, // jun-e\n    1, // jul-y\n    3, // aug-ust\n    6, // sep-tember\n    4, // oct-ober\n    5, // nov-ember\n    5, // dec-ember\n];\n\npub fn parse_month(month: [u8; 3]) -> u8 {\n    let mut index = 0;\n    for i in 0..12 {\n        if month == MONTHS[i] {\n            index = i + 1;\n        }\n    }\n    index\n}\n\npub fn compute_leap_years(year: u16) -> u16 {\n    year / 4 - year / 100 + year / 400\n}\n\npub fn is_number_constraint(num: u8) {\n    assert(num >= 0x30);\n    assert(num < 0x3A);\n}\n\npub fn parse_year(year: [u8; 4]) -> (u16, u16) {\n    // range check year\n    for i in 0..year.len() {\n        is_number_constraint(year[i]);\n    }\n    // compute year\n    let mut year = (year[0] as u16 - 0x30) * 1000\n        + (year[1] as u16 - 0x30) * 100\n        + (year[2] as u16 - 0x30) * 10\n        + year[3] as u16\n        - 0x30;\n    // figure out number of leap years\n    let leap_years_since_0000 = compute_leap_years(year - 1);\n    let start_leap_years = compute_leap_years(1970);\n    let leap_years = leap_years_since_0000 - start_leap_years;\n    (year, leap_years)\n}\n\npub fn parse_time(time: [u8; 8]) -> u32 {\n    // check each char\n    is_number_constraint(time[0]);\n    is_number_constraint(time[1]);\n    assert(time[2] == 0x3A);\n    is_number_constraint(time[3]);\n    is_number_constraint(time[4]);\n    assert(time[5] == 0x3A);\n    is_number_constraint(time[6]);\n    is_number_constraint(time[7]);\n    // compute hours, mins, secs\n    let hours = (time[0] as u32 - 0x30) * 10 + time[1] as u32 - 0x30;\n    let mins = (time[3] as u32 - 0x30) * 10 + time[4] as u32 - 0x30;\n    let secs = (time[6] as u32 - 0x30) * 10 + time[7] as u32 - 0x30;\n    // return seconds since midnight\n    hours * 3600 + mins * 60 + secs\n}\n\npub fn parse_offset(offset: [u8; 5]) -> (u16, bool) {\n    // determine whether to add or subtract\n    let mut subtract = false;\n    if offset[0] == 0x2D {\n        subtract = true;\n    } else {\n        assert(offset[0] == 0x2B);\n    }\n    // check each char\n    for i in 1..offset.len() {\n        is_number_constraint(offset[i]);\n    }\n    // parse hours\n    let hours = (offset[1] as u16 - 0x30) * 10 + offset[2] as u16 - 0x30;\n    // parse mins\n    let mins = (offset[3] as u16 - 0x30) * 10 + offset[4] as u16 - 0x30;\n    // return seconds\n    let offset = hours * 3600 + mins * 60;\n    (offset, subtract)\n}\n\npub fn parse_day(dat: [u8; 2]) -> u8 {\n    // check each char\n    is_number_constraint(dat[0]);\n    is_number_constraint(dat[1]);\n    // compute day\n    (dat[0] as u8 - 0x30) * 10 + dat[1] as u8 - 0x30\n}\n\npub fn add_leap_day(year: u16, month: u8) -> bool {\n    // determine if current year is leap year\n    let div_by_4 = (year % 4 == 0) as u1;\n    let div_by_100 = (year % 100 != 0) as u1;\n    let div_by_400 = (year % 400 == 0) as u1;\n    let leap_year = div_by_4 * (1 - (1 - div_by_100) * (1 - div_by_400));\n    // determine if month is past feb\n    let past_feb = (month > 2) as u1;\n\n    (leap_year * past_feb) as bool\n}\n\n/**\n * Parse from an existing month IDX and year bytes\n * @dev code smell i know but need quick fix. can refactor for prettiness in later pass\n * @dev assumes parse_month has already been run\n *\n * @param month_idx - the id of the month from parse_month\n * @param year_bytes - the 4 bytes representing the year\n */\npub fn from_month_and_year(month_idx: u8, year_bytes: [u8; 4]) -> Datetime {\n    let year = parse_year(year_bytes);\n    let add_leap_day = add_leap_day(year.0, month_idx);\n    Datetime { \n        year: year.0,\n        leap_years: year.1,\n        add_leap_day,\n        month: month_idx,\n        day: 0,\n        time: 0,\n        offset: 0,\n        subtract: false\n    }\n}\n\npub fn parse_date_string(date_bytes: [u8; DATETIME_LENGTH]) -> Datetime {\n    // check day shift and set day\n    let day_shift = if date_bytes[1] == 0x20 {\n        (0, [0x30, date_bytes[0]])\n    } else {\n        (1, [date_bytes[0], date_bytes[1]])\n    };\n\n    // parse day\n    let day = parse_day(day_shift.1);\n\n    // parse month\n    let month = parse_month([date_bytes[2 + day_shift.0], date_bytes[3 + day_shift.0], date_bytes[4 + day_shift.0]]);\n    assert(month != 0);\n\n    // parse year\n    let year = parse_year(\n        [\n        date_bytes[6 + day_shift.0],\n        date_bytes[7 + day_shift.0],\n        date_bytes[8 + day_shift.0],\n        date_bytes[9 + day_shift.0]\n    ]\n    );\n    // parse time\n    let time = parse_time(\n        [\n        date_bytes[11 + day_shift.0],\n        date_bytes[12 + day_shift.0],\n        date_bytes[13 + day_shift.0],\n        date_bytes[14 + day_shift.0],\n        date_bytes[15 + day_shift.0],\n        date_bytes[16 + day_shift.0],\n        date_bytes[17 + day_shift.0],\n        date_bytes[18 + day_shift.0]\n    ]\n    );\n    // parse offset\n    let offset = parse_offset(\n        [\n        date_bytes[20 + day_shift.0],\n        date_bytes[21 + day_shift.0],\n        date_bytes[22 + day_shift.0],\n        date_bytes[23 + day_shift.0],\n        date_bytes[24 + day_shift.0]\n    ]\n    );\n    // check if leap day needs to be added\n    let add_leap_day = add_leap_day(year.0, month);\n\n    Datetime { year: year.0, leap_years: year.1, add_leap_day, month, day, time, offset: offset.0, subtract: offset.1 }\n}\n\npub fn to_unix_month(datetime: Datetime) -> u32 {\n    // get number of days in complete years\n    let days_in_complete_years = (datetime.year - 1970) as u32 * 365 + datetime.leap_years as u32;\n    // get number of days in current year\n    let mut days_in_current_year = 0;\n    for i in 0..12 {\n        if i + 1 < datetime.month {\n            days_in_current_year += DAYS_IN_MONTH[i];\n        }\n    }\n    days_in_current_year += datetime.add_leap_day as u32;\n    // return total seconds since epoch (don't factor in the localized timestamp)\n    (days_in_complete_years + days_in_current_year) * 86400 + datetime.time as u32\n}\n\npub fn to_unix(datetime: Datetime) -> u32 {\n    // get number of days in complete years\n    let days_in_complete_years = (datetime.year - 1970) as u32 * 365 + datetime.leap_years as u32;\n    // get number of days in current year\n    let mut days_in_current_year = 0;\n    for i in 0..12 {\n        if i + 1 < datetime.month {\n            days_in_current_year += DAYS_IN_MONTH[i];\n        }\n    }\n    days_in_current_year += (datetime.day + datetime.add_leap_day as u8) as u32;\n    // total seconds since epoch\n    let mut seconds_since_epoch = (days_in_complete_years + days_in_current_year) * 86400 + datetime.time as u32;\n    // apply offset\n    if datetime.subtract {\n        seconds_since_epoch -= datetime.offset as u32;\n    } else {\n        seconds_since_epoch += datetime.offset as u32;\n    }\n    // return unix timestamp\n    seconds_since_epoch\n}\n\n#[test]\nfn test_email_timestamp() {\n    let date_string = \"1 Sep 2024 23:22:12 +0400 \".as_bytes(); // padded 1\n    // its off a lil bit\n    // should be 1725247332\n    // should be 1725333732\n    let date = parse_date_string(date_string);\n    let unix = to_unix(date);\n    println(unix);\n}","path":"/Users/ianbrighton/Documents/Mach34/zimburse/z-imburse/circuits/date_parser/src/lib.nr"},"338":{"source":"use crate::dkim::RSAPubkey;\nuse std::hash::pedersen_hash;\n\npub mod dkim;\npub mod headers;\npub mod masking;\npub mod partial_hash;\npub mod remove_soft_line_breaks;\n// mod macro;\nmod tests;\n\nglobal RSA_EXPONENT: u32 = 65537;\nglobal KEY_LIMBS_1024: u32 = 9;\nglobal KEY_LIMBS_2048: u32 = 18;\nglobal BODY_HASH_BASE64_LENGTH: u32 = 44;\nglobal CR: u8 = 0x0D;\nglobal LF: u8 = 0x0A;\nglobal MAX_DKIM_HEADER_FIELD_LENGTH: u32 = 300; // kinda arbitrary but gives > 100 chars for selector and domain\nglobal MAX_EMAIL_ADDRESS_LENGTH: u32 = 320; // derived via (https://datatracker.ietf.org/doc/html/rfc5321#section-4.5.3.1.1)\n\npub struct Sequence {\n    index: u32,\n    length: u32,\n}\n\nimpl Sequence {\n    pub fn end_index(self) -> u32 {\n        self.index + self.length\n    }\n}\n// allowable chars in an email address (js/src/utils:makeAllowableEmailCharsTable()\n// \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.-@\" = 1\n// \"<: \" = 2\n// \">\\r\\n\" = 3\nglobal EMAIL_ADDRESS_CHAR_TABLE: [u8; 123] = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 2, 0, 3, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n\n/**\n * Default email verification function\n * @dev use #[zkemail] attribute macro to apply other functionality\n *\n * @param MAX_EMAIL_HEADER_LENGTH - The maximum length of the email header\n * @param KEY_LIMBS - The number of limbs in the RSA pubkey\n * @param header - The email header, 0-padded at end to the MAX_EMAIL_HEADER_LENGTH\n * @param pubkey - The DKIM RSA Public Key modulus and reduction parameter\n * @param signature - The DKIM RSA Signature\n */\npub fn verify_email<let MAX_EMAIL_HEADER_LENGTH: u32, let MAX_EMAIL_BODY_LENGTH: u32, // sometimes unused but needed for macro\nlet KEY_LIMBS: u32>(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n) {\n    // ~ 86,553 constraints with 2048-bit RSA & 1024 bit max header length\n    // verify the dkim signature over the header\n    pubkey.verify_dkim_signature(header, signature);\n}\n","path":"/Users/ianbrighton/nargo/github.com/zkemail/zkemail.nr/v0.4.0/lib/src/lib.nr"},"343":{"source":"use crate::{\n    BODY_HASH_BASE64_LENGTH, headers::constrain_header_field, MAX_DKIM_HEADER_FIELD_LENGTH,\n    Sequence,\n};\nuse base64::BASE64_DECODER;\n\n/**\n * Constrained access to the body hash in the header\n * \n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param dkim_header_field_sequence - The sequence of the DKIM header field\n * @param body_hash_index - The index of the body hash in the header\n */\npub fn get_body_hash<let MAX_HEADER_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    dkim_header_field_sequence: Sequence,\n    body_hash_index: u32,\n) -> [u8; 32] {\n    // constrain the access of dkim signature field\n    let header_field_name: [u8; 14] = comptime { \"dkim-signature\".as_bytes() };\n    constrain_header_field::<MAX_HEADER_LENGTH, MAX_DKIM_HEADER_FIELD_LENGTH, 14>(\n        header,\n        dkim_header_field_sequence,\n        header_field_name,\n    );\n    // constrain access to the body hash\n    assert(\n        body_hash_index > dkim_header_field_sequence.index\n            & body_hash_index + BODY_HASH_BASE64_LENGTH < dkim_header_field_sequence.end_index() + 1\n            ,\n            \"Body hash index accessed outside of DKIM header field\",\n        );\n        let bh_prefix: [u8; 5] = comptime { \"; bh=\".as_bytes() };\n        for i in 0..5 {\n            let character = header.get_unchecked(body_hash_index - 5 + i);\n            assert(character == bh_prefix[i], \"No 'bh=' prefix found at asserted bh index\");\n        }\n        let bh_suffix: u8 = comptime { \";\".as_bytes()[0] };\n        assert(\n            header.get_unchecked(body_hash_index + BODY_HASH_BASE64_LENGTH) == bh_suffix,\n            \"No ';' suffix found at asserted bh index\",\n        );\n        // get the body hash\n        get_body_hash_unsafe(header, body_hash_index)\n    }\n\n/**\n * Get the body hash from the header without validating the access index. Does not validate body\n * hash is valid base64 sequence (https://github.com/noir-lang/noir_base64/blob/4431d08ac661ada9d8d18b115487ff0190b43856/src/lib.nr#L209-L232)\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param body_hash_index - The asserted index to find the body hash at\n */\npub fn get_body_hash_unsafe<let MAX_HEADER_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    body_hash_index: u32,\n) -> [u8; 32] {\n    // get the body hash\n    let mut body_hash_encoded: [u8; BODY_HASH_BASE64_LENGTH] = [0; BODY_HASH_BASE64_LENGTH];\n    for i in 0..BODY_HASH_BASE64_LENGTH {\n        body_hash_encoded[i] = header.get_unchecked(body_hash_index + i);\n    }\n    // return the decoded body hash\n    // idk why encode vs decode...\n    BASE64_DECODER.decode(body_hash_encoded)\n}\n","path":"/Users/ianbrighton/nargo/github.com/zkemail/zkemail.nr/v0.4.0/lib/src/headers/body_hash.nr"},"345":{"source":"use crate::{CR, LF, Sequence};\n\npub mod body_hash;\npub mod email_address;\n\n/**\n * Constrain a sequence in a header to be within the correct bounds\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param MAX_HEADER_FIELD_LENGTH - The maximum length of the header field\n * @param HEADER_FIELD_NAME_LENGTH - The length of the header field name\n * @param header - The email header as validated in the DKIM signature\n * @param header_field_sequence - The sequence of the header field\n * @param header_field_name - The name of the header field\n */\nfn check_header_field_bounds<let MAX_HEADER_LENGTH: u32, let MAX_HEADER_FIELD_LENGTH: u32, let HEADER_FIELD_NAME_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) {\n    // check the range of the sequence is within the header (so we can use get_unchecked)\n    let end_index = header_field_sequence.end_index();\n    assert(end_index <= header.len(), \"Header field out of bounds of header\");\n\n    // if the sequence is not the start, check for a newline\n    if header_field_sequence.index != 0 {\n        assert(\n            header.get_unchecked(header_field_sequence.index - 2) == CR,\n            \"Header field must start with CRLF\",\n        );\n        assert(\n            header.get_unchecked(header_field_sequence.index - 1) == LF,\n            \"Header field must start with CRLF\",\n        );\n    }\n\n    // if the sequence is not the end, check for a newline\n    if end_index != header.len() {\n        assert(header.get_unchecked(end_index) == CR, \"Header field must end with CRLF\");\n        assert(header.get_unchecked(end_index + 1) == LF, \"Header field must end with CRLF\");\n    }\n\n    // check that the header field name matches the expected name\n    for i in 0..HEADER_FIELD_NAME_LENGTH {\n        assert(\n            header.get_unchecked(header_field_sequence.index + i) == header_field_name[i],\n            \"Header field name does not match\",\n        );\n    }\n    assert(\n        header.get_unchecked(header_field_sequence.index + HEADER_FIELD_NAME_LENGTH) == 0x3a,\n        \"Header field name must be followed by a colon\",\n    );\n}\n\n/**\n * Constrain a sequence in a header to match the specific header field\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param MAX_HEADER_FIELD_LENGTH - The maximum length of the header field\n * @param HEADER_FIELD_NAME_LENGTH - The length of the header field name\n * @param header - The email header as validated in the DKIM signature\n * @param header_field_sequence - The sequence of the header field\n * @param header_field_name - The name of the header field\n */\npub fn constrain_header_field<let MAX_HEADER_LENGTH: u32, let MAX_HEADER_FIELD_LENGTH: u32, let HEADER_FIELD_NAME_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) {\n    // constrain beginning of header field\n    check_header_field_bounds::<MAX_HEADER_LENGTH, MAX_HEADER_FIELD_LENGTH, HEADER_FIELD_NAME_LENGTH>(\n        header,\n        header_field_sequence,\n        header_field_name,\n    );\n\n    // check the header field is uninterrupted\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in 0..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.end_index()) {\n            assert(header.get_unchecked(index) != CR, \"Header field must not contain newlines\");\n        }\n    }\n}\n\n/**\n * constrain_header_field with checks for the last occurence of \"<\" inside the loop to save constraints\n */\npub fn constrain_header_field_detect_last_angle_bracket<let MAX_HEADER_LENGTH: u32, let MAX_HEADER_FIELD_LENGTH: u32, let HEADER_FIELD_NAME_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) -> u32 {\n    // constrain beginning of header field\n    check_header_field_bounds::<MAX_HEADER_LENGTH, MAX_HEADER_FIELD_LENGTH, HEADER_FIELD_NAME_LENGTH>(\n        header,\n        header_field_sequence,\n        header_field_name,\n    );\n\n    // check the header field is uninterrupted\n    let mut last_angle_bracket = 0;\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in (HEADER_FIELD_NAME_LENGTH + 1)..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.end_index()) {\n            let byte = header.get_unchecked(index);\n            assert(byte != CR, \"Header field must not contain newlines\");\n            if byte == 0x3c {\n                last_angle_bracket = index;\n            }\n        }\n    }\n    last_angle_bracket\n}\n","path":"/Users/ianbrighton/nargo/github.com/zkemail/zkemail.nr/v0.4.0/lib/src/headers/mod.nr"},"350":{"source":"use super::defaults::BASE64_PADDING_CHAR;\n\n/// Standard Base64 Alphabet (base64) with padding.\npub global STANDARD: Base64DecodeBE = Base64DecodeBE::new(true);\n\n/// Standard Base64 Alphabet (base64) without padding.\npub global STANDARD_NO_PAD: Base64DecodeBE = Base64DecodeBE::new(false);\n\n/// URL and Filename Safe Alphabet without padding.\npub global URL_SAFE: Base64DecodeBE = Base64DecodeBE::base64url(false);\n\n/// URL and Filename Safe Alphabet with padding.\npub global URL_SAFE_WITH_PAD: Base64DecodeBE = Base64DecodeBE::base64url(true);\n\n/// Invalid value for the lookup table.\nglobal INVALID_VALUE: u8 = 255;\n\n/// Base64 decoder for big-endian byte arrays.\n///\n/// > Note: If the lookup table is not defined in a struct, access costs are expensive and ROM\n/// tables aren't being used.\nstruct Base64DecodeBE {\n    /// The base64 lookup table.\n    table: [u8; 256],\n    /// Whether the input has padding.\n    pad: bool,\n}\n\nimpl Base64DecodeBE {\n    /// Creates a new decoder that uses the standard Base64 Alphabet (base64) specified in RFC 4648\n    /// (https://datatracker.ietf.org/doc/html/rfc4648#section-4).\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `pad`: Whether the input has padding.\n    ///\n    /// ## Returns\n    ///\n    /// The Base64 decoder instance.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let decoder = Base64DecodeBE::new(true);\n    /// ```\n    fn new(pad: bool) -> Self {\n        Base64DecodeBE {\n            table: [\n                // 0-42\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                62, // 43\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 44-46\n                63, // 47\n                52,\n                53,\n                54,\n                55,\n                56,\n                57,\n                58,\n                59,\n                60,\n                61, // 48-57\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 58-64\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20,\n                21,\n                22,\n                23,\n                24,\n                25, // 65-90 (A-Z)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 91-96\n                26,\n                27,\n                28,\n                29,\n                30,\n                31,\n                32,\n                33,\n                34,\n                35,\n                36,\n                37,\n                38,\n                39,\n                40,\n                41,\n                42,\n                43,\n                44,\n                45,\n                46,\n                47,\n                48,\n                49,\n                50,\n                51, // 97-122 (a-z)\n                // 123-255\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n            ],\n            pad,\n        }\n    }\n\n    /// Creates a new decoder that uses the URL and Filename Safe Alphabet specified in RFC 4648\n    /// (https://datatracker.ietf.org/doc/html/rfc4648#section-5).\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `pad`: Whether the input has padding.\n    ///\n    /// ## Returns\n    ///\n    /// The Base64 decoder instance.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let decoder = Base64DecodeBE::base64url(true);\n    /// ```\n    fn base64url(pad: bool) -> Self {\n        Base64DecodeBE {\n            table: [\n                // 0-44 (no mapping)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                62, // 45 (-)\n                INVALID_VALUE,\n                INVALID_VALUE, // 46-47 (no mapping)\n                52,\n                53,\n                54,\n                55,\n                56,\n                57,\n                58,\n                59,\n                60,\n                61, // 48-57 (0-9)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 58-64 (no mapping)\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20,\n                21,\n                22,\n                23,\n                24,\n                25, // 65-90 (A-Z)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 91-94 (no mapping)\n                63, // 95 (_)\n                INVALID_VALUE, // 96 (no mapping)\n                26,\n                27,\n                28,\n                29,\n                30,\n                31,\n                32,\n                33,\n                34,\n                35,\n                36,\n                37,\n                38,\n                39,\n                40,\n                41,\n                42,\n                43,\n                44,\n                45,\n                46,\n                47,\n                48,\n                49,\n                50,\n                51, // 97-122 (a-z)\n                // 123-255\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n            ],\n            pad,\n        }\n    }\n\n    /// Gets the lookup table value at a given index.\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `idx`: The index to get the value for.\n    ///\n    /// ## Returns\n    ///\n    /// The value from the lookup table.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let value = Base64DecodeBE::new(true).get(65);\n    /// ```\n    fn get(self, idx: Field) -> u8 {\n        self.table[idx]\n    }\n\n    /// Converts an array of ASCII values into a packed byte array of base64 values.\n    ///\n    /// > Note: Each Base64 value is 6 bits. This method will produce a byte array where data is\n    /// > concatenated so that there are no sparse bits (e.g. encoding 4 ASCII values produces 24\n    /// > bits of Base64 data = 3 bytes of output data).\n    ///\n    /// ## Type Parameters\n    ///\n    /// - `InputElements`: The number of input elements.\n    /// - `OutputBytes`: The number of output bytes.\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `self`: The Base64 decoder instance.\n    /// - `input`: The input array.\n    ///\n    /// ## Constraints\n    ///\n    /// - input and output lengths are correct, including padding.\n    ///\n    /// ## Returns\n    ///\n    /// The packed byte array of base64 values.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let result = Decoder::new(false).decode::<4, 3>([65, 66, 67, 68]);\n    /// ```\n    pub fn decode<let InputElements: u32, let OutputBytes: u32>(\n        self,\n        input: [u8; InputElements],\n    ) -> [u8; OutputBytes] {\n        let rem = OutputBytes % 3;\n        // Calculate the number of padding characters and the length of the input without padding\n        let num_padding_chars = if rem == 1 {\n            2\n        } else if rem == 2 {\n            1\n        } else {\n            0\n        };\n\n        // Assert that the output length & input length are correct\n        // Every 3 output chars will be encoded as 4 base64 input chars\n        let encoded_length = (OutputBytes + 2) / 3 * 4; // ceil(input * 4 / 3)\n        if self.pad {\n            assert(\n                encoded_length == InputElements,\n                f\"DecodeError: invalid input length for specified output length. Expected {encoded_length} input elements, but got {InputElements}.\",\n            );\n            // enforce Base64 padding is valid\n            if num_padding_chars == 2 {\n                assert(input[InputElements - 1] == BASE64_PADDING_CHAR);\n                assert(input[InputElements - 2] == BASE64_PADDING_CHAR);\n            } else if num_padding_chars == 1 {\n                assert(input[InputElements - 1] == BASE64_PADDING_CHAR);\n            }\n        } else {\n            let expected = encoded_length - num_padding_chars;\n            assert(\n                encoded_length - num_padding_chars == InputElements,\n                f\"DecodeError: invalid input length for specified output length. Expected {expected} input elements, but got {InputElements}.\",\n            );\n        }\n\n        // 240 bits fits 40 6-bit chunks and 30 8-bit chunks\n        // we pack 40 base64 values into a field element and convert into 30 bytes\n        // TODO: once we support arithmetic ops on generics, derive OutputBytes from InputBytes\n        let mut result: [u8; OutputBytes] = [0; OutputBytes];\n        let BASE64_ELEMENTS_PER_CHUNK: u32 = 40;\n        let BYTES_PER_CHUNK: u32 = 30;\n        let num_chunks = (InputElements / BASE64_ELEMENTS_PER_CHUNK)\n            + (InputElements % BASE64_ELEMENTS_PER_CHUNK != 0) as u32;\n\n        if num_chunks > 0 {\n            let final_chunk = num_chunks - 1;\n\n            for i in 0..final_chunk {\n                let mut slice: Field = 0;\n                for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n                    slice *= 64;\n                    let offset = i * BASE64_ELEMENTS_PER_CHUNK + j;\n                    let input_byte = input[offset];\n                    let decoded = self.get(input_byte as Field);\n                    assert(\n                        decoded != INVALID_VALUE,\n                        f\"DecodeError: invalid symbol {input_byte}, offset {offset}.\",\n                    );\n                    slice += decoded as Field;\n                }\n                let slice_bytes: [u8; 30] = slice.to_be_bytes();\n                for j in 0..BYTES_PER_CHUNK {\n                    result[i * BYTES_PER_CHUNK + j] = slice_bytes[j];\n                }\n            }\n\n            // process the final chunk, which may contain padding\n            let base64_offset: u32 = final_chunk * BASE64_ELEMENTS_PER_CHUNK;\n            let byte_offset = final_chunk * BYTES_PER_CHUNK;\n            let base64_elements_in_final_chunk = if self.pad {\n                InputElements - base64_offset - num_padding_chars\n            } else {\n                InputElements - base64_offset\n            };\n\n            // pack the base64 values into the field element\n            let mut slice: Field = 0;\n            for j in 0..base64_elements_in_final_chunk {\n                slice *= 64;\n                let offset = base64_offset + j;\n                let input_byte = input[offset];\n                let decoded = self.get(input_byte as Field);\n                assert(\n                    decoded != INVALID_VALUE,\n                    f\"DecodeError: invalid symbol {input_byte}, offset {offset}.\",\n                );\n                slice += decoded as Field;\n            }\n            for _ in base64_elements_in_final_chunk..BASE64_ELEMENTS_PER_CHUNK {\n                slice *= 64;\n            }\n\n            // TODO: check is it cheaper to use a constant value in `to_be_bytes` or can we use `bytes_in_final_chunk`?\n            // extract the bytes from the Field element\n            let slice_bytes: [u8; 30] = slice.to_be_bytes();\n            let num_bytes_in_final_chunk = OutputBytes - byte_offset;\n            for i in 0..num_bytes_in_final_chunk {\n                result[byte_offset + i] = slice_bytes[i];\n            }\n        }\n\n        result\n    }\n}\n\n#[test]\nfn test_decode_empty() {\n    let input: [u8; 0] = [];\n    let expected: [u8; 0] = [];\n    let result = STANDARD.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_padding() {\n    // f\n    let input: [u8; 4] = [90, 103, 61, 61];\n    let expected: [u8; 1] = [102];\n    let result = STANDARD.decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 4] = [90, 109, 56, 61];\n    let expected: [u8; 2] = [102, 111];\n    let result = STANDARD.decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = STANDARD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard_no_pad() {\n    // f\n    let input: [u8; 2] = [90, 103];\n    let expected: [u8; 1] = [102];\n    let result = STANDARD_NO_PAD.decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 3] = [90, 109, 56];\n    let expected: [u8; 2] = [102, 111];\n    let result = STANDARD_NO_PAD.decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = STANDARD_NO_PAD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_max_byte() {\n    let expected: [u8; 1] = [255];\n\n    let input: [u8; 4] = [47, 119, 61, 61]; // \"/w==\"\n    let result: [u8; 1] = STANDARD.decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [47, 119]; // \"/w\"\n    let result: [u8; 1] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n\n    let input: [u8; 4] = [95, 119, 61, 61]; // \"_w==\"\n    let result: [u8; 1] = URL_SAFE_WITH_PAD.decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [95, 119]; // \"_w\"\n    let result: [u8; 1] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 255, offset 0\")]\nfn test_decode_invalid() {\n    let input: [u8; 2] = [255, 255];\n    let _: [u8; 1] = STANDARD_NO_PAD.decode(input);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_standard_no_pad_fail_with_padding() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = STANDARD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 95, offset 0\")]\nfn test_decode_underscore_with_standard() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let _: [u8; 2] = STANDARD.decode(input);\n}\n\n#[test]\nfn test_decode_url_safe_with_pad() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = URL_SAFE_WITH_PAD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 47, offset 0\")]\nfn test_decode_slash_with_url_safe() {\n    // test decoding / and +\n    let input: [u8; 3] = [47, 43, 65];\n    let _: [u8; 2] = URL_SAFE.decode(input);\n}\n\n#[test]\nfn test_decode_url_safe() {\n    // test decoding _ and -\n    let input: [u8; 3] = [95, 45, 65];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = URL_SAFE.decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_url_safe_no_pad_fail_with_padding() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_ascii() {\n    // base64: SGVsbG8gV29ybGQh\n    let input: [u8; 16] = [83, 71, 86, 115, 98, 71, 56, 103, 86, 50, 57, 121, 98, 71, 81, 104];\n    // \"Hello World!\"\n    let expected: [u8; 12] = [72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33];\n\n    // all configurations should decode the same way\n    let result: [u8; 12] = STANDARD.decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = URL_SAFE_WITH_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_utf8() {\n    // base64: 44GT44KT44Gr44Gh44Gv44CB5LiW55WM77yB\n    let input: [u8; 36] = [\n        52, 52, 71, 84, 52, 52, 75, 84, 52, 52, 71, 114, 52, 52, 71, 104, 52, 52, 71, 118, 52, 52,\n        67, 66, 53, 76, 105, 87, 53, 53, 87, 77, 55, 55, 121, 66,\n    ];\n    // non-ascii utf-8: \"Hello, World!\" in Japanese\n    let expected: [u8; 27] = [\n        227, 129, 147, 227, 130, 147, 227, 129, 171, 227, 129, 161, 227, 129, 175, 227, 128, 129,\n        228, 184, 150, 231, 149, 140, 239, 188, 129,\n    ];\n\n    // all configurations should decode the same way\n    let result: [u8; 27] = STANDARD.decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = URL_SAFE_WITH_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_multi_chunks() {\n    let expected = \"The quick brown fox jumps over the lazy dog, while 42 ravens perch atop a rusty mailbox. Zany quilters fabricate 9 cozy blankets, as 3 jovial wizards expertly mix 5 potent elixirs. Bright neon signs flash \\\"OPEN 24/7\\\" in the misty night air, illuminating 8 vintage cars parked along Main Street. A gentle breeze carries the aroma of fresh coffee and warm cinnamon rolls from Joe's Diner, enticing 6 sleepy truckers to stop for a late-night snack. Meanwhile, 11 mischievous kittens playfully chase a ball of yarn across Mrs. Johnson's porch, their antics observed by 2 wise old owls perched on a nearby oak tree.\";\n\n    let input: [u8; 816] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 119, 103, 100, 50,\n        104, 112, 98, 71, 85, 103, 78, 68, 73, 103, 99, 109, 70, 50, 90, 87, 53, 122, 73, 72, 66,\n        108, 99, 109, 78, 111, 73, 71, 70, 48, 98, 51, 65, 103, 89, 83, 66, 121, 100, 88, 78, 48,\n        101, 83, 66, 116, 89, 87, 108, 115, 89, 109, 57, 52, 76, 105, 66, 97, 89, 87, 53, 53, 73,\n        72, 70, 49, 97, 87, 120, 48, 90, 88, 74, 122, 73, 71, 90, 104, 89, 110, 74, 112, 89, 50, 70,\n        48, 90, 83, 65, 53, 73, 71, 78, 118, 101, 110, 107, 103, 89, 109, 120, 104, 98, 109, 116,\n        108, 100, 72, 77, 115, 73, 71, 70, 122, 73, 68, 77, 103, 97, 109, 57, 50, 97, 87, 70, 115,\n        73, 72, 100, 112, 101, 109, 70, 121, 90, 72, 77, 103, 90, 88, 104, 119, 90, 88, 74, 48, 98,\n        72, 107, 103, 98, 87, 108, 52, 73, 68, 85, 103, 99, 71, 57, 48, 90, 87, 53, 48, 73, 71, 86,\n        115, 97, 88, 104, 112, 99, 110, 77, 117, 73, 69, 74, 121, 97, 87, 100, 111, 100, 67, 66,\n        117, 90, 87, 57, 117, 73, 72, 78, 112, 90, 50, 53, 122, 73, 71, 90, 115, 89, 88, 78, 111,\n        73, 67, 74, 80, 85, 69, 86, 79, 73, 68, 73, 48, 76, 122, 99, 105, 73, 71, 108, 117, 73, 72,\n        82, 111, 90, 83, 66, 116, 97, 88, 78, 48, 101, 83, 66, 117, 97, 87, 100, 111, 100, 67, 66,\n        104, 97, 88, 73, 115, 73, 71, 108, 115, 98, 72, 86, 116, 97, 87, 53, 104, 100, 71, 108, 117,\n        90, 121, 65, 52, 73, 72, 90, 112, 98, 110, 82, 104, 90, 50, 85, 103, 89, 50, 70, 121, 99,\n        121, 66, 119, 89, 88, 74, 114, 90, 87, 81, 103, 89, 87, 120, 118, 98, 109, 99, 103, 84, 87,\n        70, 112, 98, 105, 66, 84, 100, 72, 74, 108, 90, 88, 81, 117, 73, 69, 69, 103, 90, 50, 86,\n        117, 100, 71, 120, 108, 73, 71, 74, 121, 90, 87, 86, 54, 90, 83, 66, 106, 89, 88, 74, 121,\n        97, 87, 86, 122, 73, 72, 82, 111, 90, 83, 66, 104, 99, 109, 57, 116, 89, 83, 66, 118, 90,\n        105, 66, 109, 99, 109, 86, 122, 97, 67, 66, 106, 98, 50, 90, 109, 90, 87, 85, 103, 89, 87,\n        53, 107, 73, 72, 100, 104, 99, 109, 48, 103, 89, 50, 108, 117, 98, 109, 70, 116, 98, 50, 52,\n        103, 99, 109, 57, 115, 98, 72, 77, 103, 90, 110, 74, 118, 98, 83, 66, 75, 98, 50, 85, 110,\n        99, 121, 66, 69, 97, 87, 53, 108, 99, 105, 119, 103, 90, 87, 53, 48, 97, 87, 78, 112, 98,\n        109, 99, 103, 78, 105, 66, 122, 98, 71, 86, 108, 99, 72, 107, 103, 100, 72, 74, 49, 89, 50,\n        116, 108, 99, 110, 77, 103, 100, 71, 56, 103, 99, 51, 82, 118, 99, 67, 66, 109, 98, 51, 73,\n        103, 89, 83, 66, 115, 89, 88, 82, 108, 76, 87, 53, 112, 90, 50, 104, 48, 73, 72, 78, 117,\n        89, 87, 78, 114, 76, 105, 66, 78, 90, 87, 70, 117, 100, 50, 104, 112, 98, 71, 85, 115, 73,\n        68, 69, 120, 73, 71, 49, 112, 99, 50, 78, 111, 97, 87, 86, 50, 98, 51, 86, 122, 73, 71, 116,\n        112, 100, 72, 82, 108, 98, 110, 77, 103, 99, 71, 120, 104, 101, 87, 90, 49, 98, 71, 120, 53,\n        73, 71, 78, 111, 89, 88, 78, 108, 73, 71, 69, 103, 89, 109, 70, 115, 98, 67, 66, 118, 90,\n        105, 66, 53, 89, 88, 74, 117, 73, 71, 70, 106, 99, 109, 57, 122, 99, 121, 66, 78, 99, 110,\n        77, 117, 73, 69, 112, 118, 97, 71, 53, 122, 98, 50, 52, 110, 99, 121, 66, 119, 98, 51, 74,\n        106, 97, 67, 119, 103, 100, 71, 104, 108, 97, 88, 73, 103, 89, 87, 53, 48, 97, 87, 78, 122,\n        73, 71, 57, 105, 99, 50, 86, 121, 100, 109, 86, 107, 73, 71, 74, 53, 73, 68, 73, 103, 100,\n        50, 108, 122, 90, 83, 66, 118, 98, 71, 81, 103, 98, 51, 100, 115, 99, 121, 66, 119, 90, 88,\n        74, 106, 97, 71, 86, 107, 73, 71, 57, 117, 73, 71, 69, 103, 98, 109, 86, 104, 99, 109, 74,\n        53, 73, 71, 57, 104, 97, 121, 66, 48, 99, 109, 86, 108, 76, 103, 61, 61,\n    ];\n    let result: [u8; 610] = STANDARD.decode(input);\n    assert(result == expected.as_bytes());\n\n    let input: [u8; 814] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 119, 103, 100, 50,\n        104, 112, 98, 71, 85, 103, 78, 68, 73, 103, 99, 109, 70, 50, 90, 87, 53, 122, 73, 72, 66,\n        108, 99, 109, 78, 111, 73, 71, 70, 48, 98, 51, 65, 103, 89, 83, 66, 121, 100, 88, 78, 48,\n        101, 83, 66, 116, 89, 87, 108, 115, 89, 109, 57, 52, 76, 105, 66, 97, 89, 87, 53, 53, 73,\n        72, 70, 49, 97, 87, 120, 48, 90, 88, 74, 122, 73, 71, 90, 104, 89, 110, 74, 112, 89, 50, 70,\n        48, 90, 83, 65, 53, 73, 71, 78, 118, 101, 110, 107, 103, 89, 109, 120, 104, 98, 109, 116,\n        108, 100, 72, 77, 115, 73, 71, 70, 122, 73, 68, 77, 103, 97, 109, 57, 50, 97, 87, 70, 115,\n        73, 72, 100, 112, 101, 109, 70, 121, 90, 72, 77, 103, 90, 88, 104, 119, 90, 88, 74, 48, 98,\n        72, 107, 103, 98, 87, 108, 52, 73, 68, 85, 103, 99, 71, 57, 48, 90, 87, 53, 48, 73, 71, 86,\n        115, 97, 88, 104, 112, 99, 110, 77, 117, 73, 69, 74, 121, 97, 87, 100, 111, 100, 67, 66,\n        117, 90, 87, 57, 117, 73, 72, 78, 112, 90, 50, 53, 122, 73, 71, 90, 115, 89, 88, 78, 111,\n        73, 67, 74, 80, 85, 69, 86, 79, 73, 68, 73, 48, 76, 122, 99, 105, 73, 71, 108, 117, 73, 72,\n        82, 111, 90, 83, 66, 116, 97, 88, 78, 48, 101, 83, 66, 117, 97, 87, 100, 111, 100, 67, 66,\n        104, 97, 88, 73, 115, 73, 71, 108, 115, 98, 72, 86, 116, 97, 87, 53, 104, 100, 71, 108, 117,\n        90, 121, 65, 52, 73, 72, 90, 112, 98, 110, 82, 104, 90, 50, 85, 103, 89, 50, 70, 121, 99,\n        121, 66, 119, 89, 88, 74, 114, 90, 87, 81, 103, 89, 87, 120, 118, 98, 109, 99, 103, 84, 87,\n        70, 112, 98, 105, 66, 84, 100, 72, 74, 108, 90, 88, 81, 117, 73, 69, 69, 103, 90, 50, 86,\n        117, 100, 71, 120, 108, 73, 71, 74, 121, 90, 87, 86, 54, 90, 83, 66, 106, 89, 88, 74, 121,\n        97, 87, 86, 122, 73, 72, 82, 111, 90, 83, 66, 104, 99, 109, 57, 116, 89, 83, 66, 118, 90,\n        105, 66, 109, 99, 109, 86, 122, 97, 67, 66, 106, 98, 50, 90, 109, 90, 87, 85, 103, 89, 87,\n        53, 107, 73, 72, 100, 104, 99, 109, 48, 103, 89, 50, 108, 117, 98, 109, 70, 116, 98, 50, 52,\n        103, 99, 109, 57, 115, 98, 72, 77, 103, 90, 110, 74, 118, 98, 83, 66, 75, 98, 50, 85, 110,\n        99, 121, 66, 69, 97, 87, 53, 108, 99, 105, 119, 103, 90, 87, 53, 48, 97, 87, 78, 112, 98,\n        109, 99, 103, 78, 105, 66, 122, 98, 71, 86, 108, 99, 72, 107, 103, 100, 72, 74, 49, 89, 50,\n        116, 108, 99, 110, 77, 103, 100, 71, 56, 103, 99, 51, 82, 118, 99, 67, 66, 109, 98, 51, 73,\n        103, 89, 83, 66, 115, 89, 88, 82, 108, 76, 87, 53, 112, 90, 50, 104, 48, 73, 72, 78, 117,\n        89, 87, 78, 114, 76, 105, 66, 78, 90, 87, 70, 117, 100, 50, 104, 112, 98, 71, 85, 115, 73,\n        68, 69, 120, 73, 71, 49, 112, 99, 50, 78, 111, 97, 87, 86, 50, 98, 51, 86, 122, 73, 71, 116,\n        112, 100, 72, 82, 108, 98, 110, 77, 103, 99, 71, 120, 104, 101, 87, 90, 49, 98, 71, 120, 53,\n        73, 71, 78, 111, 89, 88, 78, 108, 73, 71, 69, 103, 89, 109, 70, 115, 98, 67, 66, 118, 90,\n        105, 66, 53, 89, 88, 74, 117, 73, 71, 70, 106, 99, 109, 57, 122, 99, 121, 66, 78, 99, 110,\n        77, 117, 73, 69, 112, 118, 97, 71, 53, 122, 98, 50, 52, 110, 99, 121, 66, 119, 98, 51, 74,\n        106, 97, 67, 119, 103, 100, 71, 104, 108, 97, 88, 73, 103, 89, 87, 53, 48, 97, 87, 78, 122,\n        73, 71, 57, 105, 99, 50, 86, 121, 100, 109, 86, 107, 73, 71, 74, 53, 73, 68, 73, 103, 100,\n        50, 108, 122, 90, 83, 66, 118, 98, 71, 81, 103, 98, 51, 100, 115, 99, 121, 66, 119, 90, 88,\n        74, 106, 97, 71, 86, 107, 73, 71, 57, 117, 73, 71, 69, 103, 98, 109, 86, 104, 99, 109, 74,\n        53, 73, 71, 57, 104, 97, 121, 66, 48, 99, 109, 86, 108, 76, 103,\n    ];\n    let result = STANDARD_NO_PAD.decode(input);\n    assert(result == expected.as_bytes());\n}\n\n#[test]\nfn test_decode_with_padding() {\n    // Raw bh: GxMlgwLiypnVrE2C0Sf4yzhcWTkAhSZ5+WERhKhXtlU=\n    // Translated directly to ASCII\n    let input: [u8; 44] = [\n        71, 120, 77, 108, 103, 119, 76, 105, 121, 112, 110, 86, 114, 69, 50, 67, 48, 83, 102, 52,\n        121, 122, 104, 99, 87, 84, 107, 65, 104, 83, 90, 53, 43, 87, 69, 82, 104, 75, 104, 88, 116,\n        108, 85, 61,\n    ];\n\n    let result: [u8; 32] = STANDARD.decode(input);\n    let expected: [u8; 32] = [\n        27, 19, 37, 131, 2, 226, 202, 153, 213, 172, 77, 130, 209, 39, 248, 203, 56, 92, 89, 57, 0,\n        133, 38, 121, 249, 97, 17, 132, 168, 87, 182, 85,\n    ];\n    assert(result == expected);\n}\n","path":"/Users/ianbrighton/nargo/github.com/noir-lang/noir_base64/v0.3.1/src/decoder.nr"}},"names":["main"],"brillig_names":["build_msg_block","attach_len_to_msg_block","decompose_hint","directive_integer_quotient","directive_invert","directive_to_radix"]}