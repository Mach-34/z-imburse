{"noir_version":"0.35.0+2a0d211b92d002fa75855d4ba27267f8892dd52c","hash":2203448345323853036,"abi":{"parameters":[{"name":"header","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":640,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"pubkey","type":{"kind":"struct","path":"zimburse_verifiers::zkemail::dkim::RSAPubkey","fields":[{"name":"modulus","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"redc","type":{"kind":"array","length":18,"type":{"kind":"field"}}}]},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"dkim_header_sequence","type":{"kind":"struct","path":"zimburse_verifiers::zkemail::Sequence","fields":[{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"from_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"subject_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"amount_sequence","type":{"kind":"struct","path":"zimburse_verifiers::zkemail::Sequence","fields":[{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"date_sequence","type":{"kind":"struct","path":"zimburse_verifiers::zkemail::Sequence","fields":[{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"airport_sequence","type":{"kind":"struct","path":"zimburse_verifiers::zkemail::Sequence","fields":[{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"partial_body_hash","type":{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},"visibility":"private"},{"name":"body_amount_selection","type":{"kind":"array","length":256,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"partial_body_hash_date","type":{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},"visibility":"private"},{"name":"body_date_selection","type":{"kind":"array","length":320,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"tuple","fields":[{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},{"kind":"array","length":3,"type":{"kind":"field"}}]},"visibility":"public"},"error_types":{}},"bytecode":"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PAk6wI0xGHgSbCxyEkTqFyJ6EgwhnQQrhRMLrkQ4CVa2/CRo+q4schIMdmtFnwSRaxRKOgmG/gsnwS3AL/itwC/4bcCT4HbBk2CYm9cqd58Ew9I5CVbxw0lQwSgZDXYTkZPgduBJMAy4MVYBngSbiJwEkfpVFT0JViWdBJ8JJxb8DOEkWM3yk6Dpu5rISbCKWyv6JIhco2dJJ8Fn3ZOg+blwpn9+yfuOfnyBoO9/Tcz3jwd8/6TU9x8aMT/n8fk5h8/PmX1+9v4PmJmfr/r8fMHn51M+Px/x+Xm/z88DfH7+xufnb31+Hujz83c+Pw/y+Xmwz8/fuz8/56m3uud93qyH563heV/0vDU970vh//kCHupj0rUeU63zvOs97wbPu9HzbvK8mz3vr553i+fd6nm3ed7tnneH593peXd53t2ed4/n3et593ne3zzvfs97wPP+7nkPet5Dnvew5z3ieY963mOe97jnPeF5T3reU573tOc943nPet5znve8573geS963kue97Ln/cPzXvG8Vz3vNc/7p+e97nlveN6bnveW573tee943r8y/8dA93jezJ43i+fN6nnv9bzZPG92z5vD8+b0vLk8732e937Pm9vz5vG8eT1vPs/7gOfN73kLeN6CnreQ533Q8xb2vEU870Oet6jnLeZ5H/a8j3je4p73Uc9bwvOW9LyPed5Snre0533c85bxvGU97xOet5znLe95n/S8FTzvU573ac9b0fMGeV7H8wZ73hDPW8nzVva8oZ43zPNW8bxVPe8znrea533W8z7neat73uc97wuet4bnfdHz1vS8L3neWp63tud92fO+4nnreN5XPW9dz1vP89b3vK953gae93XP+4bnbeh53/S8b3neRp73bc/b2PO+43mbeN6mnvddz/ue523med/3vM09bwvP29LztvK8rT1vG8/b1vO287ztPW+4543wvJGeN8rzRnveGM8b63njPG+8503wvImeN8nzJnveDp43xfOmet40z9vR83byvB943g89b2fP+5Hn/djzdvG8n3jerp63m+f91PN297w9PG9Pz9vL8/b2vJ953j6e93PP29fz9vO8X3jeLz1vf8/7lef92vMO8LzfeN5vPe9Az/ud5x3keQd73u897xDPO9TzDvO8wz3vCM870vOO8rw/eN7RnneM5/3R8471vOM873jPO8Hz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","debug_symbols":"","file_map":{"6":{"source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(s, quote { Eq }, signature, for_each_field, quote { & }, body)\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N] where T: Eq {\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T] where T: Eq {\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B) where A: Eq, B: Eq {\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C) where A: Eq, B: Eq, C: Eq {\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D) where A: Eq, B: Eq, C: Eq, D: Eq {\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E) where A: Eq, B: Eq, C: Eq, D: Eq, E: Eq {\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B) where A: Ord, B: Ord {\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C) where A: Ord, B: Ord, C: Ord {\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D) where A: Ord, B: Ord, C: Ord, D: Ord {\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E) where A: Ord, B: Ord, C: Ord, D: Ord, E: Ord {\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v1 } else { v2 }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v2 } else { v1 }\n}\n\nmod cmp_tests {\n    use crate::cmp::{min, max};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n","path":"std/cmp.nr"},"7":{"source":"use crate::{cmp::Eq, convert::From};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n/// \n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n/// \n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n/// \n/// Example:\n/// \n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a \n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    /// \n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    /// \n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    /// \n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure. \n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    /// \n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    /// \n    /// Panics if the new length of the vector will be greater than the max length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// \n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    /// \n    /// v.push(100);\n    /// assert(v.len() == 1);\n    /// \n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    /// \n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    /// \n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    /// \n    /// Note that uninitialized elements may be zeroed out!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    /// \n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    /// \n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    /// \n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input. \n    /// The maximum length of the vector is determined based on the type signature.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    /// \n    /// Panics if the vector is empty.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// let two = v.pop();\n    /// let one = v.pop();\n    /// \n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    /// \n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.  \n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    /// \n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n        for i in 0..MaxLen {\n            if i < self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        }\n        ret\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen> where T: Eq {\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n\n        (self.len == other.len) & (self.storage == other.storage)\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2)  as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.storage()[2], 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n            assert_eq(bounded_vec.storage()[2], 3);\n        }\n\n        #[test(should_fail_with=\"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n}\n","path":"std/collections/bounded_vec.nr"},"25":{"source":"use crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let mut offset = 1;\n    for i in 0..16 {\n        low += (x_bytes[i] as Field) * offset;\n        high += (x_bytes[i + 16] as Field) * offset;\n        offset *= 256;\n    }\n\n    (low, high)\n}\n\nunconstrained pub(crate) fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nfn compute_lt(x: Field, y: Field, num_bytes: u32) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i];\n            let y_byte = y_bytes[num_bytes - 1 - i];\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nfn compute_lte(x: Field, y: Field, num_bytes: u32) -> bool {\n    if x == y {\n        true\n    } else {\n        compute_lt(x, y, num_bytes)\n    }\n}\n\nunconstrained fn lt_32_hint(x: Field, y: Field) -> bool {\n    compute_lt(x, y, 32)\n}\n\nunconstrained fn lte_16_hint(x: Field, y: Field) -> bool {\n    compute_lte(x, y, 16)\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    unsafe {\n        let borrow = lte_16_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size(128);\n        rhi.assert_max_bit_size(128);\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size(128);\n            xhi.assert_max_bit_size(128);\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(compute_lt(b, a, 32));\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        compute_lt(b, a, 32)\n    } else if a == b {\n        false\n    } else {\n        // Take a hint of the comparison and verify it\n        unsafe {\n            if lt_32_hint(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{decompose, compute_lt, assert_gt, gt, TWO_POW_128, compute_lte, PLO, PHI};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    fn check_compute_lt() {\n        assert(compute_lt(0, 1, 16));\n        assert(compute_lt(0, 0x100, 16));\n        assert(compute_lt(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lt(0, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_compute_lte() {\n        assert(compute_lte(0, 1, 16));\n        assert(compute_lte(0, 0x100, 16));\n        assert(compute_lte(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lte(0, TWO_POW_128, 16));\n\n        assert(compute_lte(0, 0, 16));\n        assert(compute_lte(0x100, 0x100, 16));\n        assert(compute_lte(TWO_POW_128 - 1, TWO_POW_128 - 1, 16));\n        assert(compute_lte(TWO_POW_128, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"26":{"source":"pub mod bn254;\nuse bn254::lt as bn254_lt;\nuse crate::runtime::is_unconstrained;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size(self, bit_size: u32) {\n        // docs:end:assert_max_bit_size\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n     // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self', \n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let  p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self', \n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let  p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N-1-i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..32 {\n        if (!done) {\n            let x_byte = x_bytes[32 - 1 - i] as u8;\n            let y_byte = y_bytes[32 - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nmod tests {\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_bytes();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bits), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_bytes();\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bits), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bits), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bits), field);\n    }\n    // docs:end:to_le_radix_example\n}\n","path":"std/field/mod.nr"},"35":{"source":"use crate::runtime::is_unconstrained;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:sha256\n{\n    digest(input)\n}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: [u32; 16], _state: [u32; 8]) -> [u32; 8] {}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> [u8; 32] {\n    sha256_var(msg, N as u64)\n}\n\n// Convert 64-byte array to array of 16 u32s\nfn msg_u8_to_u32(msg: [u8; 64]) -> [u32; 16] {\n    let mut msg32: [u32; 16] = [0; 16];\n\n    for i in 0..16 {\n        let mut msg_field: Field = 0;\n        for j in 0..4 {\n            msg_field = msg_field * 256 + msg[64 - 4*(i + 1) + j] as Field;\n        }\n        msg32[15 - i] = msg_field as u32;\n    }\n\n    msg32\n}\n\nunconstrained fn build_msg_block_iter<let N: u32>(msg: [u8; N], message_size: u32, msg_start: u32) -> ([u8; 64], u32) {\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n    for k in 0..block_input {\n        msg_block[k] = msg[msg_start + k];\n    }\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: [u8; 64],\n    msg_start: u32\n) -> u32 {\n    let mut msg_byte_ptr: u32 = 0; // Message byte pointer\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n\n    for k in msg_start..msg_end {\n        if k < message_size {\n            assert_eq(msg_block[msg_byte_ptr], msg[k]);\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\nglobal BLOCK_SIZE = 64;\nglobal ZERO = 0;\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> [u8; 32] {\n    let message_size = message_size as u32;\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut h: [u32; 8] = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]; // Intermediate hash, starting with the canonical initial value\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    msg_block[msg_byte_ptr] = 1 << 7;\n    let last_block = msg_block;\n    msg_byte_ptr = msg_byte_ptr + 1;\n\n    unsafe {\n        let (new_msg_block, new_msg_byte_ptr) = pad_msg_block(msg_block, msg_byte_ptr);\n        msg_block = new_msg_block;\n        if crate::runtime::is_unconstrained() {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..BLOCK_SIZE {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n\n        // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n        // the 1 and 0s fill up the current block, which we then compress accordingly.\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for _i in 57..BLOCK_SIZE {\n            if msg_byte_ptr <= 63 & msg_byte_ptr >= 57 {\n                assert_eq(msg_block[msg_byte_ptr], zero);\n                msg_byte_ptr += 1;\n            }\n        }\n    }\n\n    if msg_byte_ptr >= 57 {\n        h = sha256_compression(msg_u8_to_u32(msg_block), h);\n\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe {\n        attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size)\n    };\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..56 {\n            let predicate = (i < msg_byte_ptr) as u8;\n            let expected_byte = predicate * last_block[i];\n            assert_eq(msg_block[i], expected_byte);\n        }\n\n        // We verify the message length was inserted correctly by reversing the byte decomposition.\n        let len = 8 * message_size;\n        let mut reconstructed_len: Field = 0;\n        for i in 56..64 {\n            reconstructed_len = 256 * reconstructed_len + msg_block[i] as Field;\n        }\n        assert_eq(reconstructed_len, len as Field);\n    }\n\n    hash_final_block(msg_block, h)\n}\n\nunconstrained fn pad_msg_block(\n    mut msg_block: [u8; 64],\n    mut msg_byte_ptr: u32\n) -> ([u8; BLOCK_SIZE], u32) {\n    // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n    // the 1 and 0s fill up the current block, which we then compress accordingly.\n    if msg_byte_ptr >= 57 {\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for i in msg_byte_ptr..BLOCK_SIZE {\n            msg_block[i] = 0;\n        }\n        (msg_block, BLOCK_SIZE)\n    } else {\n        (msg_block, msg_byte_ptr)\n    }\n}\n\nunconstrained fn attach_len_to_msg_block(mut msg_block: [u8; BLOCK_SIZE], msg_byte_ptr: u32, message_size: u32) -> [u8; BLOCK_SIZE] {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 (i.e. until msg_byte_ptr = 56).\n\n    for i in msg_byte_ptr..56 {\n        msg_block[i] = 0;\n    }\n\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..8 {\n        msg_block[56 + i] = len_bytes[i];\n    }\n    msg_block\n}\n\nfn hash_final_block(msg_block: [u8; BLOCK_SIZE], mut state: [u32; 8]) -> [u8; 32] {\n    let mut out_h: [u8; 32] = [0; 32]; // Digest as sequence of bytes\n\n    // Hash final padded block\n    state = sha256_compression(msg_u8_to_u32(msg_block), state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[7 - j] as Field).to_le_bytes();\n        for k in 0..4 {\n            out_h[31 - 4*j - k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod tests {\n    use super::sha256_var;\n\n    #[test]\n    fn smoke_test() {\n        let input = [0xbd];\n        let result = [\n            0x68, 0x32, 0x57, 0x20, 0xaa, 0xbd, 0x7c, 0x82, 0xf3, 0x0f, 0x55, 0x4b, 0x31, 0x3d, 0x05, 0x70, 0xc9, 0x5a, 0xcc, 0xbb, 0x7d, 0xc4, 0xb5, 0xaa, 0xe1, 0x12, 0x04, 0xc0, 0x8f, 0xfe, 0x73, 0x2b\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116\n        ];\n        let result = [\n            91, 122, 146, 93, 52, 109, 133, 148, 171, 61, 156, 70, 189, 238, 153, 7, 222, 184, 94, 24, 65, 114, 192, 244, 207, 199, 87, 232, 192, 224, 171, 207\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_multiple_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115, 99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49, 46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46, 48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115, 117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97, 103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45, 52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55, 64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32, 50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32, 43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103, 110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115, 104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101, 108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56, 51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48, 87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75, 57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101, 114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99\n        ];\n        let result = [\n            116, 90, 151, 31, 78, 22, 138, 180, 211, 189, 69, 76, 227, 200, 155, 29, 59, 123, 154, 60, 47, 153, 203, 129, 157, 251, 48, 2, 79, 11, 65, 47\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_under_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59\n        ];\n        let result = [\n            143, 140, 76, 173, 222, 123, 102, 68, 70, 149, 207, 43, 39, 61, 34, 79, 216, 252, 213, 165, 74, 16, 110, 74, 29, 64, 138, 167, 30, 1, 9, 119\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_not_block_multiple() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115, 99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49, 46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46, 48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115, 117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97, 103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45, 52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55, 64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32, 50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32, 43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103, 110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115, 104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101, 108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56, 51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48, 87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75, 57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101, 114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99, 116, 58, 77, 101, 115, 115, 97, 103, 101, 45, 73, 100, 58, 68, 97, 116, 101, 58, 116, 111, 59, 32, 98, 61\n        ];\n        let result = [\n            112, 144, 73, 182, 208, 98, 9, 238, 54, 229, 61, 145, 222, 17, 72, 62, 148, 222, 186, 55, 192, 82, 220, 35, 66, 47, 193, 200, 22, 38, 26, 186\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_with_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17, 48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12, 201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48, 37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6, 242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2, 1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89, 110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2, 1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75, 193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1, 12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189, 233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4, 32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45, 105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4, 32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188, 194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212, 181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53\n        ];\n        let message_size = 297;\n        assert_eq(sha256_var(input, message_size), result);\n    }\n\n    #[test]\n    fn msg_big_no_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17, 48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12, 201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48, 37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6, 242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2, 1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89, 110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2, 1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75, 193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1, 12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189, 233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4, 32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45, 105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4, 32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188, 194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212, 181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn same_msg_len_variable_padding() {\n        let input = [\n            29, 81, 165, 84, 243, 114, 101, 37, 242, 146, 127, 99, 69, 145, 39, 72, 213, 39, 253, 179, 218, 37, 217, 201, 172, 93, 198, 50, 249, 70, 15, 30, 162, 112, 187, 40, 140, 9, 236, 53, 32, 44, 38, 163, 113, 254, 192, 197, 44, 89, 71, 130, 169, 242, 17, 211, 214, 72, 19, 178, 186, 168, 147, 127, 99, 101, 252, 227, 8, 147, 150, 85, 97, 158, 17, 107, 218, 244, 82, 113, 247, 91, 208, 214, 60, 244, 87, 137, 173, 201, 130, 18, 66, 56, 198, 149, 207, 189, 175, 120, 123, 224, 177, 167, 251, 159, 143, 110, 68, 183, 189, 70, 126, 32, 35, 164, 44, 30, 44, 12, 65, 18, 62, 239, 242, 2, 248, 104, 2, 178, 64, 28, 126, 36, 137, 24, 14, 116, 91, 98, 90, 159, 218, 102, 45, 11, 110, 223, 245, 184, 52, 99, 59, 245, 136, 175, 3, 72, 164, 146, 145, 116, 22, 66, 24, 49, 193, 121, 3, 60, 37, 41, 97, 3, 190, 66, 195, 225, 63, 46, 3, 118, 4, 208, 15, 1, 40, 254, 235, 151, 123, 70, 180, 170, 44, 172, 90, 4, 254, 53, 239, 116, 246, 67, 56, 129, 61, 22, 169, 213, 65, 27, 216, 116, 162, 239, 214, 207, 126, 177, 20, 100, 25, 48, 143, 84, 215, 70, 197, 53, 65, 70, 86, 172, 61, 62, 9, 212, 167, 169, 133, 41, 126, 213, 196, 33, 192, 238, 0, 63, 246, 215, 58, 128, 110, 101, 92, 3, 170, 214, 130, 149, 52, 81, 125, 118, 233, 3, 118, 193, 104, 207, 120, 115, 77, 253, 191, 122, 0, 107, 164, 207, 113, 81, 169, 36, 201, 228, 74, 134, 131, 218, 178, 35, 30, 216, 101, 2, 103, 174, 87, 95, 50, 50, 215, 157, 5, 210, 188, 54, 211, 78, 45, 199, 96, 121, 241, 241, 176, 226, 194, 134, 130, 89, 217, 210, 186, 32, 140, 39, 91, 103, 212, 26, 87, 32, 72, 144, 228, 230, 117, 99, 188, 50, 15, 69, 79, 179, 50, 12, 106, 86, 218, 101, 73, 142, 243, 29, 250, 122, 228, 233, 29, 255, 22, 121, 114, 125, 103, 41, 250, 241, 179, 126, 158, 198, 116, 209, 65, 94, 98, 228, 175, 169, 96, 3, 9, 233, 133, 214, 55, 161, 164, 103, 80, 85, 24, 186, 64, 167, 92, 131, 53, 101, 202, 47, 25, 104, 118, 155, 14, 12, 12, 25, 116, 45, 221, 249, 28, 246, 212, 200, 157, 167, 169, 56, 197, 181, 4, 245, 146, 1, 140, 234, 191, 212, 228, 125, 87, 81, 86, 119, 30, 63, 129, 143, 32, 96\n        ];\n\n        // Prepare inputs of different lengths\n        let mut input_511 = [0; 511];\n        let mut input_512 = [0; 512]; // Next block\n        let mut input_575 = [0; 575];\n        let mut input_576 = [0; 576]; // Next block\n        for i in 0..input.len() {\n            input_511[i] = input[i];\n            input_512[i] = input[i];\n            input_575[i] = input[i];\n            input_576[i] = input[i];\n        }\n\n        // Compute hashes of all inputs (with same message length)\n        let fixed_length_hash = super::sha256(input);\n        let var_full_length_hash = sha256_var(input, input.len() as u64);\n        let var_length_hash_511 = sha256_var(input_511, input.len() as u64);\n        let var_length_hash_512 = sha256_var(input_512, input.len() as u64);\n        let var_length_hash_575 = sha256_var(input_575, input.len() as u64);\n        let var_length_hash_576 = sha256_var(input_576, input.len() as u64);\n\n        // All of the above should have produced the same hash\n        assert_eq(var_full_length_hash, fixed_length_hash);\n        assert_eq(var_length_hash_511, fixed_length_hash);\n        assert_eq(var_length_hash_512, fixed_length_hash);\n        assert_eq(var_length_hash_575, fixed_length_hash);\n        assert_eq(var_length_hash_576, fixed_length_hash);\n    }\n}\n","path":"std/hash/sha256.nr"},"70":{"source":"use dep::zimburse_verifiers::{\n    united::{\n    constants::{MAX_EMAIL_BODY_LENGTH, MAX_EMAIL_HEADER_LENGTH, PURCHASE_SUMMARY_INDICE_LEN},\n    main::{verify_united_flight_receipt, united_flight_body_hash, AMOUNT_SELECTION_LENGTH, DATE_AIRPORT_SELECTION_LENGTH},\n},\n    zkemail::{dkim::RSAPubkey, KEY_LIMBS_2048, Sequence}\n};\n\n// fn main(\n//     header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n//     pubkey: RSAPubkey<KEY_LIMBS_2048>,\n//     signature: [Field; KEY_LIMBS_2048],\n//     body_hash_index: u32,\n//     body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>,\n//     from_index: u32,\n//     subject_index: u32,\n//     amount_sequence: Sequence,\n//     date_sequence: Sequence,\n//     airport_sequence: Sequence,\n//     partial_body_hash: [u32; 8],\n//     partial_body_hash_date: [u32; 8]\n// ) -> pub [Field; 4] {\n//     verify_united_flight_receipt(\n//         header,\n//         pubkey,\n//         signature,\n//         body_hash_index,\n//         body,\n//         from_index,\n//         subject_index,\n//         amount_sequence,\n//         date_sequence,\n//         airport_sequence,\n//         partial_body_hash,\n//         partial_body_hash_date\n//     )\n// }\n\n\nfn main(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    dkim_header_sequence: Sequence,\n    body_hash_index: u32,\n    from_index: u32,\n    subject_index: u32,\n    amount_sequence: Sequence,\n    date_sequence: Sequence,\n    airport_sequence: Sequence,\n    partial_body_hash: [u32; 8],\n    body_amount_selection: [u8; AMOUNT_SELECTION_LENGTH],\n    partial_body_hash_date: [u32; 8],\n    body_date_selection: [u8; DATE_AIRPORT_SELECTION_LENGTH]\n) -> pub ([u32; 8], [u32; 8], [u8; 32], [Field; 3]) {\n    united_flight_body_hash(\n        header,\n        pubkey,\n        signature,\n        dkim_header_sequence,\n        body_hash_index,\n        from_index,\n        subject_index,\n        amount_sequence,\n        date_sequence,\n        airport_sequence,\n        partial_body_hash,\n        body_amount_selection,\n        partial_body_hash_date,\n        body_date_selection\n    )\n}","path":"/home/jpag/Workground/aztec/z-imburse/circuits/library_testers/united_email_verifier/src/main.nr"},"71":{"source":"use crate::constants::{DATE_HEADER_FIELD_MAX_LENGTH, DATE_LENGTH_DETERMINATION_INDEX, DATE_HEADER_FIELD_START};\nuse crate::linode::constants::MAX_LINODE_EMAIL_HEADER_LENGTH;\n\nuse dep::date_parser::{parse_date_string, to_unix_month, DATETIME_LENGTH};\nuse zkemail::Sequence;\n\n/**\n * Constrains a span to be a full header field\n *\n * @param MAX_HEADER_LENGTH: the maximum possible length of the header\n * @param header: the header of the email\n * @param index: the index that the header field begins at\n * @param length: the length of the header field\n */\npub fn constrain_header_field<let MAX_HEADER_LENGTH: u32>(header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH], index: u32, length: u32) {\n    // check that the field does not lie outside of the max \n    assert(index + length <= header.len(), \"Header field out of bounds\");\n    // if not the first field in the header, ensure the header field is preceded by a CRLF\n    if (index != 0) {\n        assert(header[index - 2] == 0x0D, \"Missing prefix CR in field constraint\");\n        assert(header[index - 1] == 0x0A, \"Missing prefix LF in field constraint\");\n    }\n    // check that the following two chars are the crlf\n    if (index + length < header.len()) {\n        assert(header[index + length] == 0x0D, \"Missing suffix CR in field constraint\");\n        assert(header[index + length + 1] == 0x0A, \"Missing suffix LF field constraint\");\n    }\n    // check that the field does not contain any CRLF\n    for i in 0..MAX_HEADER_LENGTH {\n        if (i < length) {\n            assert(header[index + i] != 0x0D, \"CR in field constraint Field\");\n        }\n    }\n}\n\n/**\n * Extracts the datetime from the email header\n *\n * @param header: the header of the email\n * @param index: the index that the date header field begins at\n * @return the parsed unix timestamp\n */\npub fn extract_datetime(header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH], index: u32) -> u32 {\n    // determine the index of the selector that chooses the length of the date field\n    let length_decider = index + DATE_LENGTH_DETERMINATION_INDEX;\n    let length = if header[length_decider] == 0x20 {\n        DATE_HEADER_FIELD_MAX_LENGTH - 1\n    } else {\n        DATE_HEADER_FIELD_MAX_LENGTH\n    };\n    // constrain the header field to be a single and full header field\n    constrain_header_field::<DATE_HEADER_FIELD_MAX_LENGTH>(header, index, length);\n    // check the header field starts with \"Date: \"\n    let first_byte = (header[index] == 0x44) as u1 | (header[index] == 0x64) as u1;\n    assert(first_byte as bool, \"Invalid date field: [D/d]\");\n    for i in 0..DATE_HEADER_FIELD_START.len() {\n        assert(header[index + i + 1] == DATE_HEADER_FIELD_START[i], \"Invalid date field\");\n    }\n    // extract the date string\n    let mut datetime_string: [u8; DATETIME_LENGTH] = [0; DATETIME_LENGTH];\n    // todo: make const (and also put all this shit in zkemail.nr)\n    let start_index = index + 10;\n    for i in 0..DATETIME_LENGTH {\n        datetime_string[i] = header[start_index + i];\n    }\n    // parse the datetime into unix\n    let parsed = parse_date_string(datetime_string);\n    to_unix_month(parsed)\n}\n\npub fn field_from_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        as_field += (bytes[i] as Field) * offset;\n        offset *= 256;\n    }\n    as_field\n}\n\npub fn serialize_bytes<let LIMBS: u32, let SEQUENCE_LENGTH: u32>(sequence: [u8; SEQUENCE_LENGTH]) -> [Field; LIMBS] {\n    let mut limbs: [Field; LIMBS] = [0; LIMBS];\n    for i in 0..LIMBS {\n        let mut chunk = 0;\n        let mut v = 1;\n        for j in 0..31 {\n            let index = i * 31 + j;\n            if index < SEQUENCE_LENGTH {\n                chunk += sequence[index] as Field * v;\n                v *= 256;\n            }\n        }\n        limbs[i] = chunk;\n    }\n    limbs\n}\n\npub fn is_number_constraint(num: u8) {\n    assert(num >= 0x30);\n    assert(num < 0x3A);\n}\n\n/**\n* Check whether or not character is quoted printable linebreak\n* - 0x3D \"=\"\n* - 0xD \"\\r\"\n* - 0xA \"\\n\"\n*/\nfn is_qp_linebreak_char(byte: u8) -> bool {\n    (byte == 0x3D) | (byte == 0xD) | (byte == 0xA)\n}\n\nfn is_soft_linebreak(window: [u8; 3]) -> bool {\n    window == [0x3D, 0x0D, 0x0A]\n}\n\n/**\n* Check whether email body using quoted printable encoding contains a certain text sequence. Handles\n* 3 character linebreak sequences: \"=\\r\\n\"\n*/\nfn check_qp_sequence<let MAX_LEN: u32, let REVERT_MSG_LEN: u32, let SEQ_LEN: u32>(\n    text: BoundedVec<u8, MAX_LEN>,\n    start_index: u32,\n    sequence: [u8; SEQ_LEN],\n    revert_msg: str<REVERT_MSG_LEN>\n) {\n    let mut index = start_index;\n    for i in 0..SEQ_LEN {\n        // todo: prevent overflow\n        let window = [\n            text.get_unchecked(index),\n            text.get_unchecked(index + 1),\n            text.get_unchecked(index + 2)\n        ];\n        if is_soft_linebreak(window) {\n            index = index + 3;\n        }\n        assert(sequence[i] == text.get_unchecked(index), revert_msg);\n        index = index + 1;\n    }\n}\n\nfn check_qp_sequence_reverse<let MAX_LEN: u32, let REVERT_MSG_LEN: u32, let SEQ_LEN: u32>(\n    text: BoundedVec<u8, MAX_LEN>,\n    start_index: u32,\n    sequence: [u8; SEQ_LEN],\n    revert_msg: str<REVERT_MSG_LEN>\n) {\n    let mut index = start_index;\n    for i in 0..SEQ_LEN {\n        let window = [\n            text.get_unchecked(index - 2),\n            text.get_unchecked(index - 1),\n            text.get_unchecked(index)\n        ];\n        if is_soft_linebreak(window) {\n            index = index - 3;\n        }\n        assert(sequence[SEQ_LEN - i - 1] == text.get_unchecked(index), revert_msg);\n        index = index - 1;\n    }\n}\n\n// MAX_TEXT_LEN must >= MAX_SEQ_LEN + (MAX_SEQ_LEN / 75_ + (MAX_SEQ_LEN % 75 != 0) * 3)\nfn remove_soft_line_break<let MAX_TEXT_LEN: u32, let MAX_SEQ_LEN: u32>(\n    text: BoundedVec<u8, MAX_TEXT_LEN>,\n    sequence: Sequence\n) -> BoundedVec<u8, MAX_SEQ_LEN + 1> {\n    // let mut decoded = BoundedVec::new();\n    let mut decoded: [u8; MAX_SEQ_LEN + 1] = [0; MAX_SEQ_LEN + 1];\n    let mut encoded_index = sequence.index;\n    let mut decoded_index = 0;\n    let mut cooldown = 0;\n    let mut len = 0;\n    for i in 0..MAX_SEQ_LEN {\n        // check if the current index is at a linebreak\n        let window = [\n            text.get_unchecked(encoded_index),\n            text.get_unchecked(encoded_index + 1),\n            text.get_unchecked(encoded_index + 2)\n        ];\n\n        // if the current index is a linebreak, skip 3 chars\n        if is_soft_linebreak(window) {\n            cooldown = 3;\n        }\n        // if cooldown or end of array insert char at end and save cursor\n        let encoded_cursor = i + encoded_index;\n        let mut decoded_cursor = decoded_index;\n        if (cooldown > 0) | i >= encoded_cursor {\n            cooldown = cooldown - 1;\n            decoded_index = decoded_index - 1;\n            decoded_cursor = MAX_SEQ_LEN;\n        }\n        // insert char at cursor\n        let element = text.get_unchecked(encoded_cursor);\n        decoded[decoded_cursor] = element;\n        // increment\n        decoded_index = decoded_index + 1;\n    }\n    // zero out the last element\n    decoded[MAX_SEQ_LEN] = 0;\n    let res: BoundedVec<u8, MAX_SEQ_LEN + 1> = BoundedVec { storage: decoded, len: decoded_index };\n    res\n}\n","path":"/home/jpag/Workground/aztec/z-imburse/circuits/zimburse_verifiers/src/utils.nr"},"72":{"source":"use crate::utils::{\n    check_qp_sequence, check_qp_sequence_reverse, is_qp_linebreak_char, field_from_bytes,\n    remove_soft_line_break\n};\nuse super::constants::{\n    ARRIVAL_DATE_POSTFIX_LENGTH, ARRIVAL_DATE_PREFIX_LENGTH, ARRIVAL_DATE_HTML_PREFIX,\n    ARRIVAL_DATE_HTML_POSTFIX, DEST_AIPORT_POSTFIX_LENGTH, DEST_AIRPORT_PREFIX_LENGTH,\n    DEST_AIRPORT_HTML_POSTFIX, DEST_AIRPORT_HTML_PREFIX, MAX_AMOUNT_SEQUENCE_LENGTH, MAX_BILLED_AMOUNT,\n    MAX_DATETIME_SEQUENCE_LENGTH, MAX_DEST_SEQUENCE_LENGTH, MAX_DEST_AIRPORT_LENGTH,\n    MAX_EMAIL_BODY_LENGTH, MAX_EMAIL_HEADER_LENGTH, PURCHASE_SUMMARY_INDICE_LEN,\n    UNITED_FLIGHT_RECEIPT_FROM, UNITED_FLIGHT_RECEIPT_SUBJECT, TOTAL_BILLED_HTML_PREFIX,\n    TOTAL_BILLED_HTML_POSTFIX, TOTAL_BILLED_PREFIX_LENGTH, TOTAL_BILLED_POSTFIX_LENGTH\n};\nuse zkemail::{Sequence, partial_hash::{partial_sha256_var_end, partial_sha256_var_interstitial}};\nuse date_parser::{Datetime, parse_day, parse_month, parse_year, to_unix};\n\n/**\n* Check that email is from United receipts address\n*/\npub fn check_from_united_receipts(index: u32, header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>) {\n    let from_len = UNITED_FLIGHT_RECEIPT_FROM.len() as u32;\n    // check that full field is within bounds\n    assert(index + from_len <= header.len(), \"From index out of bounds\");\n    // check for hardcoded sender\n    for i in 0..from_len {\n        assert(\n            header.get_unchecked(i + index) == UNITED_FLIGHT_RECEIPT_FROM[i], \"Email not from United receipts.\"\n        );\n    }\n    // check for CRLF at end\n    assert(header.get_unchecked(from_len + index) == 0x0D, \"Invalid CRLF sequence\");\n    assert(header.get_unchecked(from_len + index + 1) == 0x0A, \"Invalid CRLF sequence\");\n}\n\n/**\n* Check that email subject is United eTicket Itinerary and Receipt\n*/\npub fn check_subject_united_flight_receipt(index: u32, header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>) {\n    let subject_len = UNITED_FLIGHT_RECEIPT_SUBJECT.len() as u32;\n    // check that full field is within bounds\n    assert(index + subject_len <= header.len() as u32, \"Subject index out of bounds\");\n\n    // check chars in fixed section start\n    for i in 0..subject_len {\n        assert(\n            header.get_unchecked(i + index) == UNITED_FLIGHT_RECEIPT_SUBJECT[i], \"Email subject is not United eTicket receipt\"\n        );\n    }\n\n    // check for CRLF at start\n    // TODO: Come back and check why this is here\n    // assert(header.get_unchecked(subject_len - 2) == 0x0D, \"Invalid CRLF sequence\");\n    // assert(header.get_unchecked(subject_len - 1) == 0x0A, \"Invalid CRLF sequence\");\n\n    // United confirmation number always follows and has a length of 6\n    // check for CRLF\n    assert(header.get_unchecked(subject_len + index + 7) == 0x0D, \"Invalid CRLF sequence\");\n    assert(header.get_unchecked(subject_len + index + 8) == 0x0A, \"Invalid CRLF sequence\");\n}\n\npub fn extract_billed_amount<let N: u32>(body: BoundedVec<u8, N>, amount_sequence: Sequence) -> Field {\n    // check the prefix of the amount sequence\n    check_qp_sequence::<N, 43, TOTAL_BILLED_PREFIX_LENGTH>(\n        body,\n        amount_sequence.index,\n        TOTAL_BILLED_HTML_PREFIX,\n        \"Index does not point to total billed prefix\"\n    );\n\n    // check the postfix of the amount sequence\n    check_qp_sequence_reverse::<N, 44, TOTAL_BILLED_POSTFIX_LENGTH>(\n        body,\n        amount_sequence.index + amount_sequence.length - 1,\n        TOTAL_BILLED_HTML_POSTFIX,\n        \"Index does not point to total billed postfix\"\n    );\n\n    let clrf_parsed = remove_soft_line_break::<N, MAX_AMOUNT_SEQUENCE_LENGTH>(body, amount_sequence);\n    // locate decimal index\n    let mut decimal_index = 0;\n    for i in 0..(MAX_BILLED_AMOUNT + TOTAL_BILLED_POSTFIX_LENGTH) {\n        let index = MAX_AMOUNT_SEQUENCE_LENGTH - i - 1;\n        if clrf_parsed.get_unchecked(index) == 0x2E {\n            decimal_index = index;\n        }\n    }\n    // check that third to last place is decimal point\n    assert(clrf_parsed.get_unchecked(decimal_index) == 0x2E, \"Index does not point to decimal\");\n\n    let amount_length = decimal_index + 3 - TOTAL_BILLED_PREFIX_LENGTH;\n\n    // parse the amount\n    let mut amount: Field = 0;\n    let mut pow = 1;\n    for i in 0..MAX_BILLED_AMOUNT {\n        let byte = clrf_parsed.get_unchecked(decimal_index + 2 - i);\n        if (i < amount_length) & (byte != 0x2E) {\n            let val = (byte - 0x30) as Field;\n            amount = amount + val * pow;\n            pow = pow * 10;\n        }\n    }\n    amount\n}\n\npub fn extract_departing_flight_date(body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>, date_sequence: Sequence) -> Field {\n    // check the prefix of the date sequence\n    check_qp_sequence::<MAX_EMAIL_BODY_LENGTH, 45, ARRIVAL_DATE_PREFIX_LENGTH>(\n        body,\n        date_sequence.index,\n        ARRIVAL_DATE_HTML_PREFIX,\n        \"Index does not point to departing date prefix\"\n    );\n\n    // check the postfix of the date sequence\n    check_qp_sequence_reverse::<MAX_EMAIL_BODY_LENGTH, 46, ARRIVAL_DATE_POSTFIX_LENGTH>(\n        body,\n        date_sequence.index + date_sequence.length - 1,\n        ARRIVAL_DATE_HTML_POSTFIX,\n        \"Index does not point to departing date postfix\"\n    );\n\n    let clrf_parsed = remove_soft_line_break::<MAX_EMAIL_BODY_LENGTH, MAX_DATETIME_SEQUENCE_LENGTH>(body, date_sequence);\n\n    // convert date to timestamp\n    let date_index = ARRIVAL_DATE_PREFIX_LENGTH;\n\n    // parse day\n    let day = parse_day([clrf_parsed.get_unchecked(date_index + 9), clrf_parsed.get_unchecked(date_index + 10)]);\n\n    let month = parse_month(\n        [\n        clrf_parsed.get_unchecked(date_index + 5), clrf_parsed.get_unchecked(date_index + 6), clrf_parsed.get_unchecked(date_index + 7)\n    ]\n    );\n    assert(month != 0);\n    // parse year\n    let year = parse_year(\n        [\n        clrf_parsed.get_unchecked(date_index + 13),\n        clrf_parsed.get_unchecked(date_index + 14),\n        clrf_parsed.get_unchecked(date_index + 15),\n        clrf_parsed.get_unchecked(date_index + 16)\n    ]\n    );\n    let datetime = Datetime { year: year.0, leap_years: year.1, add_leap_day: false, month, day, time: 0, offset: 0, subtract: false };\n    to_unix(datetime) as Field\n}\n\npub fn extract_destination_airport(\n    body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>,\n    dest_airport_sequence: Sequence\n) -> Field {\n    // check the prefix of the destination airport sequence\n    check_qp_sequence::<MAX_EMAIL_BODY_LENGTH, 50, DEST_AIRPORT_PREFIX_LENGTH>(\n        body,\n        dest_airport_sequence.index,\n        DEST_AIRPORT_HTML_PREFIX,\n        \"Index does not point to destination airport prefix\"\n    );\n\n    // check the postfix of the date sequence\n    check_qp_sequence_reverse::<MAX_EMAIL_BODY_LENGTH, 51, DEST_AIPORT_POSTFIX_LENGTH>(\n        body,\n        dest_airport_sequence.index + dest_airport_sequence.length - 1,\n        DEST_AIRPORT_HTML_POSTFIX,\n        \"Index does not point to destination airport postfix\"\n    );\n\n    // remove clrf characters\n    let clrf_parsed = remove_soft_line_break::<MAX_EMAIL_BODY_LENGTH, MAX_DEST_SEQUENCE_LENGTH>(body, dest_airport_sequence);\n\n    let mut opening_parenthesis_index = 0;\n    let mut pointer = DEST_AIRPORT_PREFIX_LENGTH;\n    for i in 0..MAX_DEST_AIRPORT_LENGTH {\n        if clrf_parsed.get_unchecked(pointer + i) == 0x28 {\n            opening_parenthesis_index = pointer + i;\n        }\n    }\n\n    // extract airport code\n    let first_char = clrf_parsed.get_unchecked(opening_parenthesis_index + 1);\n    let second_char = clrf_parsed.get_unchecked(opening_parenthesis_index + 2);\n    let third_char = clrf_parsed.get_unchecked(opening_parenthesis_index + 3);\n    let code = [third_char, second_char, first_char];\n    field_from_bytes::<3>(code)\n}\n\npub fn client_side_interstitial(\n    body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>,\n    amount_sequence: Sequence,\n    date_sequence: Sequence,\n    partial_body_hash: [u32; 8],\n    partial_body_hash_date: [u32; 8]\n) -> ([u32; 8], [u32; 8]) {\n    // hash content between total and date / dest\n    let mut amount_msg: [u8; 256] = [0; 256];\n    for i in 0..MAX_AMOUNT_SEQUENCE_LENGTH {\n        amount_msg[i] = body.get_unchecked(amount_sequence.index + i);\n    }\n    let interstitial_hash_1 = partial_sha256_var_interstitial(partial_body_hash, amount_msg, 256);\n\n    let date_dest_sequence_length = MAX_DATETIME_SEQUENCE_LENGTH + MAX_DEST_AIRPORT_LENGTH - 5;\n    let mut date_dest_msg: [u8; 256] = [0; 256];\n    for i in 0..date_dest_sequence_length {\n        date_dest_msg[i] = body.get_unchecked(date_sequence.index + i);\n    }\n    let interstitial_hash_3 = partial_sha256_var_interstitial(partial_body_hash_date, date_dest_msg, 256);\n    (interstitial_hash_1, interstitial_hash_3)\n}\n\npub fn server_side_interstitial(\n    body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>,\n    interstitial_hash_1: [u32; 8],\n    interstitial_hash_3: [u32; 8],\n    amount_sequence: Sequence,\n    email_body_length: u32\n) {\n    let mut interstitial_msg_2: [u8; 1984] = [0; 1984]; // hardcode max length to 1984 for now\n    let interstitial_2_start_index = amount_sequence.end_index() + 1;\n    for i in 0..interstitial_msg_2.len() {\n        interstitial_msg_2[i] = body.get_unchecked(interstitial_2_start_index + i);\n    }\n    let interstitial_hash_2  = partial_sha256_var_interstitial(\n        interstitial_hash_1,\n        interstitial_msg_2,\n        interstitial_msg_2.len()\n    );\n\n    let mut body_end: [u8; 19968] = [0; 19968]; // hardcode max length to 19968 for now\n\n    let computed_hash_server = partial_sha256_var_end(\n        interstitial_hash_3,\n        body_end,\n        body_end.len() as u64,\n        email_body_length as u64\n    );\n}\n","path":"/home/jpag/Workground/aztec/z-imburse/circuits/zimburse_verifiers/src/united/utils.nr"},"73":{"source":"use crate::united::{\n    constants::{\n    MAX_AMOUNT_SEQUENCE_LENGTH, MAX_DATETIME_SEQUENCE_LENGTH, MAX_DEST_AIRPORT_LENGTH,\n    MAX_EMAIL_BODY_LENGTH, MAX_EMAIL_HEADER_LENGTH, PURCHASE_SUMMARY_INDICE_LEN\n},\n    utils::{\n    check_from_united_receipts, check_subject_united_flight_receipt, extract_billed_amount,\n    extract_departing_flight_date, extract_destination_airport\n}\n};\nuse crate::utils::field_from_bytes;\nuse std::hash::pedersen_hash;\nuse zkemail::{\n    dkim::RSAPubkey, KEY_LIMBS_2048, headers::body_hash::get_body_hash,\n    partial_hash::partial_sha256_var_interstitial, Sequence\n};\nuse super::utils::client_side_interstitial;\nuse super::utils::server_side_interstitial;\n\n\nglobal AMOUNT_SELECTION_LENGTH: u32 = 256;\nglobal DATE_AIRPORT_SELECTION_LENGTH: u32 = 320;\n/// USE UNTIL WE HAVE AZTEC-NARGO v0.35.0\n// use crate::sha256_var::sha256_var;\n\n// body hash schema\n// _\n// |\n// |\n// | PRECOMPUTED\n// _\n// 256 bytes for the amount sequence\n// _\n// |\n// |\n// | INTERSTITIAL HASH BETWEEN AMOUNT AND DATE/ARRIVAL\n// |\n// _\n// 256 bytes for the date / destination sequence\n// _\n// |\n// | END HASH\n// |\n// _\npub fn verify_united_flight_receipt(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    body_hash_index: u32,\n    from_index: u32,\n    subject_index: u32,\n    amount_sequence: Sequence,\n    date_sequence: Sequence,\n    airport_sequence: Sequence,\n    // hash state precomputed up to amount selection\n    partial_body_hash: [u32; 8],\n    body_amount_selection: [u8; AMOUNT_SELECTION_LENGTH],\n    // hash state to date/ destination selection\n    partial_body_hash_date: [u32; 8],\n    body_date_selection: [u8; DATE_AIRPORT_SELECTION_LENGTH]\n) -> [Field; 4] {\n    // check the header length is within bounds\n    assert(header.len() <= MAX_EMAIL_HEADER_LENGTH);\n\n    // // verify the dkim signature over the header\n    // pubkey.verify_dkim_signature(header, signature);\n\n    // extract body hash and decode from base64\n    // let body_hash_encoded = get_body_hash(header, body_hash_index);\n    // let signed_body_hash = body_hash_base64_decode(body_hash_encoded);\n\n    // assert email is from Receipts@united.com\n    check_from_united_receipts(from_index, header);\n\n    // assert this is a eTicket receipt from United\n    check_subject_united_flight_receipt(subject_index, header);\n\n    // extract billed amount\n    // note: the billed amount has 2 decimals\n    // let billed_amount = extract_billed_amount(body, amount_sequence);\n\n    // let date = extract_departing_flight_date(body, date_sequence);\n\n    // let destination = extract_destination_airport(body, airport_sequence);\n\n    // let (interstitial_hash_1, interstitial_hash_3) = client_side_interstitial(\n    //     body,\n    //     amount_sequence,\n    //     date_sequence,\n    //     partial_body_hash,\n    //     partial_body_hash_date\n    // );\n\n    // hash the state up to the amount selection\n    let body_amount_hashed = partial_sha256_var_interstitial(\n        partial_body_hash,\n        body_amount_selection,\n        AMOUNT_SELECTION_LENGTH\n    );\n\n    // hash the state up to the date/destination selection\n    let body_date_hashed = partial_sha256_var_interstitial(\n        partial_body_hash_date,\n        body_date_selection,\n        DATE_AIRPORT_SELECTION_LENGTH\n    );\n\n    // server_side_interstitial(body, interstitial_hash_1, interstitial_hash_3, amount_sequence);\n\n    // hash the dkim key used to verify the email\n    let dkim_key_hash = pedersen_hash(pubkey.modulus);\n    // [dkim_key_hash, billed_amount, date, destination]\n    [0, 0, 0, 0]\n}\n\n// returns (first interstitial hash, second interstitial hash, signed body hash)\n// and verifies header stuff\npub fn united_flight_body_hash(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    dkim_header_sequence: Sequence,\n    body_hash_index: u32,\n    from_index: u32,\n    subject_index: u32,\n    amount_sequence: Sequence,\n    date_sequence: Sequence,\n    airport_sequence: Sequence,\n    // hash state precomputed up to amount selection\n    partial_body_hash: [u32; 8],\n    body_amount_selection: [u8; AMOUNT_SELECTION_LENGTH],\n    // hash state to date/ destination selection\n    partial_body_hash_date: [u32; 8],\n    body_date_selection: [u8; DATE_AIRPORT_SELECTION_LENGTH]\n) -> ([u32; 8], [u32; 8], [u8; 32], [Field; 3]) {\n    // check the header length is within bounds\n    assert(header.len() <= MAX_EMAIL_HEADER_LENGTH);\n\n    // verify the dkim signature over the header\n    pubkey.verify_dkim_signature(header, signature);\n\n    // assert email is from Receipts@united.com\n    check_from_united_receipts(from_index, header);\n\n    // assert this is a eTicket receipt from United\n    check_subject_united_flight_receipt(subject_index, header);\n\n    // get body hash from header\n    let signed_body_hash = get_body_hash(header, dkim_header_sequence, body_hash_index);\n\n    // hash the state up to the amount selection\n    let body_amount_hashed = partial_sha256_var_interstitial(\n        partial_body_hash,\n        body_amount_selection,\n        AMOUNT_SELECTION_LENGTH\n    );\n\n    // hash the state up to the date/destination selection\n    let body_date_hashed = partial_sha256_var_interstitial(\n        partial_body_hash_date,\n        body_date_selection,\n        DATE_AIRPORT_SELECTION_LENGTH\n    );\n\n    // extract billed amount\n    let billed_selection_vec: BoundedVec<u8, AMOUNT_SELECTION_LENGTH> = BoundedVec::from_array(body_amount_selection);\n    let billed_amount = extract_billed_amount(billed_selection_vec, amount_sequence);\n\n    let return_values = [billed_amount, 0, 0];\n    (body_amount_hashed, body_date_hashed, signed_body_hash, return_values)\n}","path":"/home/jpag/Workground/aztec/z-imburse/circuits/zimburse_verifiers/src/united/main.nr"},"349":{"source":"use dep::base64::base64_encode;\nuse dep::std::collections::bounded_vec::BoundedVec;\nuse crate::{Sequence, BODY_HASH_BASE64_LENGTH, MAX_DKIM_HEADER_FIELD_LENGTH, headers::constrain_header_field};\n\n/**\n * Constrained access to the body hash in the header\n * \n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param dkim_header_field_sequence - The sequence of the DKIM header field\n * @param body_hash_index - The index of the body hash in the header\n */\npub fn get_body_hash<let MAX_HEADER_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    dkim_header_field_sequence: Sequence,\n    body_hash_index: u32\n) -> [u8; 32] {\n    // constrain the access of dkim signature field\n    let header_field_name: [u8; 14] = comptime {\n        \"dkim-signature\".as_bytes()\n    };\n    constrain_header_field::<MAX_HEADER_LENGTH, MAX_DKIM_HEADER_FIELD_LENGTH, 14>(header, dkim_header_field_sequence, header_field_name);\n    // constrain access to the body hash\n    assert(\n        body_hash_index > dkim_header_field_sequence.index\n        & body_hash_index < dkim_header_field_sequence.end_index(), \"Body hash index accessed outside of DKIM header field\"\n    );\n    let bh_prefix: [u8; 3] = comptime {\n        \"bh=\".as_bytes()\n    };\n    for i in 0..3 {\n        assert(\n            header.get_unchecked(body_hash_index - 3 + i) == bh_prefix[i], \"No 'bh=' prefix found at asserted bh index\"\n        );\n    }\n    // get the body hash\n    get_body_hash_unsafe(header, body_hash_index)\n}\n\n/**\n * Get the body hash from the header without validating the access index\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param body_hash_index - The asserted index to find the body hash at\n */\npub fn get_body_hash_unsafe<let MAX_HEADER_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    body_hash_index: u32\n) -> [u8; 32] {\n    // get the body hash\n    let mut body_hash_encoded: [u8; BODY_HASH_BASE64_LENGTH] = [0; BODY_HASH_BASE64_LENGTH];\n    for i in 0..BODY_HASH_BASE64_LENGTH {\n        body_hash_encoded[i] = header.get_unchecked(body_hash_index + i);\n    }\n    // return the decoded body hash\n    // idk why encode vs decode...\n    base64_encode::<BODY_HASH_BASE64_LENGTH, 32>(body_hash_encoded)\n}\n","path":"/home/jpag/nargo/github.com/zkemail/zkemail.nrv0.3.3/lib/src/headers/body_hash.nr"},"350":{"source":"use crate::{Sequence, CR, LF};\n\npub mod body_hash;\npub mod email_address;\n\n\n\n/**\n * Constrain a sequence in a header to match the specific header field\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param MAX_HEADER_FIELD_LENGTH - The maximum length of the header field\n * @param HEADER_FIELD_NAME_LENGTH - The length of the header field name\n * @param header - The email header as validated in the DKIM signature\n * @param header_field_sequence - The sequence of the header field\n * @param header_field_name - The name of the header field\n */\npub fn constrain_header_field<\n    let MAX_HEADER_LENGTH: u32,\n    let MAX_HEADER_FIELD_LENGTH: u32,\n    let HEADER_FIELD_NAME_LENGTH: u32,\n>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) {\n    // check that the sequence is within bounds\n    assert(\n        header_field_sequence.index + header_field_sequence.length <= header.len(),\n        \"Header field out of bounds\"\n    );\n    // check the range of the sequence is within the header (so we can use get_unchecked)\n    let end_index = header_field_sequence.index + header_field_sequence.length;\n    assert(end_index <= header.len(), \"Header field out of bounds of header\");\n\n    // if the sequence is not the start, check for a newline\n    if header_field_sequence.index != 0 {\n        assert(header.get_unchecked(header_field_sequence.index - 2) == CR, \"Header field must start with CRLF\");\n        assert(header.get_unchecked(header_field_sequence.index - 1) == LF, \"Header field must start with CRLF\");\n    }\n    // if the sequence is not the end, check for a newline\n    if end_index != header.len() {\n        assert(\n            header.get_unchecked(end_index) == CR,\n            \"Header field must end with CRLF\"\n        );\n        assert(header.get_unchecked(end_index + 1) == LF,\n        \"Header field must end with CRLF\"\n        );\n    }\n    // check that the header field name matches the expected name\n    for i in 0..HEADER_FIELD_NAME_LENGTH {\n        assert(\n            header.get_unchecked(header_field_sequence.index + i) == header_field_name[i],\n            \"Header field name does not match\"\n        );\n    }\n    assert(\n        header.get_unchecked(header_field_sequence.index + HEADER_FIELD_NAME_LENGTH) == 0x3a,\n        \"Header field name must be followed by a colon\"\n    );\n    // check the header field is uninterrupted\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in (HEADER_FIELD_NAME_LENGTH + 1)..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.index + header_field_sequence.length) {\n            assert(\n                header.get_unchecked(index) != CR,\n                \"Header field must not contain newlines\"\n            );\n        }\n    }\n}\n\n/**\n * contrain_header_field with checks for the last occurence of \"<\" inside the loop to save constraints\n */\npub fn constrain_header_field_detect_last_angle_bracket<\n    let MAX_HEADER_LENGTH: u32,\n    let MAX_HEADER_FIELD_LENGTH: u32,\n    let HEADER_FIELD_NAME_LENGTH: u32,\n>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) -> u32 {\n    // check that the sequence is within bounds\n    assert(\n        header_field_sequence.index + header_field_sequence.length <= header.len(),\n        \"Header field out of bounds\"\n    );\n    // check the range of the sequence is within the header (so we can use get_unchecked)\n    let end_index = header_field_sequence.index + header_field_sequence.length;\n    assert(end_index <= header.len(), \"Header field out of bounds of header\");\n\n    // if the sequence is not the start, check for a newline\n    if header_field_sequence.index != 0 {\n        assert(header.get_unchecked(header_field_sequence.index - 2) == CR, \"Header field must start with CRLF\");\n        assert(header.get_unchecked(header_field_sequence.index - 1) == LF, \"Header field must start with CRLF\");\n    }\n    // if the sequence is not the end, check for a newline\n    if end_index != header.len() {\n        assert(\n            header.get_unchecked(end_index) == CR,\n            \"Header field must end with CRLF\"\n        );\n        assert(header.get_unchecked(end_index + 1) == LF,\n            \"Header field must end with CRLF\"\n        );\n    }\n    // check that the header field name matches the expected name\n    for i in 0..HEADER_FIELD_NAME_LENGTH {\n        assert(\n            header.get_unchecked(header_field_sequence.index + i) == header_field_name[i],\n            \"Header field name does not match\"\n        );\n    }\n    assert(\n        header.get_unchecked(header_field_sequence.index + HEADER_FIELD_NAME_LENGTH) == 0x3a,\n        \"Header field name must be followed by a colon\"\n    );\n    // check the header field is uninterrupted\n    let mut last_angle_bracket = 0;\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in (HEADER_FIELD_NAME_LENGTH + 1)..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.index + header_field_sequence.length) {\n            let byte = header.get_unchecked(index);\n            assert(\n                byte != CR,\n                \"Header field must not contain newlines\"\n            );\n            if byte == 0x3c {\n                last_angle_bracket = index;\n            }\n        }\n    }\n    last_angle_bracket\n}\n","path":"/home/jpag/nargo/github.com/zkemail/zkemail.nrv0.3.3/lib/src/headers/mod.nr"},"352":{"source":"use std::runtime::is_unconstrained;\nuse std::hash::sha256_compression;\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L23\n// Convert 64-byte array to array of 16 u32s\npub fn msg_u8_to_u32(msg: [u8; BLOCK_SIZE]) -> [u32; 16] {\n    let mut msg32: [u32; 16] = [0; 16];\n\n    for i in 0..16 {\n        let mut msg_field: Field = 0;\n        for j in 0..4 {\n            msg_field = msg_field * 256 + msg[64 - 4*(i + 1) + j] as Field;\n        }\n        msg32[15 - i] = msg_field as u32;\n    }\n\n    msg32\n}\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L38\nunconstrained fn build_msg_block_iter<let N: u32>(msg: [u8; N], message_size: u32, msg_start: u32) -> ([u8; BLOCK_SIZE], u32) {\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n    for k in 0..block_input {\n        msg_block[k] = msg[msg_start + k];\n    }\n    (msg_block, block_input)\n}\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L59\n// Verify the block we are compressing was appropriately constructed\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: [u8; 64],\n    msg_start: u32\n) -> u32 {\n    let mut msg_byte_ptr: u32 = 0; // Message byte pointer\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n\n    for k in msg_start..msg_end {\n        if k < message_size {\n            assert_eq(msg_block[msg_byte_ptr], msg[k]);\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\nglobal BLOCK_SIZE = 64;\nglobal ZERO = 0;\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L86-L116\n/**\n * Partially computes a SHA256 hash of a message but does not finalize\n * @notice can be used for post-partial hashing where client proves part of hash and relies on server to finish\n *\n * @param N: the maximum length of the message to hash\n * @param msg: the preimage to begin hashing\n * @param message_size: the actual length of the preimage to hash\n * @return the intermediate hash state\n */\npub fn partial_sha256_var_start<let N: u32>(msg: [u8; N]) -> [u32; 8] {\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut h: [u32; 8] = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]; // Intermediate hash, starting with the canonical initial value\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, N, msg_start)\n        };\n        if msg_start < N {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, N, msg_block, msg_start);\n            if msg_start < N {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < N {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < N) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    h\n}\n\n/**\n * Given some state of a partially computed sha256 hash and part of the preimage, continue hashing\n * @notice used for complex/ recursive offloading of post-partial hashing\n *\n * @param N - the maximum length of the message to hash\n * @param h - the intermediate hash state\n * @param msg - the preimage to hash\n * @param message_size - the actual length of the preimage to hash\n * @return the intermediate hash state after compressing in msg to h\n */\npub fn partial_sha256_var_interstitial<let N: u32>(mut h: [u32; 8], msg: [u8; N], message_size: u32) -> [u32; 8] {\n    assert(message_size % BLOCK_SIZE == 0, \"Message size must be a multiple of the block size\");\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, N, msg_start)\n        };\n        if msg_start < N {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, N, msg_block, msg_start);\n            if msg_start < N {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < N {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < N) & (msg_byte_ptr == BLOCK_SIZE) & (msg_start < message_size){\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    h\n}\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L85\n/**\n * Given some state of a partially computed sha256 hash and remaining preimage, complete the hash\n * @notice used for traditional partial hashing\n *\n * @param N - the maximum length of the message to hash\n * @param h - the intermediate hash state\n * @param msg - the remaining preimage to hash\n * @param message_size - the size of the remaining preimage\n * @param real_message_size -= the total size of the preimage\n * @return finalized sha256 hash\n */\npub fn partial_sha256_var_end<let N: u32>(mut h: [u32; 8], msg: [u8; N], message_size: u64, real_message_size: u64) -> [u8; 32] {\n    let message_size = message_size as u32; // noir stdlib uses u64\n    let real_message_size = real_message_size as u32; // noir stdlib uses u64\n\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    msg_block[msg_byte_ptr] = 1 << 7;\n    let last_block = msg_block;\n    msg_byte_ptr = msg_byte_ptr + 1;\n\n    unsafe {\n        let (new_msg_block, new_msg_byte_ptr) = pad_msg_block(msg_block, msg_byte_ptr);\n        msg_block = new_msg_block;\n        if is_unconstrained() {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if !is_unconstrained() {\n        for i in 0..64 {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n\n        // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n        // the 1 and 0s fill up the current block, which we then compress accordingly.\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for _i in 57..64 {\n            if msg_byte_ptr <= 63 & msg_byte_ptr >= 57 {\n                assert_eq(msg_block[msg_byte_ptr], zero);\n                msg_byte_ptr += 1;\n            }\n        }\n    }\n\n    if msg_byte_ptr >= 57 {\n        h = sha256_compression(msg_u8_to_u32(msg_block), h);\n\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe {\n        attach_len_to_msg_block(msg_block, msg_byte_ptr, real_message_size)\n    };\n\n    if !is_unconstrained() {\n        for i in 0..56 {\n            if i < msg_byte_ptr {\n                assert_eq(msg_block[i], last_block[i]);\n            } else {\n                assert_eq(msg_block[i], zero);\n            }\n        }\n\n        let len = 8 * real_message_size;\n        let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n        for i in 56..64 {\n            assert_eq(msg_block[i], len_bytes[i - 56]);\n        }\n    }\n\n    hash_final_block(msg_block, h)\n}\n\nunconstrained fn pad_msg_block(\n    mut msg_block: [u8; BLOCK_SIZE],\n    mut msg_byte_ptr: u32\n) -> ([u8; BLOCK_SIZE], u32) {\n    // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n    // the 1 and 0s fill up the current block, which we then compress accordingly.\n    if msg_byte_ptr >= 57 {\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for i in msg_byte_ptr..BLOCK_SIZE {\n            msg_block[i] = 0;\n        }\n        (msg_block, BLOCK_SIZE)\n    } else {\n        (msg_block, msg_byte_ptr)\n    }\n}\n\nunconstrained fn attach_len_to_msg_block(mut msg_block: [u8; BLOCK_SIZE], mut msg_byte_ptr: u32, message_size: u32) -> [u8; BLOCK_SIZE] {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 (i.e. until msg_byte_ptr = 56).\n\n    for i in msg_byte_ptr..56 {\n        msg_block[i] = 0;\n    }\n\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..8 {\n        msg_block[56 + i] = len_bytes[i];\n    }\n    msg_block\n}\n\nfn hash_final_block(msg_block: [u8; BLOCK_SIZE], mut state: [u32; 8]) -> [u8; 32] {\n    let mut out_h: [u8; 32] = [0; 32]; // Digest as sequence of bytes\n\n    // Hash final padded block\n    state = sha256_compression(msg_u8_to_u32(msg_block), state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[7 - j] as Field).to_le_bytes();\n        for k in 0..4 {\n            out_h[31 - 4*j - k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nglobal DATA: [u8; 192] = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n    25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n    71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93,\n    94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\n    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,\n    131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148,\n    149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166,\n    167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184,\n    185, 186, 187, 188, 189, 190, 191\n];\n\n#[test]\nfn test_partial_hash() {\n    let mut data0 = [0; 128];\n    for i in 0..data0.len() {\n        data0[i] = DATA[i];\n    }\n    let mut data1 = [0; 64];\n    for i in 0..data1.len() {\n        data1[i] = DATA[data0.len() + i];\n    }\n    let state = partial_sha256_var_start(data0);\n    let hash = partial_sha256_var_end(state, data1, data1.len() as u64, DATA.len() as u64);\n    let correct_hash = std::hash::sha256_var(DATA, DATA.len() as u64);\n    assert_eq(hash, correct_hash);\n}\n\n#[test]\nfn test_partial_hash_interstitial() {\n    let mut data0 = [0; 64];\n    let mut data1 = [0; 64];\n    let mut data2 = [0; 64];\n    for i in 0..data0.len() {\n        data0[i] = DATA[i];\n        data1[i] = DATA[64 + i];\n        data2[i] = DATA[128 + i];\n    }\n    let pre_hash = partial_sha256_var_start(data0);\n    let interstitial_hash = partial_sha256_var_interstitial(pre_hash, data1, data1.len());\n    let hash = partial_sha256_var_end(interstitial_hash, data2, data2.len() as u64, DATA.len() as u64);\n    let correct_hash = std::hash::sha256_var(DATA, DATA.len() as u64);\n    assert_eq(hash, correct_hash);\n}\n\n#[test]\nfn test_partial_hash_interstitial_var() {\n    let mut data0 = [0; 64];\n    let mut data1 = [0; 128]; // second block not used\n    let mut data2 = [0; 64];\n    for i in 0..data0.len() {\n        data0[i] = DATA[i];\n        data1[i] = DATA[64 + i];\n        data2[i] = DATA[128 + i];\n    }\n    let pre_hash = partial_sha256_var_start(data0);\n    let interstitial_hash = partial_sha256_var_interstitial(pre_hash, data1, 64);\n    let hash = partial_sha256_var_end(interstitial_hash, data2, data2.len() as u64, DATA.len() as u64);\n    let correct_hash = std::hash::sha256_var(DATA, DATA.len() as u64);\n    assert_eq(hash, correct_hash);\n}\n","path":"/home/jpag/nargo/github.com/zkemail/zkemail.nrv0.3.3/lib/src/partial_hash.nr"},"354":{"source":"use dep::std::{collections::bounded_vec::BoundedVec, hash::{sha256_var, pedersen_hash}, panic::panic};\nuse dep::rsa::{bignum::{fields::{Params1024, Params2048}, runtime_bignum::BigNumInstance, BigNum}, types::RSA};\nuse crate::{KEY_LIMBS_1024, KEY_BYTES_1024, KEY_LIMBS_2048, KEY_BYTES_2048, RSA_EXPONENT};\n\ntype BN1024 = BigNum<KEY_LIMBS_1024, Params1024>;\ntype RSA1024 = RSA<BN1024, BigNumInstance<KEY_LIMBS_1024, Params1024>, KEY_BYTES_1024>;\ntype BN2048 = BigNum<KEY_LIMBS_2048, Params2048>;\ntype RSA2048 = RSA<BN2048, BigNumInstance<KEY_LIMBS_2048, Params2048>, KEY_BYTES_2048>;\n\npub struct RSAPubkey<let KEY_LIMBS: u32> {\n    modulus: [Field; KEY_LIMBS],\n    redc: [Field; KEY_LIMBS],\n}\n\nimpl<let KEY_LIMBS: u32> RSAPubkey<KEY_LIMBS> {\n    fn hash(self) -> Field {\n        pedersen_hash(self.modulus)\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_1024> {\n    fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_1024]\n    ) {\n        // hash the header\n        let header_hash = sha256_var(header.storage, header.len() as u64);\n        // instantiate the BNInstance for the pubkey\n        // todo: make as BigNumInstance from the outset to reduce some work\n        let pubkey: BigNumInstance<KEY_LIMBS_1024, Params1024> = BigNumInstance::new(self.modulus, self.redc);\n\n        // instantiate BN for the signature\n        let signature: BN1024 = BigNum::from_array(signature);\n\n        // verify the DKIM signature over the header\n        let rsa: RSA1024 = RSA {};\n        assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_2048> {\n    fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_2048]\n    ) {\n        // hash the header\n        let header_hash = sha256_var(header.storage, header.len() as u64);\n        // instantiate the BNInstance for the pubkey\n        // todo: make as BigNumInstance from the outset to reduce some work\n        let pubkey: BigNumInstance<KEY_LIMBS_2048, Params2048> = BigNumInstance::new(self.modulus, self.redc);\n\n        // instantiate BN for the signature\n        let signature: BN2048 = BigNum::from_array(signature);\n\n        // verify the DKIM signature over the header\n        let rsa: RSA2048 = RSA {};\n        assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n    }\n}","path":"/home/jpag/nargo/github.com/zkemail/zkemail.nrv0.3.3/lib/src/dkim.nr"},"359":{"source":"struct Base64EncodeBE {\n    table: [u8; 256]\n}\nimpl Base64EncodeBE {\n    fn new() -> Self {\n        Base64EncodeBE {\n            table: [\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,// 0-9\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,// 10-19\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,// 20-29\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,// 30-39\n                0, 0, 0,// 40-42\n                62,// 43\n                0, 0, 0,// 44-46\n                63,// 47\n                52, 53, 54, 55, 56, 57, 58, 59, 60, 61,// 48-57\n                0, 0, 0,// 58-60,\n                0,// 61\n                0, 0, 0,// 62-64\n                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,// 65-90 (A-Z)\n                0, 0, 0, 0, 0, 0,// 91-96\n                26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,// 97-122 (a-z)\n                0, 0, 0, 0, 0,// 123-127\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n            ]\n        }\n    }\n\n    fn get(self, idx: Field) -> u8 {\n        self.table[idx]\n    }\n}\n\nstruct Base64DecodeBE {\n    table: [u8; 64]\n}\nimpl Base64DecodeBE {\n    fn new() -> Self {\n        Base64DecodeBE {\n            table: [\n                65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,// 0-25 (A-Z)\n                97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,// 26-51 (a-z)\n                48, 49, 50, 51, 52, 53, 54, 55, 56, 57,// 52-61\n                43,// 62\n                47// 63\n            ]\n        }\n    }\n\n    fn get(self, idx: Field) -> u8 {\n        self.table[idx]\n    }\n}\n\n/**\n * @brief Take an array of ASCII values and convert into base64 values\n **/\npub fn base64_encode_elements<let InputElements: u32>(input: [u8; InputElements]) -> [u8; InputElements] {\n    // for some reason, if the lookup table is not defined in a struct, access costs are expensive and ROM tables aren't being used :/\n    let mut Base64Encoder = Base64EncodeBE::new();\n\n    let mut result: [u8; InputElements] = [0; InputElements];\n\n    for i in 0..InputElements {\n        result[i] = Base64Encoder.get(input[i] as Field);\n    }\n    result\n}\n\n/**\n * @brief Take an array of base64 values and convert into ASCII values\n **/\npub fn base64_decode_elements<let InputElements: u32>(input: [u8; InputElements]) -> [u8; InputElements] {\n    // for some reason, if the lookup table is not defined in a struct, access costs are expensive and ROM tables aren't being used :/\n    let mut Base64Decoder = Base64DecodeBE::new();\n\n    let mut result: [u8; InputElements] = [0; InputElements];\n\n    for i in 0..InputElements {\n        result[i] = Base64Decoder.get(input[i] as Field);\n    }\n    result\n}\n\n/**\n * @brief Take an array of ASCII values and convert into *packed* byte array of base64 values\n *        Each Base64 value is 6 bits. This method will produce a byte array where data is concatenated so that there are no sparse bits\n *        (e.g. encoding 4 ASCII values produces 24 bits of Base64 data = 3 bytes of output data)\n **/\npub fn base64_encode<let InputElements: u32, let OutputBytes: u32>(input: [u8; InputElements]) -> [u8; OutputBytes] {\n    let encoded: [u8; InputElements] = base64_encode_elements(input);\n    // 240 bits fits 40 6-bit chunks and 30 8-bit chunks\n    // we pack 40 base64 values into a field element and convert into 30 bytes\n    // TODO: once we support arithmetic ops on generics, derive OutputBytes from InputBytes\n    let mut result: [u8; OutputBytes] = [0; OutputBytes];\n    let BASE64_ELEMENTS_PER_CHUNK: u32 = 40;\n    let BYTES_PER_CHUNK: u32 = 30;\n    let num_chunks = (InputElements / BASE64_ELEMENTS_PER_CHUNK)\n        + (InputElements % BASE64_ELEMENTS_PER_CHUNK != 0) as u32;\n\n    for i in 0..num_chunks - 1 {\n        let mut slice: Field = 0;\n        for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n            slice *= 64;\n            slice += encoded[i * BASE64_ELEMENTS_PER_CHUNK + j] as Field;\n        }\n        let slice_bytes: [u8; 30] = slice.to_be_bytes();\n        for j in 0..BYTES_PER_CHUNK {\n            result[i * BYTES_PER_CHUNK + j] = slice_bytes[j];\n        }\n    }\n\n    let base64_elements_in_final_chunk = InputElements - ((num_chunks - 1) * BASE64_ELEMENTS_PER_CHUNK);\n\n    let mut slice: Field = 0;\n    for j in 0..base64_elements_in_final_chunk {\n        slice *= 64;\n        slice += encoded[(num_chunks - 1) * BASE64_ELEMENTS_PER_CHUNK + j] as Field;\n    }\n    for _ in base64_elements_in_final_chunk..BASE64_ELEMENTS_PER_CHUNK {\n        slice *= 64;\n    }\n    // TODO: check is it cheaper to use a constant value in `to_be_bytes` or can we use `bytes_in_final_chunk`?\n    let slice_bytes: [u8; 30] = slice.to_be_bytes();\n    let num_bytes_in_final_chunk = OutputBytes - ((num_chunks - 1) * BYTES_PER_CHUNK);\n    for i in 0..num_bytes_in_final_chunk {\n        result[(num_chunks - 1) * BYTES_PER_CHUNK + i] = slice_bytes[i];\n    }\n    result\n}\n\n/**\n * @brief Take an array of packed base64 encoded bytes and convert into ASCII\n **/\npub fn base64_decode<let InputBytes: u32, let OutputElements: u32>(input: [u8; InputBytes]) -> [u8; OutputElements] {\n    //  let decoded: [u8; InputBytes] = base64_decode_elements(input);\n    // 240 bits fits 40 6-bit chunks and 30 8-bit chunks\n    // we pack 40 base64 values into a field element and convert into 30 bytes\n    // TODO: once we support arithmetic ops on generics, derive OutputBytes from InputBytes\n    let mut result: [u8; OutputElements] = [0; OutputElements];\n    let BASE64_ELEMENTS_PER_CHUNK: u32 = 40;\n    let BYTES_PER_CHUNK: u32 = 30;\n    let num_chunks = (InputBytes / BYTES_PER_CHUNK) + (InputBytes % BYTES_PER_CHUNK != 0) as u32;\n\n    for i in 0..num_chunks - 1 {\n        let mut slice: Field = 0;\n        for j in 0..BYTES_PER_CHUNK {\n            slice *= 256;\n            slice += input[i * BYTES_PER_CHUNK + j] as Field;\n        }\n\n        let slice_base64_chunks: [u8; 40] = slice.to_be_radix(64);\n        for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n            result[i * BASE64_ELEMENTS_PER_CHUNK + j] = slice_base64_chunks[j];\n        }\n    }\n\n    let bytes_in_final_chunk = InputBytes - ((num_chunks - 1) * BYTES_PER_CHUNK);\n\n    let mut slice: Field = 0;\n    for j in 0..bytes_in_final_chunk {\n        slice *= 256;\n        slice += input[(num_chunks - 1) * BYTES_PER_CHUNK + j] as Field;\n    }\n    for _ in bytes_in_final_chunk..BYTES_PER_CHUNK {\n        slice *= 256;\n    }\n\n    // TODO: check is it cheaper to use a constant value in `to_be_bytes` or can we use `bytes_in_final_chunk`?\n    let slice_base64_chunks: [u8; 40] = slice.to_be_radix(64);\n\n    let num_elements_in_final_chunk = OutputElements - ((num_chunks - 1) * BASE64_ELEMENTS_PER_CHUNK);\n    for i in 0..num_elements_in_final_chunk {\n        result[(num_chunks - 1) * BASE64_ELEMENTS_PER_CHUNK + i] = slice_base64_chunks[i];\n    }\n    base64_decode_elements(result)\n}\n\n// ooook so we take ascii and encode as base64, we get an undefined character\n#[test]\nfn test_base64_decode_elements() {\n    // Raw bh: GxMlgwLiypnVrE2C0Sf4yzhcWTkAhSZ5+WERhKhXtlU=\n    // Translated directly to ASCII (with the = padding character stripped)\n    let ascii_expected: [u8; 43] = [\n        71, 120, 77, 108, 103,\n        119, 76, 105, 121, 112,\n        110, 86, 114, 69, 50,\n        67, 48, 83, 102, 52,\n        121, 122, 104, 99, 87,\n        84, 107, 65, 104, 83,\n        90, 53, 43, 87, 69,\n        82, 104, 75, 104, 88,\n        116, 108, 85\n    ];\n\n    let input: [u8; 43] = [\n        6, 49, 12, 37, 32, 48, 11, 34, 50, 41, 39, 21, 43, 4, 54, 2, 52, 18, 31, 56, 50, 51, 33, 28, 22, 19, 36, 0, 33, 18, 25, 57, 62, 22, 4, 17, 33, 10, 33, 23, 45, 37, 20\n    ];\n\n    let ascii_result = base64_decode_elements(input);\n\n    assert(ascii_result == ascii_expected);\n}\n\n#[test]\nfn test_base64_encode() {\n    // Raw bh: GxMlgwLiypnVrE2C0Sf4yzhcWTkAhSZ5+WERhKhXtlU=\n    // Translated directly to ASCII\n    let input: [u8; 44] = [\n        71, 120, 77, 108, 103,\n        119, 76, 105, 121, 112,\n        110, 86, 114, 69, 50,\n        67, 48, 83, 102, 52,\n        121, 122, 104, 99, 87,\n        84, 107, 65, 104, 83,\n        90, 53, 43, 87, 69,\n        82, 104, 75, 104, 88,\n        116, 108, 85, 61\n    ];\n\n    let result: [u8; 32] = base64_encode(input);\n    let expected: [u8; 32] = [\n        27, 19, 37, 131, 2, 226, 202, 153, 213, 172,\n        77, 130, 209, 39, 248, 203, 56, 92, 89, 57,\n        0, 133, 38, 121, 249, 97, 17, 132, 168, 87,\n        182, 85\n    ];\n    assert(result == expected);\n}\n\n#[test]\nfn test_base64_decode() {\n    // Raw bh: GxMlgwLiypnVrE2C0Sf4yzhcWTkAhSZ5+WERhKhXtlU\n    // Translated directly to ASCII (with padding byte character stripped)\n    let expected: [u8; 43] = [\n        71, 120, 77, 108, 103,\n        119, 76, 105, 121, 112,\n        110, 86, 114, 69, 50,\n        67, 48, 83, 102, 52,\n        121, 122, 104, 99, 87,\n        84, 107, 65, 104, 83,\n        90, 53, 43, 87, 69,\n        82, 104, 75, 104, 88,\n        116, 108, 85\n    ];\n\n    let input: [u8; 32] = [\n        27, 19, 37, 131, 2, 226, 202, 153, 213, 172,\n        77, 130, 209, 39, 248, 203, 56, 92, 89, 57,\n        0, 133, 38, 121, 249, 97, 17, 132, 168, 87,\n        182, 85\n    ];\n\n    let result: [u8; 43] = base64_decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_base64_decode_slash() {\n    let input: [u8; 1] = [63]; // '/' in Base64\n    let result: [u8;1] = base64_decode_elements(input);\n\n    // Should map to '/' in ASCII, which is 47\n    assert(result[0] == 47);\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir_base64v0.2.2/src/lib.nr"},"361":{"source":"use dep::bignum::BigNum;\nuse dep::bignum::runtime_bignum::BigNumInstance;\nuse dep::bignum::runtime_bignum::BigNumTrait;\nuse dep::bignum::runtime_bignum::BigNumInstanceTrait;\n\nuse crate::types::{RSA, BN1024, BN2048, BNInst1024, BNInst2048, RSA1024, RSA2048};\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n\n    for i in 0..32 {\n        // Padded hash is reversed\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] = [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i as u32 < 52 + ps_len as u32 {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i as u32 == 52 + ps_len as u32 {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i as u32 == 53 + ps_len as u32 {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\nimpl<BN, BNInstance, let NumBytes: u32> RSA<BN, BNInstance, NumBytes>  where BN: BigNumTrait, BNInstance: BigNumInstanceTrait<BN> {\n    /**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @details The fourth function parameter is required to define the value of `NBytes`\n *          when converting a BigNum into a byte array, the number of bytes is required and currently cannot be inferred.\n *          Once numeric generics can be derived by applying operations to other numeric generics the need for this will go away.\n *\n * @note The exponent `e` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\n    pub fn verify_sha256_pkcs1v15(_: Self, instance: BNInstance, msg_hash: [u8; 32], sig: BN, exponent: u32) -> bool {\n        assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n        let mut exponentiated = instance.mul(sig, sig); // sig^2\n\n        if exponent == 65537 {\n            // e = 65537 = 1 0000 0000 0000 0001\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2 * sig^2 = sig^4\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^64\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^128\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^256\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^512\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^1024\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2048\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^4096\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8192\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16384\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32768\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^65536\n        }\n        // otherwise, e = 3 = 11\n\n        exponentiated = instance.mul(exponentiated, sig); // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n\n        let mut padded_sha256_hash_bytes: [u8; NumBytes] = exponentiated.to_le_bytes();\n        compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n    }\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_1024() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst1024 = BigNumInstance::new(\n        [\n        0xe908724e0d28a1565511879e00f063, 0x58dea28d5112982c8ab8597d3e611f, 0xb115f9878acc910a47b41ac8d5f763, 0xc71b0a719c2283f710f86024737cee, 0x9ee9eb73e95b84f033af5217337427, 0x8fcab34c99cc2661dd57de15ae2110, 0xa38db8a829eec5550342f6f66334dc, 0xd7c4b32fd351a47d860fda1897330e, 0x98c92a33a0f33fd7\n    ],\n        [\n        0x55582e8ba08822783fbd7d07390be2, 0x1d7d83f9dce3983c66f440dcc2f33e, 0x6072d13c84a4cb304f58fbabe782e7, 0x0cee5e0dd62bc54d15a91a4ea3bc50, 0xc485e6f946c45cf660fba4f49325cb, 0x1f0e45df0464b065c94e84ed1dad8c, 0xe4c7b3976310ea239059d834b545f3, 0xd418145200fa77235f5f8d852b121f, 0x01acf0bd16cad9bd8f\n    ]\n    );\n    let signature: BN1024 = BigNum::from_array(\n        [\n        0x393f230b55a12fb7bb39c7edd2cf48, 0x78f7d0a217d340407cae4f39b8f001, 0x603909ff76a519f3c8e96d695d462e, 0x0640ab230b459bf4b20b4823a5b850, 0x02ba190de61a85074b18e228231984, 0xe1424c0779825707aa433ecb86c388, 0xbed8087d947a9c6c56625ad20c91aa, 0x7da4a0c2eee3a3c0d61e892ab4ada9, 0x6ef98a936c8bf8e5\n    ]\n    );\n\n    let rsa: RSA1024 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world\".as_bytes());\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0x183b4cadacea64716b6535b25a86ad, 0x129a32e9fbd374949e81b080546c2b, 0x9276332765f54b9b4d6fe23f4983a4, 0x91df05fde1a414c9fbf38808a01032, 0x97ca171c382e082ddd6c81be090902, 0x97161dde47ed979939451704b72648, 0x3b66f0c93f8ddbc62bb99f6b8fad2d, 0xc3a046fcad814d8938da372cd84d2a, 0xfe903cfe3ee4de6de3916023bb87f2, 0x8be5fd99c8b46dce9aab27ce4b3883, 0x0d99dfe50dd2288123804872da8543, 0xbb6d8afef8b2c7e3b86ad96973d4e5, 0x17e08fa3c5391279b844581f67825c, 0x09511f4a436abe495bfbfcc254d9c5, 0xf80d02572d620eab5ad7ecfbe2c20c, 0x2a5307402a05f59ba232ad0c8366d0, 0x7b9169630b317c38d549a86f85fcfc, 0xf2\n    ],\n        [\n        0xf4effa025abe90db41dc5bb5934a5f, 0x2596b25aa09f6a0e290accebbef006, 0x330e9567ec5eca92b7a8ce72ad3d83, 0xccf98d178ec4017e4947cadc02da7c, 0xaed6044ffeeb12de4d1e67aedfda78, 0xb5ae8a5a4637b632800e2f41dfbf0a, 0x8304360d359cf2f0d5d97c039f9b04, 0x53cde0d0633c0e66e1da9a118f6a96, 0xf9a83822351097bb1ed123d10290f5, 0xeb489c7f7227c09ca0117264dcf04f, 0x6a1b3618478a235f438adf84533177, 0x71c03085e38a87f5ec8e51c27dde98, 0xcf3e89d9cf253ef61d65d4431334d9, 0xa5a1a59e98fb7f49c746149324201d, 0x38f46c635f884f24c254eaa37981d6, 0x1c42be15dd95e1ac5bf01972b24ff9, 0x4555dd506d1f89e61279293c03db90, 0x010e\n    ]\n    );\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x5f0937ed1aacbdb83991e21c89ca8a, 0x5a1fa4ef2faf4042401c9121c73874, 0x7379fbb7713fbf807d250f7401afb8, 0x9cc5ce8813f3a83a72b681a4d434b2, 0x11cb49ac2ee1f9bed8a008b8327e1e, 0xf3362524f1224e48827b34a62f6ace, 0x3498a2944e32a3798fe9da684b32ae, 0xc346c33528bcdf7a06805126a29402, 0x6ac93f2fa68f270ec73674eae24380, 0x222c72de080496533ceeb8af827910, 0xc22889b311a53203278b942ca67100, 0x93d75567f7fe9ee7ca9871a0cb09f9, 0x049dabd976a9574847b1614f6b739c, 0xdc66b621dbae623df9b657b52fa1b0, 0xf37e82cc1eced382e11fc32e673f67, 0xe50545eb9027f1144a0ba7bbb0c886, 0xb6193409539c515d3c55a45c5734b1, 0x4b\n    ]\n    );\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0xc6a1c5e80ce354c6b00ccf20cf3a1d, 0x178d135f925a03eceb25f79bab56ee, 0x13ab3d6d8a5c5586752b5a3bc74ec3, 0x3d13b47b152367e3e2fc014d03d19f, 0xe89a7278a2945b4a672011691db30f, 0x5b4c1b061378143629dbb29dea1e4, 0x26a48b6f4e8df1472fd4fc12b17c18, 0xc7c92ead0ce810520cf3a8267254c1, 0x806b8cdba93909e9d9a71ee1bcdac2, 0x703ef80f8eb703b84c201366dff1c7, 0x7361034bb2c4c081aad8b1bcca83de, 0xb23c7e1109e65e6d08fa72cc862008, 0x750bc927874455782cd2d6fd5a51f6, 0xf0b83665fbf8cb5cf31cee9f89848e, 0x20d447b08953c7ce3330197938a8ae, 0x11a08bb5a2241c6a2a69f930d8b28b, 0xef5bca8dd582570a44705cb123d09e, 0xb7\n    ],\n        [\n        0xbc93ee57c1c8adc53f0a995a6221ca, 0x2a9b43587534b20dd85a5233329f10, 0xc587fd488f64eed02adc1f462f7448, 0xf1484d37676bb0e800996757382522, 0xc2126c48221aa61c9f52c6b918bab3, 0x8660c861dd52ed958beaf6c6c2cff0, 0x5edd9dc4f02a000f350948c70bdf94, 0x6f3b9603149272e9b232a379a017bb, 0x950fd85cffbdf4476b1cb66c1f63d6, 0xee459417b1a56b6f7ef3b89e385ac, 0x48daeef6d1a055f3746ab71058e137, 0x3cbc0ba96d541feee92dd27f9d0306, 0x6a2a42384cc388fa113ee80317e0a0, 0x43b4f89c508a42d309f295c0d9f3a5, 0x8d8c28b05f71b962b40ea906ff407f, 0x390a7989eb9cecc5827cb00e1ca693, 0x4cbf158eabf7e96ef7f2586d0ce613, 0x164\n    ]\n    );\n\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x19772b9af8a031170a7844ce4f3d7c, 0x4808e817258f57805a7326f70bcd74, 0xca8f3f98e374d52100115bfa645a7d, 0x49547189edff3b683fee267e717b7f, 0x96f263b47e96925f3b5898a7389ceb, 0x4cc50a893da91d0e085fc6656b30bc, 0x67e84ff92d88c0ad2c17ad2701309e, 0x095326818578173289665fcd9ad788, 0x775c6e85b745065db9411b9d579763, 0xad0f20c8a5265dfca4080ca877a2b8, 0xbfd199372f1680b3bc583a08bd8ba9, 0x663476ca3e5ede3e5976887db2c4e5, 0x531192309d0d49fed47c0216c27f9e, 0x37d26d31c86b951ca1c17b517063b7, 0x3cdb362ed5dfd06568eb9a9bbb6a91, 0x14520b9c23f583314729a9d858bca9, 0x5e0505067ada1026721d45997bf2c4, 0x3e\n    ]\n    );\n\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 3));\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir_rsav0.3.1/lib/src/rsa.nr"},"364":{"source":"use dep::std;\nuse crate::utils::u60_representation::U60Repr;\nuse crate::utils::split_bits;\nuse crate::BigNum;\n/**\n * @brief runtime_bignum::BigNumTrait defines methods available to BigNum *if* the modulus is not known at compile time.\n *        e.g. RSA where the modulus is a witness value as it changes for every RSA signature\n *        tee `lib.nr` for a trait definition where the modulus is known at compile time\n **/\ntrait BigNumTrait {\n    fn new() -> Self;\n    fn one() -> Self;\n    fn from(limbs: [Field]) -> Self;\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self;\n    fn to_le_bytes<let NBytes: u32>(val: Self) -> [u8; NBytes];\n    fn get(self) -> [Field];\n    fn get_limb(self, idx: u64) -> Field;\n    fn set_limb(&mut self, idx: u32, value: Field);\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n    fn validate_in_range(self);\n    fn validate_quotient_in_range(self);\n    fn __is_zero(self) -> bool;\n    fn __eq(self, rhs: Self) -> bool;\n}\n\n/**\n * @brief BigNumInstanceTrait defines methods available to a runtime BigNumInstance.\n *        BigNumInstance wraps the modulus parameter (as well as a Barret reduction parameter),\n *        which is required for the majority of BigNum operations\n **/\ntrait BigNumInstanceTrait<BN> where BN: BigNumTrait {\n    fn modulus(self) -> BN;\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BN;\n    fn eq(self, lhs: BN, rhs: BN) -> bool;\n    fn __neg(self, val: BN) -> BN;\n    fn __add(self, lhs: BN, rhs: BN) -> BN;\n    fn __sub(self, lhs: BN, rhs: BN) -> BN;\n    fn __mul(self, lhs: BN, rhs: BN) -> BN;\n    fn __div(self, lhs: BN, rhs: BN) -> BN;\n    fn __batch_invert<let M: u32>(self, x: [BN; M]) -> [BN; M];\n    fn __udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn __invmod(self, val: BN) -> BN;\n    fn __pow(self, val: BN, exponent: BN) -> BN;\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BN, BN);\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    );\n\n    fn validate_in_field(self, val: BN);\n    fn validate_gt(self, lhs: BN, rhs: BN);\n    fn assert_is_not_equal(self, lhs: BN, rhs: BN);\n    fn neg(self, val: BN) -> BN;\n    fn add(self, lhs: BN, rhs: BN) -> BN;\n    fn sub(self, lhs: BN, rhs: BN) -> BN;\n    fn mul(self, lhs: BN, rhs: BN) -> BN;\n    fn div(self, lhs: BN, rhs: BN) -> BN;\n    fn udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn udiv(self, numerator: BN, divisor: BN) -> BN;\n    fn umod(self, numerator: BN, divisor: BN) -> BN;\n\n}\n\n/**\n * @brief BigNumParamsTrait defines a \"field\" with which to parametrise BigNum.\n * @description The \"field\" does not need to be prime, any value *should* work (TODO: test!)\n**/\ntrait BigNumParamsTrait<let N: u32> {\n    /**\n     * @brief modulus_bits = log2(modulus) rounded up\n     **/\n    fn modulus_bits() -> u32;\n\n    fn has_multiplicative_inverse() -> bool { true }\n}\n\nstruct  BigNumInstance<let N: u32, Params> {\n    \n    /**\n     * @brief modulus: all BigNum operations are evaluated modulo this value\n     **/\n    modulus: [Field; N],\n\n    /**\n     * @brief modulus but represented in a U60Repr form\n     **/\n    modulus_u60: U60Repr<N, 2>,\n    modulus_u60_x4: U60Repr<N, 4>,\n\n    // /**\n    //  * @brief double_modulus: used when performing negations and subtractions\n    //  **/\n    double_modulus: [Field; N],\n    // /**\n    //  * @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    //  **/\n    redc_param: [Field; N],\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> {\n    // some strange circular dependency problem means we need to define `new` as a member of BigNumTrait as well as a definition outside of the trait\n    // (delete this method to see. BigNumInstance methods that use BigNum::new() error out, and I can't find a way of declaring BigNum to satisfy BigNumTrait as part of the BigNumInstance definition because BigNumInstance has no contextual knowledge of the BigNum type...)\n    fn new() -> Self {\n        BigNum { limbs: [0; N] }\n    }\n    fn one() -> BigNum<N, Params> {\n        let mut result: Self = BigNum { limbs: [0; N] };\n        result.limbs[0] = 1;\n        result\n    }\n}\n\nimpl<let N: u32, Params> BigNumTrait for BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn new() -> Self {\n        BigNum::new()\n    }\n    fn one() -> Self {\n        BigNum::one()\n    }\n\n    fn from(limbs: [Field]) -> Self {\n        BigNum { limbs: limbs.as_array() }\n    }\n\n    /**\n     * @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n     * @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n     *               is precisely large enough to cover Params::modulus_bits()\n     * @param x: input byte array\n     **/\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> BigNum<N, Params> {\n        let num_bits = NBytes * 8;\n        let modulus_bits = Params::modulus_bits();\n        assert(num_bits >= modulus_bits);\n        assert(num_bits - modulus_bits < 8);\n        let mut result = BigNum::new();\n\n        let excess_bytes = N * 15 - NBytes;\n        let final_limb_bytes = 15 - excess_bytes;\n        let mut limb: Field = 0;\n        let mut k = 0;\n        for _j in 0..final_limb_bytes {\n            limb *= 256;\n            limb += x[k] as Field;\n            k += 1;\n        }\n        result.limbs[N - 1] = limb;\n\n        for i in 1..N {\n            let mut limb: Field = 0;\n            for _j in 0..15 {\n                limb *= 256;\n                limb += x[k] as Field;\n                k += 1;\n            }\n            result.limbs[N - i - 1] = limb;\n        }\n\n        // max_bits_in_most_significant_byte should be known at comptime. if not...messy!\n        let mut max_bits_in_most_significant_byte = 8 - (num_bits - modulus_bits);\n\n        let most_significant_byte: Field = x[0] as Field;\n\n        most_significant_byte.assert_max_bit_size(max_bits_in_most_significant_byte as u32);\n        result\n    }\n\n    fn to_le_bytes<let NBytes: u32>(val: BigNum<N, Params>) -> [u8; NBytes] {\n        let nbytes = (Params::modulus_bits() / 8) + (Params::modulus_bits() % 8 != 0) as u32;\n        assert(nbytes <= NBytes);\n\n        let mut result: [u8; NBytes] = [0; NBytes];\n        for i in 0..N - 1 {\n            let limb_bytes: [u8; 15] = val.limbs[i].to_le_bytes();\n            for j in 0..15 {\n                result[i * 15 + j] = limb_bytes[j];\n            }\n        }\n        let last_limb_bytes: [u8; 15] = val.limbs[N - 1].to_le_bytes();\n        let num_last_bytes = (NBytes - (N - 1) * 15);\n        for i in 0..num_last_bytes {\n            result[(N-1) * 15 + i] = last_limb_bytes[i];\n        }\n        result\n    }\n\n    fn get(self) -> [Field] {\n        self.limbs\n    }\n    fn get_limb(self, idx: u64) -> Field {\n        self.limbs[idx]\n    }\n    fn set_limb(&mut self, idx: u32, value: Field) {\n        self.limbs[idx] = value;\n    }\n\n    /**\n     * @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n     * @description should be cheaper than using an IF statement (TODO: check!)\n     **/\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let mut result: Self = lhs;\n        for i in 0..N {\n            result.limbs[i] = (lhs.limbs[i] - rhs.limbs[i]) * predicate as Field + rhs.limbs[i];\n        }\n        result\n    }\n\n    /**\n     * @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n     **/\n    fn validate_in_range(self) {\n        for i in 0..(N - 1) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120);\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    /**\n     * @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n     * @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n     *              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n     *              Why is this?\n     *              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n     *                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n     *                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n     *              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n     *\n     *              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n     *              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n     **/\n    fn validate_quotient_in_range(self) {\n        for i in 0..(N) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        // Note: replace magic number 6 with definition\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120) + 6;\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    fn __is_zero(self) -> bool {\n        self.__is_zero_impl()\n    }\n\n    fn __eq(self, rhs: Self) -> bool {\n        self.__eq_impl(rhs)\n    }\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn from_array(limbs: [Field; N]) -> BigNum<N, Params> {\n        BigNum { limbs }\n    }\n\n    unconstrained fn __is_zero_impl(self) -> bool {\n        let mut result: bool = true;\n        for i in 0..N {\n            result = result & (self.limbs[i] == 0);\n        }\n        result\n    }\n\n    unconstrained fn __eq_impl(lhs: Self, rhs: Self) -> bool {\n        lhs.limbs == rhs.limbs\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstanceTrait<BigNum<N, Params>> for BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn modulus(self) -> BigNum<N, Params> {\n        BigNum { limbs: self.modulus }\n    }\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        self.__derive_from_seed_impl(seed)\n    }\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ### NOTE: these functions call unconstrained internal implementations because trait impl modifiers are not supported \n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn __neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__neg_impl(val)\n    }\n\n    fn __add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add_impl(lhs, rhs)\n    }\n\n    fn __sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__sub_impl(lhs, rhs)\n    }\n\n    fn __mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__mul_impl(lhs, rhs)\n    }\n\n    fn __div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__div_impl(lhs, rhs)\n    }\n\n    fn __batch_invert<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        self.batch_invert_impl(x)\n    }\n\n    fn __invmod(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__invmod_impl(val)\n    }\n\n    fn __pow(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__pow_impl(val, exponent)\n    }\n\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__compute_quadratic_expression_impl(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        )\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    /**\n     * @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n     * @description The expression is of the form (when evaluated as an integer relation):\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * Note: this method requires the remainder term of the expression to be ZERO\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The expensive parts of this algorithm are the following:\n     *      1. evaluating the limb products required to compute `lhs * rhs`\n     *      2. applying range constraints to validate the result is 0\n     *\n     * Range constraints are needed for the following reason:\n     * When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n     * Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n     * Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n     * To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n     * (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n     * To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n     * We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n     * TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n     * I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n     * TODO: explain why we apply a 126-bit range check, this feels like a magic number\n     * (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n     * TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n     * \n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) {\n        // use an unconstrained function to compute the value of the quotient\n        let (quotient, _, borrow_flags): (BigNum<N, Params>, BigNum<N, Params>, [Field; 2 * N]) = unsafe {\n            self.__compute_quadratic_expression_with_borrow_flags(\n                lhs_terms,\n                lhs_flags,\n                rhs_terms,\n                rhs_flags,\n                linear_terms,\n                linear_flags\n            )\n        };\n        // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n        // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n        quotient.validate_quotient_in_range();\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        // (should be a compile-time check...unconstrained function?)\n\n        // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n        let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t4: [Field; N] = [0; N];\n\n        // TODO: this is super nasty as it requires a multiplication\n        let double_modulus: [Field; N] = self.double_modulus;\n        for k in 0..NUM_PRODUCTS {\n            for i in 0..N {\n                for j in 0..LHS_N {\n                    // note: if is_negative is not known at comptime this is very expensive\n                    if (lhs_flags[k][j]) {\n                        t0[k][i] -= lhs_terms[k][j].limbs[i];\n                        t0[k][i] += double_modulus[i];\n                    } else {\n                        t0[k][i] += lhs_terms[k][j].limbs[i];\n                    }\n                }\n                for j in 0..RHS_N {\n                    if (rhs_flags[k][j]) {\n                        t1[k][i] -= rhs_terms[k][j].limbs[i];\n                        t1[k][i] += double_modulus[i];\n                    } else {\n                        t1[k][i] += rhs_terms[k][j].limbs[i];\n                    }\n                }\n            }\n        }\n        for i in 0..N {\n            for j in 0..ADD_N {\n                if (linear_flags[j]) {\n                    t4[i] -= linear_terms[j].limbs[i];\n                    t4[i] += double_modulus[i];\n                } else {\n                    t4[i] += linear_terms[j].limbs[i];\n                }\n            }\n        }\n\n        // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n        // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n        // so that we can ensure that no limbs will underflow for an honest Prover\n        let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n        // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n        // TODO: this is super nasty as it requires a multiplication\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    if k == 0 {\n                        let new_term = t0[k][i] * t1[k][j] - quotient.limbs[i] * self.modulus[j];\n                        std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                        product_limbs[i + j] += new_term;\n                    } else {\n                        product_limbs[i + j] += t0[k][i] * t1[k][j];\n                    }\n                }\n                if (NUM_PRODUCTS == 0) {\n                    product_limbs[i + j] -= quotient.limbs[i] * self.modulus[j];\n                }\n            }\n            product_limbs[i] += t4[i];\n        }\n\n        // each limb product represents the sum of 120-bit products.\n        // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n        // where no more than 64 limb products are summed together.\n        // TODO: check in unconstrained function that this condition is satisfied\n        // TODO: define trade-offs regarding the value of borrow_shift\n        // (the larger the value, the greater the range check that is required on product_limbs)\n        // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n        // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n\n        // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n        //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n        // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n        borrow_flags[0].assert_max_bit_size(1);\n        product_limbs[0] += borrow_flags[0] * borrow_shift;\n        for i in 1..(N + N - 2) {\n            borrow_flags[i].assert_max_bit_size(1);\n            product_limbs[i] += \n                (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n        }\n        product_limbs[N + N - 2] -= borrow_flags[N + N - 3] * borrow_carry;\n\n        // Final step: Validate `product_limbs` represents the integer value `0`\n        // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n        // i.e. we need to do the following for each limb `i`:\n        //      1. validate the limb's low-120 bits equals zero\n        //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n        //      3. add the carry into limb `i+1`\n        // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n        // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n        // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n        //  where k is the number of bits in the prime field)\n        // We then add the result into the next limb and repeat.\n        let hi_shift: Field = 0x1000000000000000000000000000000;\n        let hi_downshift: Field = 1 / hi_shift;\n        for i in 0..N + N - 2 {\n            product_limbs[i] *= hi_downshift;\n            std::as_witness(product_limbs[i]);\n            product_limbs[i].assert_max_bit_size(126); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n            product_limbs[i + 1] += product_limbs[i];\n        }\n        // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n        assert(product_limbs[N + N - 2] == 0);\n    }\n\n    fn validate_in_field(self, val: BigNum<N, Params>) {\n        // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n        let mut p_minus_self: [Field; N] = [0; N];\n        let modulus: [Field; N] = self.modulus;\n        for i in 0..N {\n            p_minus_self[i] = modulus[i] - val.limbs[i];\n        }\n        let borrow_flags = unsafe {\n            self.__validate_in_field_compute_borrow_flags(val)\n        };\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        p_minus_self[0] += borrow_flags[0] as Field * two_pow_120;\n        for i in 1..N - 1 {\n            p_minus_self[i] += (borrow_flags[i] as Field * two_pow_120 - borrow_flags[i-1] as Field);\n        }\n        p_minus_self[N - 1] -= borrow_flags[N - 2] as Field;\n        let mut compare = val;\n        compare.limbs = p_minus_self;\n        compare.validate_in_range();\n    }\n\n    /**\n     * @brief Validate self != other\n     * @details If A == B, then A == B mod N.\n     *          We can efficiently evaluate A == B mod N where N = circuit modulus\n     *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n     *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n     *          (todo: compute how tiny)\n     **/\n    fn assert_is_not_equal(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        let mut l: Field = 0;\n        let mut r: Field = 0;\n        let mut modulus_mod_n: Field = 0;\n        let mut two_pow_120: Field = 0x1000000000000000000000000000000;\n        let modulus = self.modulus;\n        for i in 0..N {\n            l *= two_pow_120;\n            r *= two_pow_120;\n            modulus_mod_n *= two_pow_120;\n            l += lhs.limbs[N - i - 1];\n            r += rhs.limbs[N - i - 1] ;\n            modulus_mod_n += modulus[N - i - 1];\n        }\n\n        // lhs can be either X mod N or P + X mod N\n        // rhs can be either Y mod N or P + Y mod N\n        // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n        let mut diff = l - r;\n        let mut target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n        assert(target != 0, \"asssert_is_not_equal fail\");\n    }\n\n    fn eq(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> bool {\n        let diff = self.sub(lhs, rhs);\n        // if self == other, possible values of `diff` will be `p` or `0`\n        // (the subtract operator constrains diff to be < ceil(log(p)))\n        // TODO: can do this more efficiently via witngen in unconstrained functions?\n        let mut is_equal_modulus: bool = true;\n        let mut is_equal_zero: bool = true;\n        for i in 0..N {\n            is_equal_modulus = is_equal_modulus & (diff.limbs[i] == self.modulus[i]);\n            is_equal_zero = is_equal_zero & (diff.limbs[i] == 0);\n        }\n        is_equal_modulus | is_equal_zero\n    }\n\n    fn neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe {\n            self.__neg_with_flags(val)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let result_limb = modulus[0] - val.limbs[0] - result.limbs[0] + (borrow_flags[0] as Field * borrow_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] - val.limbs[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + (borrow_flags[i] as Field * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val.limbs[N - 1] - result.limbs[N - 1] - borrow_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    fn add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) = unsafe {\n            self.__add_with_flags(lhs, rhs)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut subtrahend: [Field; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let result_limb = lhs.limbs[0] + rhs.limbs[0] - subtrahend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] + rhs.limbs[i]\n                - subtrahend[i]\n                - result.limbs[i]\n                - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] + rhs.limbs[N - 1]\n            - subtrahend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    // validate that lhs - rhs does not underflow i.e. lhs > rhs\n    fn validate_gt(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags) = unsafe {\n            self.__validate_gt_remainder(lhs, rhs)\n        };\n\n        result.validate_in_range();\n\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0] - 1\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n    }\n\n    fn sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) = unsafe {\n            self.__sub_with_flags(lhs, rhs)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let result = self.__mul(lhs, rhs);\n        self.evaluate_quadratic_expression([[lhs]], [[false]], [[rhs]], [[false]], [result], [true]);\n        result\n    }\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        assert(\n            Params::has_multiplicative_inverse(), \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\"\n        );\n        let result = self.__div(lhs, rhs);\n        self.evaluate_quadratic_expression([[result]], [[false]], [[rhs]], [[false]], [lhs], [true]);\n        result\n    }\n\n    /**\n     * @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn __udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__udiv_mod_impl(numerator, divisor)\n    }\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let (quotient, remainder) = BigNumInstance::__udiv_mod_impl(self, numerator, divisor);\n\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        self.evaluate_quadratic_expression(\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false]\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        self.validate_gt(divisor, remainder);\n        (quotient, remainder)\n    }\n\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. return param is floor(numerator / divisor)\n     **/\n    fn udiv(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).0\n    }\n\n    /**\n     * @brief udiv_mod performs integer modular reduction\n     *\n     * i.e. 1. numerator % divisor = return value\n     **/\n    fn umod(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).1\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C  O  N  S  T  R  U  C  T  O  R  S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn new(modulus: [Field; N], redc_param: [Field; N]) -> Self {\n        Self {\n            redc_param,\n            modulus,\n            modulus_u60: U60Repr::from(modulus),\n            modulus_u60_x4: U60Repr::from(modulus),\n            double_modulus: get_double_modulus(modulus)\n        }\n    }\n\n    unconstrained fn __derive_from_seed_impl<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        let mut rolling_seed = seed;\n\n        let mut to_reduce: [Field; 2 * N] = [0; 2 * N];\n\n        let mut double_modulus_bits = Params::modulus_bits() * 2;\n        let mut double_modulus_bytes = (double_modulus_bits) / 8 + (double_modulus_bits % 8 != 0) as u32;\n\n        let mut last_limb_bytes = double_modulus_bytes % 15;\n        if (last_limb_bytes == 0) {\n            last_limb_bytes = 15;\n        }\n        let mut last_limb_bits = double_modulus_bits % 8;\n        if (last_limb_bits == 0) {\n            last_limb_bits = 8;\n        }\n\n        for i in 0..(N - 1) {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut lo: Field = 0;\n            let mut hi: Field = 0;\n            for j in 0..15 {\n                hi *= 256;\n                lo *= 256;\n\n                if (i < 2 * N - 2) {\n                    lo += hash[j + 15] as Field;\n                    hi += hash[j] as Field;\n                }\n            }\n            to_reduce[2 * i] = lo;\n            to_reduce[2 * i + 1] = hi;\n            rolling_seed[0] += 1;\n        }\n\n        {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut hi: Field = 0;\n            for j in 0..(last_limb_bytes - 1) {\n                hi *= 256;\n                hi += hash[j] as Field;\n            }\n            hi *= 256;\n            let last_byte = hash[last_limb_bytes - 1];\n            let mask = (1 as u64 << (last_limb_bits) as u8) - 1;\n            let last_bits = last_byte as u64 & mask;\n            hi += last_bits as Field;\n            to_reduce[2 * N - 2] = hi;\n        }\n\n        let (_, remainder) = __barrett_reduction(\n            to_reduce,\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n        let mut result = BigNum::new();\n        result.limbs = remainder;\n        result\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    unconstrained fn __validate_in_field_compute_borrow_flags(self: Self, val: BigNum<N, Params>) -> [bool; N] {\n        let mut flags: [bool; N] = [false; N];\n        let modulus: [Field; N] = self.modulus;\n        flags[0] = modulus[0].lt(val.limbs[0]);\n        for i in 1..N - 1 {\n            flags[i] = modulus[i].lt(val.limbs[i] + flags[i - 1] as Field);\n        }\n        flags\n    }\n\n    unconstrained fn __pow_impl(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x: U60Repr<N, 2> = U60Repr::from(exponent.limbs);\n\n        let num_bits = Params::modulus_bits() + 1;\n\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n\n        for i in 0..num_bits {\n            accumulator = self.__mul(accumulator, accumulator);\n            if x.get_bit(num_bits - i - 1) {\n                accumulator = self.__mul(accumulator, val);\n            }\n        }\n        accumulator\n    }\n\n    unconstrained fn __mul_with_quotient(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut mul: [Field; 2 * N] = [0; 2 * N];\n        for i in 0..N {\n            for j in 0..N {\n                mul[i + j] += lhs.limbs[i] * rhs.limbs[j];\n            }\n        }\n        let (q, r) = __barrett_reduction(\n            split_bits::__normalize_limbs(mul, 2 * N),\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut quotient = BigNum::from_array(q);\n        let mut remainder = BigNum::from_array(r);\n        (quotient, remainder)\n    }\n\n    unconstrained fn __mul_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let (_, b) = self.__mul_with_quotient(lhs, rhs);\n        b\n    }\n\n    unconstrained fn __add_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let y_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let mut z_u60 = x_u60 + y_u60;\n\n        if z_u60.gte(self.modulus_u60) {\n            z_u60 = z_u60 - self.modulus_u60;\n        }\n        let mut result = BigNum::from_array(U60Repr::into(z_u60));\n        result\n    }\n\n    /**\n     * @brief given an input `x`, compute `2p - x` (unconstrained)\n     *\n     * @description we subtract the input from double the modulus, because all constrained BigNum operations\n     *              only guarantee that the output is in the range [0, ceil(log2(p))].\n     *              I.E. the input may be larger than the modulus `p`.\n     *              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n     *              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n     *              because such a check is expensive and usually unneccesary.\n     */\n    unconstrained fn __neg_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result = BigNum::from_array(U60Repr::into(self.modulus_u60 - x_u60));\n        result\n    }\n\n    unconstrained fn __add_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n        let add_u60 = a_u60 + b_u60;\n\n        let overflow = add_u60.gte(self.modulus_u60);\n\n        let mut subtrahend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        if overflow {\n            subtrahend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + b_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((subtrahend_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - subtrahend_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                let idx = (i - 1) / 2;\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[idx] = carry as bool;\n                borrow_flags[idx] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n\n        (result, carry_flags, borrow_flags, overflow)\n    }\n\n    unconstrained fn __validate_gt_remainder(\n        _: Self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N]) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let mut b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60);\n        b_u60 += U60Repr::one();\n        assert(underflow == false, \"BigNum::validate_gt check fails\");\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((b_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - b_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[i/2] = carry as bool;\n                borrow_flags[i/2] = borrow as bool;\n            }\n        }\n\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags)\n    }\n\n    unconstrained fn __sub_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60 + U60Repr::one());\n\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        if underflow {\n            addend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((b_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - b_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[i/2] = carry as bool;\n                borrow_flags[i/2] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags, underflow)\n    }\n\n    unconstrained fn __neg_with_flags(self, val: BigNum<N, Params>) -> (BigNum<N, Params>, [bool; N]) {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        let mut borrow_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            borrow = ((x_u60.limbs[i] + borrow_in) > self.modulus_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.modulus_u60.limbs[i] - x_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n            if ((i & 1) == 1) {\n                borrow_flags[i / 2] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, borrow_flags)\n    }\n\n    /**\n     * @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n     * @description see `__neg` for why we use 2p instead of p\n     **/\n    unconstrained fn __sub_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add(lhs, self.__neg(rhs))\n    }\n\n    unconstrained fn __invmod_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let one: BigNum<N, Params> = BigNum::one();\n        let one_u60: U60Repr<N, 2> = U60Repr::from(one.limbs);\n        let exponent = self.modulus_u60.sub(one_u60.add(one_u60));\n        let mut result = BigNum::from_array(U60Repr::into(exponent));\n        self.__pow(val, result)\n    }\n\n    unconstrained fn batch_invert_impl<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>; M] = [BigNum::new(); M];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn batch_invert_slice_impl(self, x: [BigNum<N, Params>]) -> [BigNum<N, Params>] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>] = [BigNum::new()];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n            result = result.push_back(BigNum::new());\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn __div_impl(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        let t0 = self.__invmod(divisor);\n        self.__mul(numerator, t0)\n    }\n\n    /**\n     * @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n     **/\n    // NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n    // To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n    // We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n    // Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n    // Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\n    unconstrained fn __add_linear_expression<let M: u32>(\n        self,\n        x: [BigNum<N, Params>; M],\n        flags: [bool; M]\n    ) -> ([Field; N]) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut sum: [Field; N] = [0; N];\n        // TODO: ugly! Will fail if input array is empty\n        let modulus2: [Field;N] = self.double_modulus;\n        for i in 0..M {\n            if (flags[i]) {\n                for j in 0..N {\n                    sum[j] = sum[j] + modulus2[j] - x[i].limbs[j];\n                    assert(x[i].limbs[j].lt(modulus2[j]));\n                }\n            } else {\n                for j in 0..N {\n                    sum[j] = sum[j] + x[i].limbs[j];\n                }\n            }\n        }\n        // problem if we normalize when used in computing quotient\n        sum\n    }\n\n    /**\n     * @brief computes the limb products of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_product<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> [Field; 2 * N] {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut lhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut rhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut add: [Field; N] = [0; N];\n\n        for i in 0..NUM_PRODUCTS {\n            lhs[i] = self.__add_linear_expression(lhs_terms[i], lhs_flags[i]);\n            rhs[i] = self.__add_linear_expression(rhs_terms[i], rhs_flags[i]);\n        }\n\n        let add: [Field; N] = self.__add_linear_expression(linear_terms, linear_flags);\n\n        let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    mulout[i + j] += (lhs[k][i] * rhs[k][j]);\n                }\n            }\n            mulout[i] += add[i];\n        }\n        mulout\n    }\n\n    /**\n     * @brief computes the quotient/remainder of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_impl<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mulout = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n        // TODO: ugly! Will fail if input slice is empty\n        let k  = Params::modulus_bits();\n\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            k,\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r)\n    }\n\n    /**\n     * @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n     * @description The expression is of the form:\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n     * For example, when computing the product a * b - q * p = 0, it is possible that:\n     *      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n     *      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n     * In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n     * In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n     *\n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    unconstrained fn __compute_quadratic_expression_with_borrow_flags<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>, [Field; 2 * N]) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n\n        let mut mulout_p = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n        let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n        let modulus: [Field; N] = self.modulus;\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            Params::modulus_bits(),\n            modulus,\n            self.modulus_u60_x4\n        );\n        assert(remainder == [0; N]);\n\n        for i in 0..N {\n            for j in 0..N {\n                mulout_n[i + j] += quotient[i] * modulus[j];\n            }\n        }\n\n        // compute borrow flags from mulout_p and mulout_n\n        let mut borrow_flags: [Field; 2 * N] = [0; 2 * N];\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        let downshift: Field = 1 / two_pow_120;\n\n        // determine whether we need to borrow from more significant limbs.\n        // initial limb is \"simple\" comparison operation\n        // TODO: check how expensive `lt` operator is w.r.t. witness generation\n        borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n        // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n        // and there is nothing to borrow against for the final limb.\n        let mut hi_bits = (mulout_p[0] - mulout_n[0] + (borrow_flags[0] * borrow_shift)) * downshift;\n        for i in 1..(N + N - 2) {\n            // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n            // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n            //     * downshift;\n            mulout_p[i] += hi_bits;\n\n            // determine whether negative limb values are greater than positive limb values\n            let underflow: Field = mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n            borrow_flags[i] = underflow;\n\n            hi_bits = (mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)) * downshift;\n        }\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r, borrow_flags)\n    }\n\n    unconstrained fn __udiv_mod_impl(\n        _: Self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut quotient_u60: U60Repr<N, 2> = U60Repr::from([0; N]);\n        let mut remainder_u60: U60Repr<N, 2> = U60Repr::from(numerator.limbs);\n\n        let mut divisor_u60: U60Repr<N, 2> = U60Repr::from(divisor.limbs);\n        let b = divisor_u60;\n\n        let mut bit_difference = remainder_u60.get_msb() - divisor_u60.get_msb();\n\n        let mut accumulator_u60: U60Repr<N, 2> = U60Repr::one();\n        divisor_u60 = divisor_u60.shl(bit_difference);\n        accumulator_u60 = accumulator_u60.shl(bit_difference);\n\n        if (divisor_u60.gte(remainder_u60 + U60Repr::one())) {\n            divisor_u60.shr1();\n            accumulator_u60.shr1();\n        }\n        for _ in 0..(N * 120) {\n            if (remainder_u60.gte(b) == false) {\n                break;\n            }\n\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (remainder_u60.gte(divisor_u60)) {\n                remainder_u60 -= divisor_u60;\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient_u60 = quotient_u60 + accumulator_u60;\n            }\n            divisor_u60.shr1(); // >>= 1;\n            accumulator_u60.shr1(); //  >>= 1;\n        }\n\n        (\n            BigNum::from_array(U60Repr::into(quotient_u60)), BigNum::from_array(U60Repr::into(remainder_u60))\n        )\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [Field; N]) -> [Field; N] {\n    let TWO_POW_120: Field = 0x1000000000000000000000000000000;\n    let m: U60Repr<N, 2> = U60Repr::from(modulus);\n    let mut result: [Field; N] = U60Repr::into(m + m);\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n\nunconstrained fn __barrett_reduction<let N: u32>(\n    x: [Field; 2 * N],\n    redc_param: [Field; N],\n    k: u32,\n    modulus: [Field; N],\n    modulus_u60: U60Repr<N, 4>\n) -> ([Field; N], [Field; N]) {\n    let mut mulout: [Field; 3 * N]  = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout[i + j] += x[i] * redc_param[j];\n        }\n    }\n    mulout = split_bits::__normalize_limbs(mulout, 3 * N - 1);\n    let mulout_u60: U60Repr<N, 6> = U60Repr::new(mulout);\n    let mut quotient_u60 = mulout_u60.shr((k + k));\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = quotient_u60.into_field_array();\n    let mut partial_quotient: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..2 * N {\n        partial_quotient[i] = partial_quotient_full[i];\n    }\n    // quotient_mul_modulus can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus: [Field; 2 * N]  = [0; 2 * N];\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N]  = [0; 2 * N];\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus[i + j] += partial_quotient[i] * modulus[j];\n        }\n    }\n\n    for i in 0..(N + N) {\n        let (lo, hi) = split_bits::split_120_bits(quotient_mul_modulus[i]);\n        quotient_mul_modulus_normalized[i] = lo;\n        // TODO: what is faster, leaving this if statement in or out?\n        // (array is size-1 too large so we can tolerate adding 0 into max element)\n        if (i + 1 < N + N) {\n            quotient_mul_modulus[i + 1] += hi;\n        }\n    }\n    let quotient_mul_modulus_u60: U60Repr<N, 4> = U60Repr::new(quotient_mul_modulus_normalized);\n\n    let x_u60 : U60Repr<N, 4> = U60Repr::new(x);\n    let mut remainder_u60 = x_u60 - quotient_mul_modulus_u60;\n\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    } else {}\n\n    let q: [Field; N] = U60Repr::into(quotient_u60);\n    let r: [Field; N] = U60Repr::into(remainder_u60);\n\n    (q, r)\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/runtime_bignum.nr"},"397":{"source":"\n// Decomposes a single field into two 120 bit fields and a carry\nunconstrained pub fn split_120_bits(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let offsets: [Field; 17] = [\n        1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000, 0x10000000000000000, 0x1000000000000000000, 0x100000000000000000000, 0x10000000000000000000000, 0x1000000000000000000000000, 0x100000000000000000000000000, 0x10000000000000000000000000000, 0x1000000000000000000000000000000, 0x100000000000000000000000000000000\n    ];\n\n    for i in 0..15 {\n        low += (x_bytes[i] as Field) * offsets[i];\n        high += (x_bytes[i + 15] as Field) * offsets[i];\n    }\n    high += (x_bytes[30] as Field) * offsets[15];\n    high += (x_bytes[31] as Field) * offsets[16];\n    // TDOO: investigate why this is triggered in BigCurve crate? it shouldn't be?\n    //   assert(x_bytes[31] == 0);\n    (low, high)\n}\n\n/**\n * @brief Decomposes a single field into two 60 bit fields\n *\n * @description Expects the input limb to be in the range [0, ..., 2^{120 - 1}]\n **/\nunconstrained pub fn split_60_bits(x: Field) -> (u64, u64) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: u64 = 0;\n    let mut high: u64 = 0;\n\n    let offsets: [u64; 8] = [1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000];\n    for i in 0..8 {\n        low += (x_bytes[i] as u64) * offsets[i];\n        high += (x_bytes[i + 8] as u64) * offsets[i];\n    }\n    let t1 = low >> 60;\n    let mask = ((1 as u64) << 60 as u8) - 1;\n    low = low & mask;\n    high = (high << 4) | t1;\n    (low, high)\n}\n\nunconstrained pub(crate) fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32\n) -> [Field; N] {\n    let mut normalized: [Field; N] = [0; N];\n    let mut inp: _ = input;\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(inp[i]);\n\n        normalized[i]= lo;\n        inp[i + 1] +=  hi;\n    }\n    {\n        let (lo, hi) = split_120_bits(inp[range - 1]);\n        normalized[range - 1]= lo;\n        assert(hi == 0);\n    }\n    normalized\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/utils/split_bits.nr"},"398":{"source":"use crate::utils::split_bits;\nuse crate::utils::msb::get_msb64;\n\n/**\n * @brief U60Repr represents a BigNum element as a sequence of 60-bit unsigned integers.\n *\n * @description: used in unconstrained functions when computing witness values.\n * It is helpful to use u60 types when evaluating addition operations that can overflow the field modulus,\n * as well as when performing bit shifts.\n */\nstruct U60Repr<let N: u32, let NumSegments: u32> {\n    limbs: [u64; N * NumSegments]\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Add for U60Repr<N, NumSegments> {\n    fn add(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut carry: u64 = 0;\n        for i in 0..N * NumSegments {\n            let mut add: u64 = self.limbs[i] + b.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            result.limbs[i] = add;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Sub for U60Repr<N, NumSegments> {\n    fn sub(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        for i in 0..N * NumSegments {\n            borrow = ((b.limbs[i] + borrow_in) > self.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.limbs[i] - b.limbs[i] - borrow_in;\n            result.limbs[i] = sub;\n            borrow_in = borrow;\n        }\n\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::From<[Field; N]> for U60Repr<N, NumSegments> {\n    fn from(input: [Field; N]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N) {\n            let (lo, hi) = unsafe {\n                split_bits::split_60_bits(input[i])\n            };\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::Into<[Field; N]> for U60Repr<N, NumSegments> {\n    fn into(x: U60Repr<N, NumSegments>) -> [Field; N] {\n        let mut result: [Field; N] = [0; N];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..N {\n            result[i] = x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::cmp::Eq for U60Repr<N, NumSegments> {\n    fn eq(self, other: Self) -> bool {\n        self.limbs == other.limbs\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> U60Repr<N, NumSegments> {\n\n    unconstrained fn new<let NumFieldSegments: u32>(x: [Field; N * NumFieldSegments]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N * NumFieldSegments) {\n            let (lo, hi) = split_bits::split_60_bits(x[i]);\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n\n    unconstrained fn one() -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        result.limbs[0] = 1;\n        result\n    }\n\n    unconstrained fn into_field_array(x: U60Repr<N, NumSegments>) -> [Field; N * NumSegments / 2] {\n        let mut result: [Field; N * NumSegments / 2] = [0; N * NumSegments / 2];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..(N * NumSegments / 2) {\n            result[i]= x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n\n    unconstrained fn gte(self, b: Self) -> bool {\n        let mut result = false;\n        let mut early_exit = false;\n        for i in 0..(N * NumSegments) {\n            if (b.limbs[(N * NumSegments) - 1 - i] < self.limbs[((N * NumSegments) - 1 - i)]) {\n                result = true;\n                early_exit = true;\n                break;\n            } else if (b.limbs[(N * NumSegments) - 1 - i] != self.limbs[((N * NumSegments) - 1 - i)]) {\n                result = false;\n                early_exit = true;\n                break;\n            }\n        }\n        if (early_exit == false) {\n            result = (self.limbs[0] == b.limbs[0]);\n        }\n        result\n    }\n\n    fn get_bit(self, bit: u32) -> bool {\n        let segment_index = bit / 60;\n        let uint_index = bit % 60;\n\n        let limb: u64 = self.limbs[segment_index];\n        let value = (limb >> uint_index as u8) & 1;\n        value == 1\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = shift % 60;\n        let remainder_shift = 60 - limb_shift;\n        let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        result.limbs[0] = (self.limbs[0 + num_shifted_limbs] >> limb_shift as u8);\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i + num_shifted_limbs];\n            result.limbs[i] = (value >> limb_shift as u8);\n            let remainder: u64 = (value << remainder_shift as u8) & mask;\n            result.limbs[i - 1] = result.limbs[i - 1] + remainder;\n        }\n        result\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr1(&mut self) {\n        let value = self.limbs[NumSegments * N - 1];\n        self.limbs[NumSegments * N - 1] = value >> 1;\n\n        let mut remainder = (value & 1) << 59;\n\n        for i in 0..N * NumSegments {\n            let value = self.limbs[N * NumSegments - 1 - i];\n            self.limbs[N * NumSegments - 1 - i] = (value >> 1) + remainder;\n            remainder = (value << 59) & 0x800000000000000;\n        }\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shl(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; NumSegments * N] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = (shift % 60) as u8;\n        let remainder_shift: u8 = 60 - limb_shift as u8;\n\n        // 83\n        // limb shift = 1\n        // inside shift = 19 bits to the left\n        // meaning we have 19 carry bits and 41 remainder bits\n        let mask: u64 = (1 as u64 << 60) - 1;\n        //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        let value = self.limbs[0];\n\n        let mut remainder = (value >> remainder_shift);\n        result.limbs[num_shifted_limbs] = (value << (limb_shift as u8)) & mask;\n\n        // shift 84. num shifted = 1\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i];\n            let upshift = ((value << (limb_shift as u8)) + remainder) & mask;\n            result.limbs[i + num_shifted_limbs] = upshift;\n            remainder = (value >> remainder_shift);\n            // let remainder: u64 = (self.limbs.get(i + num_shifted_limbs as u64) << remainder_shift as u8) & mask;\n            // result.limbs.set(i - 1, result.limbs.get(i - 1) + remainder);\n        }\n        result\n    }\n\n    fn increment(&mut self) {\n        let mut carry: u64 = 0;\n\n        let mut add: u64 = self.limbs[0] + 1;\n        carry = add >> 60;\n        add = add - (carry << 60);\n        self.limbs[0] = add;\n\n        for i in 1..NumSegments * N {\n            let mut add: u64 = self.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            self.limbs[i] = add;\n        }\n    }\n\n    unconstrained  fn get_msb(val: Self) -> u32 {\n        let mut count = 0;\n        for i in 0..N * NumSegments {\n            let v = val.limbs[((N * NumSegments) - 1 - i)];\n            if (v > 0) {\n                count = 60 * ((N * NumSegments) - 1 - i) + get_msb64(v);\n                break;\n            }\n        }\n        count\n    }\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/utils/u60_representation.nr"}},"names":["main"],"brillig_names":["build_msg_block_iter","pad_msg_block","attach_len_to_msg_block","split_60_bits","__mul_impl","__compute_quadratic_expression_with_borrow_flags","build_msg_block_iter","build_msg_block_iter","directive_integer_quotient","directive_invert"]}