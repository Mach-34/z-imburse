{"transpiled":true,"noir_version":"0.35.0+b848cc128d2dc2b461581f21a35509a1af9065a7-x8664","name":"ZImburseEscrow","functions":[{"name":"give_recurring_entitlement","is_unconstrained":false,"custom_attributes":["private"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"to","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"verifier_id","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}}},{"name":"public_teardown_call_request","type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":"","brillig_names":["get_public_keys_and_partial_address","random","decompose_hint","notify_created_note_oracle_wrapper","get_key_validation_request","lt_32_hint","lte_16_hint","build_msg_block_iter","pad_msg_block","attach_len_to_msg_block","build_msg_block_iter","emit_encrypted_note_log_oracle_wrapper","notify_created_note_oracle_wrapper","compute_raw_note_log_unconstrained","emit_encrypted_note_log_oracle_wrapper","directive_invert","directive_integer_quotient"]},{"name":"public_dispatch","is_unconstrained":true,"custom_attributes":["public"],"abi":{"error_types":{"3715688037512703171":{"error_kind":"fmtstring","item_types":[],"length":16}},"parameters":[{"name":"selector","type":{"kind":"field"},"visibility":"private"}],"return_type":null},"bytecode":"","debug_symbols":"","brillig_names":["public_dispatch"],"assert_messages":{"1792":"Array index out of bounds","1079":"Array index out of bounds","299":"Array index out of bounds","1445":"Array index out of bounds","665":"Not initialized","1488":"Array index out of bounds","1098":"attempt to add with overflow","775":"SharedImmutable already initialized","1354":"attempt to add with overflow","1732":"Array index out of bounds","306":"Array index out of bounds","1385":"attempt to add with overflow","1251":"Array index out of bounds","2019":"Array index out of bounds","1562":"attempt to add with overflow","1038":"Array index out of bounds","1215":"attempt to add with overflow","1983":"attempt to add with overflow","1136":"attempt to add with overflow","1325":"Array index out of bounds","2026":"Array index out of bounds","1892":"Array index out of bounds","1313":"attempt to add with overflow","1435":"attempt to add with overflow","1624":"Array index out of bounds","2069":"attempt to add with overflow","588":"SharedImmutable already initialized","1411":"Array index out of bounds","1588":"Array index out of bounds","1265":"attempt to add with overflow","1765":"Array index out of bounds","1186":"Array index out of bounds","1119":"attempt to add with overflow","1363":"attempt to add with overflow","1162":"Array index out of bounds","1930":"Array index out of bounds","1973":"attempt to add with overflow","1004":"Array index out of bounds","992":"attempt to add with overflow","523":"Initialization hash does not match","968":"Array index out of bounds","2047":"attempt to add with overflow","1023":"attempt to add with overflow","1724":"Array index out of bounds","1913":"attempt to add with overflow","755":"Storage slot 0 not allowed. Storage slots must start from 1.","1011":"Array index out of bounds","1456":"attempt to add with overflow","999":"attempt to add with overflow","1499":"attempt to add with overflow","1810":"Array index out of bounds","1609":"attempt to add with overflow","1542":"Array index out of bounds","1987":"Array index out of bounds","1152":"attempt to add with overflow","317":"attempt to add with overflow","1341":"Array index out of bounds","1530":"attempt to add with overflow","1786":"attempt to add with overflow","1920":"Array index out of bounds","1128":"Array index out of bounds","805":"Not initialized","1506":"attempt to subtract with overflow","1951":"attempt to add with overflow","1884":"Array index out of bounds","1427":"Array index out of bounds","1872":"attempt to add with overflow","1549":"Array index out of bounds","1994":"Array index out of bounds","1092":"attempt to add with overflow","2037":"attempt to add with overflow","1202":"Array index out of bounds","1580":"Array index out of bounds","1568":"attempt to add with overflow","1757":"Array index out of bounds","1824":"attempt to add with overflow","1367":"Array index out of bounds","1233":"Array index out of bounds","1745":"attempt to add with overflow","1642":"Array index out of bounds","295":"attempt to add with overflow","1374":"Array index out of bounds","1173":"attempt to add with overflow","1941":"attempt to add with overflow","2051":"Array index out of bounds","1716":"Array index out of bounds","1515":"Array index out of bounds","168":"attempt to add with overflow","1704":"attempt to add with overflow","2015":"attempt to add with overflow","144":"attempt to add with overflow","2058":"Array index out of bounds","120":"attempt to add with overflow","1144":"Array index out of bounds","1333":"Array index out of bounds","1656":"attempt to add with overflow","1900":"Array index out of bounds","809":"Function get_title can only be called statically","1510":"attempt to subtract with overflow","1955":"Array index out of bounds","96":"attempt to add with overflow","1108":"Array index out of bounds","529":"Initializer address is not the contract deployer","651":"attempt to add with overflow","1419":"attempt to add with overflow","261":"attempt to add with overflow","1596":"Array index out of bounds","1072":"Array index out of bounds","1773":"Array index out of bounds","1194":"Array index out of bounds","1962":"Array index out of bounds","1060":"attempt to add with overflow","670":"Function emit_entitlement_nullifier can only be called internally","2005":"attempt to add with overflow"}},{"name":"get_admin_private","is_unconstrained":false,"custom_attributes":["private","view"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}}},{"name":"public_teardown_call_request","type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":"","brillig_names":["get_public_data_witness","lt_32_hint","decompose_hint","lte_16_hint","pack_returns_oracle_wrapper","directive_integer_quotient","directive_invert"]},{"name":"emit_entitlement_nullifier","is_unconstrained":true,"custom_attributes":["public","internal"],"abi":{"error_types":{},"parameters":[{"name":"nullifier","type":{"kind":"field"},"visibility":"private"}],"return_type":null},"bytecode":"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","debug_symbols":"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","brillig_names":["emit_entitlement_nullifier"],"assert_messages":{"180":"attempt to add with overflow","369":"Array index out of bounds","14":"Not initialized","139":"SharedImmutable already initialized","206":"Array index out of bounds","238":"Array index out of bounds","357":"attempt to add with overflow","398":"attempt to add with overflow","188":"Array index out of bounds","217":"attempt to add with overflow","246":"Array index out of bounds","19":"Function emit_entitlement_nullifier can only be called internally","112":"Storage slot 0 not allowed. Storage slots must start from 1.","377":"Array index out of bounds","295":"Array index out of bounds","196":"attempt to add with overflow","385":"Array index out of bounds","277":"Array index out of bounds","309":"attempt to add with overflow","172":"Array index out of bounds","230":"Array index out of bounds","259":"attempt to add with overflow"}},{"name":"constructor","is_unconstrained":true,"custom_attributes":["public","initializer"],"abi":{"error_types":{},"parameters":[{"name":"dkimRegistry","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"escrowRegistry","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"usdc_token","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"title","type":{"kind":"string","length":60},"visibility":"private"}],"return_type":null},"bytecode":"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","debug_symbols":"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","brillig_names":["constructor"],"assert_messages":{"704":"attempt to add with overflow","893":"Array index out of bounds","698":"attempt to add with overflow","960":"attempt to add with overflow","881":"attempt to add with overflow","555":"attempt to add with overflow","732":"Array index out of bounds","860":"Array index out of bounds","1049":"attempt to add with overflow","592":"attempt to add with overflow","909":"Array index out of bounds","202":"Array index out of bounds","778":"Array index out of bounds","1028":"Array index out of bounds","571":"attempt to add with overflow","635":"attempt to add with overflow","760":"Array index out of bounds","946":"Array index out of bounds","745":"attempt to add with overflow","678":"Array index out of bounds","547":"Array index out of bounds","928":"Array index out of bounds","157":"attempt to add with overflow","666":"attempt to add with overflow","922":"attempt to add with overflow","724":"Array index out of bounds","852":"Array index out of bounds","651":"Array index out of bounds","840":"attempt to add with overflow","581":"Array index out of bounds","642":"attempt to subtract with overflow","191":"attempt to add with overflow","901":"Array index out of bounds","1020":"Array index out of bounds","563":"Array index out of bounds","496":"SharedImmutable already initialized","624":"Array index out of bounds","426":"Initializer address is not the contract deployer","685":"Array index out of bounds","420":"Initialization hash does not match","868":"Array index out of bounds","1008":"attempt to add with overflow","792":"attempt to add with overflow","213":"attempt to add with overflow","716":"Array index out of bounds","1036":"Array index out of bounds","646":"attempt to subtract with overflow","195":"Array index out of bounds"}},{"name":"get_title","is_unconstrained":true,"custom_attributes":["public","view"],"abi":{"error_types":{},"parameters":[],"return_type":{"abi_type":{"kind":"array","length":60,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"}},"bytecode":"JAAEAQIlAAQIfwAAJAAEAAMkAAQABB8AAAAABAAAAAMAAAhDIgAAAA4AAAQDAgQlAAQIQwAFJAAEPAYrAAAECAMrAAAFCAQrAAAGCAUiAAAAxzkAAAAIQwAAADweAAAABB4AAAAFMAAAAAAEAAAABQAAAAYkAAIBBQoAAgYFBCEAABUABDoBAAAeAAsABSQABwEGCgAHBQYEIQAAGgAEOgEAACoAAAUkAAQHBAAABAAEACQBBAEFAAAEBQIEKgAEByQABwAIKgIIBwAABAcCByoCCAcAAAQHAgcqAggHAAAEBwIHKgIIBwAABAcCByoCCAcAAAQHAgcqAggHKgEFBAAABAQCBCoCBAUqAAAEAAAEAAIAKgIFBCQABAEIJAAEBgUkAAQAByoABwMgADcMAAQDBQkhAACxAAkgADoqAQQFJAAEBAQAAAQFAgkAAAQJBAoqAQoDJAAEBQQAAAQFAgoAAAQKBAsqAQsJKgAABSQABD0EAAAEAAQAJAEEAQUAAAQFAgQkAAIACiQABDwLAAAECwQLKgAEDAwABAwLDRYADQ0hAABSAA0qAgoMAAAEDAIMIABMKgEFBAAABAQCBCoCBAUqAAAEAAAEAAIAKgIFBCoAAAUAAAQAAgAqAgcFJAAEHwokAAQ8CyUABAEAAAwkAAQCDSoABwYgAGEMAAQGDQ4hAABmAA4gAGQqAQQDIyoAAA8kAAQDEAAABAAQACQBBAEPAAAEDwIQKgAQESoCAxEAAAQRAhEqAgkRJAAEAhEMAAQGERIhAABzABI6AQAAAAAEDwISAAAEEgYRKgERECoAAA8kAAQgEgAABAASACQBBAEPAAAEDwISRQIAAAAQAAAAEgAAAAwAAAAfACQABB8RKwAAEggDKwAAEQgEIgAAANIqAAcOIACCDAAEDgoQIQAAiwAQIACFAAAEBggODgAEBg4PIQAAiQAPOgEAACoADgYgAGEqAQUQDAAEEAsRIQAAjwARIACrKgEEECoBBREkAAQfEwwABA4TFCEAAJUAFDoBAAAAAAQPAhQAAAQUDhMqARMSJAAEPBMMAAQRExUhAACcABU6AQAAKwAAEAgDJQAEAD0IBCIAAADlKwAIBQAUAAAEFAIVAAAEFRETKgISEyoCFAQqAQUUAAAEFAgRDgAEFBEQIQAAqQAQOgEAACoCEQUgAKsAAAQOCBAOAAQOEBEhAACvABE6AQAAKgAQDiAAgioBBAkcAAcDCgAABwYKCywAAAAACwAAAAokAAQGDAwABAMMDSEAALkADToBAAArAAAJCAMlAAQABwgEIgAAAOUrAAgFAAsAAAQLAg0AAAQNAwwqAgoMAAAEAwgJDgAEAwkKIQAAxAAKOgEAACoCCwQqAAkDIAA3JQAEAAAIBw0ABAgHCAUICBcACAgICCEAANEICAEABAgDCAcICSsBCAkIBgEABAgECAcICSsCCAYICQEABAgHAAIIByAAyCMlAAQAAggGBwAECAQIBggFKwAIBAgIJQAEAAAICQ0ABAgJCAUIChcACAoICiEAAOQICgMABAgIAAIICAEABAgDCAkICysBCAsIBgEABAgDCAgICysBCAsIBwEABAgDCAkICysCCAcICwEABAgDCAgICysCCAYICwEABAgJAAIICSAA1iMrAQgDCAYLAAQIBgACCAchAADpCAcgAOsrAAgDCAUgAPkrAAAACAUBAAQAAAgEAAAlAAQAAAgJDQAECAkIBAgKFwAICggKIQAA9wgKAQAECAMICQgLKwEICwgIAQAECAUICQgLKwIICAgLAQAECAkAAggJIADuJQEEAAEIBSAA+SMrABjKGMo=","debug_symbols":"5d3hTtswEAfwd8lnPvjOZ/uOV5mmqWwwVarKBGzShHj3JVvjBlLVGozsf8oX1NJL/XPi3LVJnD52X66vvn/9tN3f3N53lx8eu93t583D9nbfP3t8uuiu7ra73fbrp+m/uzD8Ifkdf/9tsx+e3j9s7h66SyosF931/svwMEr/Djfb3XV3WejpYhZssRxiLZUaSklPxAqTHYKFWY/RzCeis1I8RGdlexb98aKj9GY7BarBYRK8hD6/fc2XsQGz1ponljGY2KxhV0ojQ2n63gd7+Yf2fsU/xw8N6Hs3YO/cAIf3boDe3EBKNraQcmiNiaKcDtFFRV+OCea/9AzLxFcsI69YJr1imZP7p2Yds50WKo3s0u/3tYEw2YIxndoalsfsksxCY2ukEmmMLpFnW6O41qtrvXnWx+BaT6717FofXevFtT651ruutdF1rY2ua210XWvFda0V17VWXNdacV1rxXWtFde1VlzXWnFda8V1rRXXtTah77VJqz7NjhYn9JFTpOo1zPTLj5x6/DqHkBr64YD4+N4xHI9sljjgc/CMJ8949oyP2PhIoeLJXuLFMz55xmfP+Pans5jO41l4DGaRPG3g1OlbrprAVINjf7ps4CgWx6A4JWBxCIvDWJyIxREsTsLiZCwOVlYuWFm5YGVlxcrKipWVFSsrK1ZWVqysrFhZWbGysmJlZV08K6fj1W15zjEojgUszuJjR48clZccCkuvHtY6ltl47lm6TBCPh56J4on1E8E8AuZJYJ4M5ilgHgXzGJaHApiHwDxg+ZnA8jOB5WcCy88Elp8JLD/T/8zPk+DBM4+WGMZPkzI9h8D51OkJ5jpHhYWmwb97amvpKYfV9JRW01NeTU/janoqq+lpWk1P82p6WtbS07h4Pa2XyPUP8+wzW4xYx9CigHkSmCeDeQxrPMvi+5dpXT+TyezVE8E8AuZZfP9Kx/GcdO7JYJ4C5lEwj2F5UgDzEJhn6e+eHOtVqSxl7olgHgHzJDBPBvMUMI+CeQzLkwOYh8A8YPk5g+XnDJafM9j30wz2/XTxuSEtj4J5DMuz+HyMlofBPGDH6xafktHyoM/UPzvfmgr4hGulOtldJ1fzVj76XH3L5/iKfmOcej1sz+dGtEkch5pJOdFZ9PvonJ3bT4p+I50GH/1OOg2++Oaj35WjwUe/mU6Dj16jG3zXN0UhRa/R5/mGXqMbfN9V13xXXfNddc131TXfVdccV92n/umPzd12c7W7Pvw6x833/efJj3U8/Pz255U++Bc=","brillig_names":["get_title"],"assert_messages":{"20":"Not initialized","148":"Array index out of bounds","174":"attempt to add with overflow","155":"Array index out of bounds","136":"attempt to add with overflow","168":"attempt to add with overflow","114":"Array index out of bounds","184":"Array index out of bounds","25":"Function get_title can only be called statically","195":"attempt to add with overflow"}},{"name":"compute_note_hash_and_optionally_a_nullifier","is_unconstrained":true,"custom_attributes":[],"abi":{"error_types":{"12265343917440897559":{"error_kind":"fmtstring","item_types":[],"length":20}},"parameters":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"note_type_id","type":{"kind":"field"},"visibility":"private"},{"name":"compute_nullifier","type":{"kind":"boolean"},"visibility":"private"},{"name":"serialized_note","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"}},"bytecode":"","debug_symbols":"","brillig_names":["compute_note_hash_and_optionally_a_nullifier"]},{"name":"redeem_linode_entitlement","is_unconstrained":false,"custom_attributes":["private"],"abi":{"error_types":{"1756802668388977958":{"error_kind":"fmtstring","item_types":[],"length":17}},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"body","type":{"kind":"array","length":832,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"body_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"header","type":{"kind":"array","length":640,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"header_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"pubkey","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"pubkey_redc","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"from_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"subject_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"amount_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"amount_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"date_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"receipt_id_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"claim_secret_hash","type":{"kind":"field"},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}}},{"name":"public_teardown_call_request","type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::public_call_request::PublicCallRequest"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"address_note::aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"address_note::aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"address_note::aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"address_note::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"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","debug_symbols":"","brillig_names":["get_notes_internal","get_collapse_hints","decompose_hint","get_key_validation_request","notify_nullified_note_oracle_wrapper","get_public_data_witness","lt_32_hint","lte_16_hint","split_60_bits","build_msg_block_iter","pad_msg_block","attach_len_to_msg_block","__mul_impl","__compute_quadratic_expression_with_borrow_flags","build_msg_block_iter","pack_arguments_oracle_wrapper","call_private_function_internal","unpack_returns","enqueue_public_function_call_internal","pack_arguments_oracle_wrapper","directive_invert","directive_integer_quotient"]}],"outputs":{"globals":{"notes":[{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000850bb34d"},{"kind":"string","value":"AddressNote"},{"fields":[{"name":"address","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000be5b3a47"},{"kind":"string","value":"TransparentNote"},{"fields":[{"name":"amount","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"secret_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000008c1acdbf"},{"kind":"string","value":"TokenNote"},{"fields":[{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"amount","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":true}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000850bb34d"},{"kind":"string","value":"AddressNote"},{"fields":[{"name":"address","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000be5b3a47"},{"kind":"string","value":"TransparentNote"},{"fields":[{"name":"amount","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"secret_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000008c1acdbf"},{"kind":"string","value":"TokenNote"},{"fields":[{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"amount","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":true}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000be5b3a47"},{"kind":"string","value":"TransparentNote"},{"fields":[{"name":"amount","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"secret_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000d8f1a923"},{"kind":"string","value":"RecurringEntitlementNote"},{"fields":[{"name":"owner","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"revocation_npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"verifier_id","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"max_value","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000004"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000006"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000850bb34d"},{"kind":"string","value":"AddressNote"},{"fields":[{"name":"address","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000082f07638"},{"kind":"string","value":"EntitlementReceiptNote"},{"fields":[{"name":"recipient","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"verifier_id","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"max_value","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000005"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000008c1acdbf"},{"kind":"string","value":"TokenNote"},{"fields":[{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"amount","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":true}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"}],"storage":[{"fields":[{"name":"contract_name","value":{"kind":"string","value":"Token"}},{"name":"fields","value":{"fields":[{"name":"admin","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"minters","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}}],"kind":"struct"}},{"name":"balances","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}}],"kind":"struct"}},{"name":"total_supply","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000004"}}],"kind":"struct"}},{"name":"pending_shields","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000005"}}],"kind":"struct"}},{"name":"public_balances","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000006"}}],"kind":"struct"}},{"name":"symbol","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000007"}}],"kind":"struct"}},{"name":"name","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000008"}}],"kind":"struct"}},{"name":"decimals","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000009"}}],"kind":"struct"}}],"kind":"struct"}}],"kind":"struct"},{"fields":[{"name":"contract_name","value":{"kind":"string","value":"ZImburseDkimRegistry"}},{"name":"fields","value":{"fields":[{"name":"admin","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"dkim_registry","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}}],"kind":"struct"}}],"kind":"struct"}}],"kind":"struct"},{"fields":[{"name":"contract_name","value":{"kind":"string","value":"ZImburseEscrow"}},{"name":"fields","value":{"fields":[{"name":"definition","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"recurring_entitlements","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000007"}}],"kind":"struct"}},{"name":"entitlement_receipts","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000008"}}],"kind":"struct"}},{"name":"entitlement_nullifiers","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000009"}}],"kind":"struct"}}],"kind":"struct"}}],"kind":"struct"}]},"structs":{"functions":[{"fields":[{"name":"parameters","type":{"fields":[],"kind":"struct","path":"ZImburseEscrow::get_title_parameters"}},{"name":"return_type","type":{"kind":"array","length":60,"type":{"kind":"integer","sign":"unsigned","width":8}}}],"kind":"struct","path":"ZImburseEscrow::get_title_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"body","type":{"kind":"array","length":832,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"body_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"header","type":{"kind":"array","length":640,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"header_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"pubkey","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"pubkey_redc","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"from_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"subject_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"amount_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"amount_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"date_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"receipt_id_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"claim_secret_hash","type":{"kind":"field"}}],"kind":"struct","path":"ZImburseEscrow::redeem_linode_entitlement_parameters"}}],"kind":"struct","path":"ZImburseEscrow::redeem_linode_entitlement_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"dkimRegistry","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"escrowRegistry","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"usdc_token","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"title","type":{"kind":"string","length":60}}],"kind":"struct","path":"ZImburseEscrow::constructor_parameters"}}],"kind":"struct","path":"ZImburseEscrow::constructor_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"to","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"amount","type":{"kind":"field"}},{"name":"verifier_id","type":{"kind":"integer","sign":"unsigned","width":8}}],"kind":"struct","path":"ZImburseEscrow::give_recurring_entitlement_parameters"}}],"kind":"struct","path":"ZImburseEscrow::give_recurring_entitlement_abi"},{"fields":[{"name":"parameters","type":{"fields":[],"kind":"struct","path":"ZImburseEscrow::get_admin_private_parameters"}},{"name":"return_type","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"address_note::aztec::protocol_types::address::aztec_address::AztecAddress"}}],"kind":"struct","path":"ZImburseEscrow::get_admin_private_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"nullifier","type":{"kind":"field"}}],"kind":"struct","path":"ZImburseEscrow::emit_entitlement_nullifier_parameters"}}],"kind":"struct","path":"ZImburseEscrow::emit_entitlement_nullifier_abi"}]}},"file_map":{"100":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/keys/public_keys.nr","source":"use dep::protocol_types::{\n    address::PublicKeysHash, constants::GENERATOR_INDEX__PUBLIC_KEYS_HASH,\n    hash::poseidon2_hash_with_separator, point::{Point, POINT_LENGTH},\n    traits::{Deserialize, Serialize, Empty, is_empty, Hash}\n};\n\nglobal PUBLIC_KEYS_LENGTH: u32 = 12;\n\npub struct PublicKeys {\n    npk_m: NpkM,\n    ivpk_m: IvpkM,\n    ovpk_m: OvpkM,\n    tpk_m: TpkM,\n}\n\npub trait ToPoint {\n    fn to_point(self) -> Point;\n}\n\npub struct NpkM {\n    inner: Point\n}\n\nimpl ToPoint for NpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Serialize<POINT_LENGTH> for NpkM {\n    fn serialize(self) -> [Field; POINT_LENGTH] {\n        self.inner.serialize()\n    }\n}\n\n// Note: If we store npk_m_hash directly we can remove this trait implementation. See #8091\nimpl Hash for NpkM {\n    fn hash(self) -> Field {\n        self.inner.hash()\n    }\n}\n\npub struct IvpkM {\n    inner: Point\n}\n\nimpl ToPoint for IvpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Serialize<POINT_LENGTH> for IvpkM {\n    fn serialize(self) -> [Field; POINT_LENGTH] {\n        self.inner.serialize()\n    }\n}\n\npub struct OvpkM {\n    inner: Point\n}\n\nimpl Hash for OvpkM {\n    fn hash(self) -> Field {\n        self.inner.hash()\n    }\n}\n\nimpl ToPoint for OvpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Serialize<POINT_LENGTH> for OvpkM {\n    fn serialize(self) -> [Field; POINT_LENGTH] {\n        self.inner.serialize()\n    }\n}\n\npub struct TpkM {\n    inner: Point\n}\n\nimpl ToPoint for TpkM {\n    fn to_point(self) -> Point {\n        self.inner\n    }\n}\n\nimpl Empty for PublicKeys {\n    fn empty() -> Self {\n        PublicKeys {\n            npk_m: NpkM { inner: Point::empty() },\n            ivpk_m: IvpkM { inner: Point::empty() },\n            ovpk_m: OvpkM { inner: Point::empty() },\n            tpk_m: TpkM { inner: Point::empty() }\n        }\n    }\n}\n\nimpl Eq for PublicKeys {\n    fn eq(self, other: PublicKeys) -> bool {\n        (self.npk_m.inner == other.npk_m.inner)\n            & (self.ivpk_m.inner == other.ivpk_m.inner)\n            & (self.ovpk_m.inner == other.ovpk_m.inner)\n            & (self.tpk_m.inner == other.tpk_m.inner)\n    }\n}\n\nimpl PublicKeys {\n    pub fn hash(self) -> PublicKeysHash {\n        PublicKeysHash::from_field(\n            if is_empty(self) {\n            0\n        } else {\n            poseidon2_hash_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_KEYS_HASH as Field)\n        }\n        )\n    }\n}\n\nimpl Serialize<PUBLIC_KEYS_LENGTH> for PublicKeys {\n    fn serialize(self) -> [Field; PUBLIC_KEYS_LENGTH] {\n        [\n            self.npk_m.inner.x,\n            self.npk_m.inner.y,\n            self.npk_m.inner.is_infinite as Field,\n            self.ivpk_m.inner.x,\n            self.ivpk_m.inner.y,\n            self.ivpk_m.inner.is_infinite as Field,\n            self.ovpk_m.inner.x,\n            self.ovpk_m.inner.y,\n            self.ovpk_m.inner.is_infinite as Field,\n            self.tpk_m.inner.x,\n            self.tpk_m.inner.y,\n            self.tpk_m.inner.is_infinite as Field\n        ]\n    }\n}\n\nimpl Deserialize<PUBLIC_KEYS_LENGTH> for PublicKeys {\n    fn deserialize(serialized: [Field; PUBLIC_KEYS_LENGTH]) -> PublicKeys {\n        PublicKeys {\n            npk_m: NpkM { inner: Point { x: serialized[0], y: serialized[1], is_infinite: serialized[2] as bool } },\n            ivpk_m: IvpkM { inner: Point { x: serialized[3], y: serialized[4], is_infinite: serialized[5] as bool } },\n            ovpk_m: OvpkM { inner: Point { x: serialized[6], y: serialized[7], is_infinite: serialized[8] as bool } },\n            tpk_m: TpkM { inner: Point { x: serialized[9], y: serialized[10], is_infinite: serialized[11] as bool } }\n        }\n    }\n}\n\n#[test]\nunconstrained fn compute_public_keys_hash() {\n    let keys = PublicKeys {\n        npk_m: NpkM { inner: Point { x: 1, y: 2, is_infinite: false } },\n        ivpk_m: IvpkM { inner: Point { x: 3, y: 4, is_infinite: false } },\n        ovpk_m: OvpkM { inner: Point { x: 5, y: 6, is_infinite: false } },\n        tpk_m: TpkM { inner: Point { x: 7, y: 8, is_infinite: false } }\n    };\n\n    let actual = keys.hash();\n    let expected_public_keys_hash = 0x0fecd9a32db731fec1fded1b9ff957a1625c069245a3613a2538bd527068b0ad;\n\n    assert(actual.to_field() == expected_public_keys_hash);\n}\n\n#[test]\nunconstrained fn compute_empty_hash() {\n    let keys = PublicKeys::empty();\n\n    let actual = keys.hash();\n    let test_data_empty_hash = 0x0000000000000000000000000000000000000000000000000000000000000000;\n\n    assert(actual.to_field() == test_data_empty_hash);\n}\n\n#[test]\nunconstrained fn test_public_keys_serialization() {\n    let keys = PublicKeys {\n        npk_m: NpkM { inner: Point { x: 1, y: 2, is_infinite: false } },\n        ivpk_m: IvpkM { inner: Point { x: 3, y: 4, is_infinite: false } },\n        ovpk_m: OvpkM { inner: Point { x: 5, y: 6, is_infinite: false } },\n        tpk_m: TpkM { inner: Point { x: 7, y: 8, is_infinite: false } }\n    };\n\n    let serialized = keys.serialize();\n    let deserialized = PublicKeys::deserialize(serialized);\n\n    assert_eq(keys.npk_m.inner.x, deserialized.npk_m.inner.x);\n    assert_eq(keys.npk_m.inner.y, deserialized.npk_m.inner.y);\n    assert_eq(keys.ivpk_m.inner.x, deserialized.ivpk_m.inner.x);\n    assert_eq(keys.ivpk_m.inner.y, deserialized.ivpk_m.inner.y);\n    assert_eq(keys.ovpk_m.inner.x, deserialized.ovpk_m.inner.x);\n    assert_eq(keys.ovpk_m.inner.y, deserialized.ovpk_m.inner.y);\n    assert_eq(keys.tpk_m.inner.x, deserialized.tpk_m.inner.x);\n    assert_eq(keys.tpk_m.inner.y, deserialized.tpk_m.inner.y);\n}\n"},"102":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/keys/getters/mod.nr","source":"use dep::protocol_types::address::AztecAddress;\nuse crate::{\n    oracle::{keys::get_public_keys_and_partial_address, key_validation_request::get_key_validation_request},\n    keys::{public_keys::PublicKeys, constants::{NULLIFIER_INDEX, OUTGOING_INDEX}}\n};\n\nmod test;\n\nunconstrained pub fn get_nsk_app(npk_m_hash: Field) -> Field {\n    get_key_validation_request(npk_m_hash, NULLIFIER_INDEX).sk_app\n}\n\n// A helper function that gets app-siloed outgoing viewing key for a given `ovpk_m_hash`. This function is used\n// in unconstrained contexts only - when computing unconstrained note logs. The safe alternative is `request_ovsk_app`\n// function defined on `PrivateContext`.\nunconstrained pub fn get_ovsk_app(ovpk_m_hash: Field) -> Field {\n    get_key_validation_request(ovpk_m_hash, OUTGOING_INDEX).sk_app\n}\n\n// Returns all public keys for a given account, applying proper constraints to the context. We read all\n// keys at once since the constraints for reading them all are actually fewer than if we read them one at a time - any\n// read keys that are not required by the caller can simply be discarded.\npub fn get_public_keys(account: AztecAddress) -> PublicKeys {\n    let (hinted_canonical_public_keys, partial_address) = unsafe {\n        get_public_keys_and_partial_address(account)\n    };\n    assert_eq(\n        account, AztecAddress::compute(hinted_canonical_public_keys.hash(), partial_address), \"Invalid public keys hint for address\"\n    );\n\n    hinted_canonical_public_keys\n}\n"},"104":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/keys/point_to_symmetric_key.nr","source":"use dep::protocol_types::{constants::GENERATOR_INDEX__SYMMETRIC_KEY, scalar::Scalar, point::Point, utils::arr_copy_slice};\nuse crate::utils::point::point_to_bytes;\nuse std::{hash::sha256, embedded_curve_ops::multi_scalar_mul};\n\n// TODO(#5726): This function is called deriveAESSecret in TS. I don't like point_to_symmetric_key name much since\n// point is not the only input of the function. Unify naming with TS once we have a better name.\npub fn point_to_symmetric_key(secret: Scalar, point: Point) -> [u8; 32] {\n    let shared_secret: Point = multi_scalar_mul([point], [secret]);\n    let shared_secret = point_to_bytes(shared_secret);\n    let mut shared_secret_bytes_with_separator = [0 as u8; 33];\n    shared_secret_bytes_with_separator = arr_copy_slice(shared_secret, shared_secret_bytes_with_separator, 0);\n    shared_secret_bytes_with_separator[32] = GENERATOR_INDEX__SYMMETRIC_KEY;\n    sha256(shared_secret_bytes_with_separator)\n}\n\n#[test]\nunconstrained fn test_point_to_symmetric_key_matches_noir() {\n    // Value taken from \"derive shared secret\" test in encrypt_buffer.test.ts\n    let secret = Scalar {\n        lo: 0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n        hi: 0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n    };\n    let point = Point {\n        x: 0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n        y: 0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n        is_infinite: false\n    };\n\n    let key = point_to_symmetric_key(secret, point);\n\n    // The following value was generated by `encrypt_buffer.test.ts`.\n    // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n    let key_from_typescript = [\n        251, 232, 177, 34, 2, 174, 35, 92, 165, 118, 168, 3, 153, 140, 46, 210, 203, 154, 184, 158, 236, 33, 95, 77, 93, 120, 72, 88, 190, 209, 64, 159\n    ];\n    assert_eq(key, key_from_typescript);\n}\n"},"107":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/payload.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, scalar::Scalar, point::Point, constants::GENERATOR_INDEX__SYMMETRIC_KEY,\n    hash::poseidon2_hash_with_separator\n};\nuse std::{\n    aes128::aes128_encrypt, embedded_curve_ops::fixed_base_scalar_mul as derive_public_key,\n    hash::from_field_unsafe as fr_to_fq_unsafe, field::bn254::decompose\n};\n\nuse crate::{\n    oracle::random::random, utils::point::point_to_bytes, encrypted_logs::{header::EncryptedLogHeader},\n    keys::{point_to_symmetric_key::point_to_symmetric_key, public_keys::{OvpkM, IvpkM}}\n};\n\npub fn compute_encrypted_log<let P: u32, let M: u32>(\n    contract_address: AztecAddress,\n    ovsk_app: Field,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress,\n    plaintext: [u8; P]\n) -> [u8; M] {\n    let (eph_sk, eph_pk) = generate_ephemeral_key_pair();\n\n    let header = EncryptedLogHeader::new(contract_address);\n\n    let incoming_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ivpk);\n    let outgoing_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ovpk);\n    let incoming_body_ciphertext = compute_incoming_body_ciphertext(plaintext, eph_sk, ivpk);\n    let outgoing_body_ciphertext: [u8; 144] = compute_outgoing_body_ciphertext(recipient, ivpk, fr_to_fq(ovsk_app), eph_sk, eph_pk);\n\n    let mut encrypted_bytes: [u8; M] = [0; M];\n    // @todo We ignore the tags for now\n\n    let eph_pk_bytes = point_to_bytes(eph_pk);\n    for i in 0..32 {\n        encrypted_bytes[64 + i] = eph_pk_bytes[i];\n    }\n    for i in 0..48 {\n        encrypted_bytes[96 + i] = incoming_header_ciphertext[i];\n        encrypted_bytes[144 + i] = outgoing_header_ciphertext[i];\n    }\n    for i in 0..144 {\n        encrypted_bytes[192 + i] = outgoing_body_ciphertext[i];\n    }\n    // Then we fill in the rest as the incoming body ciphertext\n    let size = M - 336;\n    assert_eq(size, incoming_body_ciphertext.len(), \"ciphertext length mismatch\");\n    for i in 0..size {\n        encrypted_bytes[336 + i] = incoming_body_ciphertext[i];\n    }\n\n    // Current unoptimized size of the encrypted log\n    // incoming_tag (32 bytes)\n    // outgoing_tag (32 bytes)\n    // eph_pk (32 bytes)\n    // incoming_header (48 bytes)\n    // outgoing_header (48 bytes)\n    // outgoing_body (144 bytes)\n    // incoming_body_fixed (64 bytes)\n    // incoming_body_variable (P + 16 bytes padding)\n    encrypted_bytes\n}\n\n/// Converts a base field element to scalar field element.\n/// This is fine because modulus of the base field is smaller than the modulus of the scalar field.\nfn fr_to_fq(r: Field) -> Scalar {\n    let (lo, hi) = decompose(r);\n\n    Scalar { lo, hi }\n}\n\nfn generate_ephemeral_key_pair() -> (Scalar, Point) {\n    // @todo Need to draw randomness from the full domain of Fq not only Fr\n\n    // We use the randomness to preserve the privacy of both the sender and recipient via encryption, so a malicious\n    // sender could use non-random values to reveal the plaintext. But they already know it themselves anyway, and so\n    // the recipient already trusts them to not disclose this information. We can therefore assume that the sender will\n    // cooperate in the random value generation.\n    let randomness = unsafe {\n        random()\n    };\n\n    // We use the unsafe version of `fr_to_fq` because multi_scalar_mul (called by derive_public_key) will constrain\n    // the scalars.\n    let eph_sk = fr_to_fq_unsafe(randomness);\n    let eph_pk = derive_public_key(eph_sk);\n\n    (eph_sk, eph_pk)\n}\n\npub fn compute_incoming_body_ciphertext<let P: u32>(plaintext: [u8; P], eph_sk: Scalar, ivpk: IvpkM) -> [u8] {\n    let full_key = point_to_symmetric_key(eph_sk, ivpk.to_point());\n    let mut sym_key = [0; 16];\n    let mut iv = [0; 16];\n\n    for i in 0..16 {\n        sym_key[i] = full_key[i];\n        iv[i] = full_key[i + 16];\n    }\n    aes128_encrypt(plaintext, iv, sym_key)\n}\n\n/// Encrypts ephemeral secret key and recipient's ivpk --> with this information the recipient of outgoing will\n/// be able to derive the key with which the incoming log can be decrypted.\npub fn compute_outgoing_body_ciphertext(\n    recipient: AztecAddress,\n    recipient_ivpk: IvpkM,\n    ovsk_app: Scalar,\n    eph_sk: Scalar,\n    eph_pk: Point\n) -> [u8; 144] {\n    // Again, we could compute `eph_pk` here, but we keep the interface more similar\n    // and also make it easier to optimise it later as we just pass it along\n\n    let mut buffer = [0 as u8; 128];\n\n    let serialized_eph_sk_high: [u8; 32] = eph_sk.hi.to_be_bytes();\n    let serialized_eph_sk_low: [u8; 32] = eph_sk.lo.to_be_bytes();\n\n    let address_bytes: [u8; 32] = recipient.to_field().to_be_bytes();\n    let serialized_recipient_ivpk = point_to_bytes(recipient_ivpk.to_point());\n\n    for i in 0..32 {\n        buffer[i] = serialized_eph_sk_high[i];\n        buffer[i + 32] = serialized_eph_sk_low[i];\n        buffer[i + 64] = address_bytes[i];\n    }\n    for i in 0..32 {\n        buffer[i + 96] = serialized_recipient_ivpk[i];\n    }\n\n    // We compute the symmetric key using poseidon.\n    let full_key: [u8; 32] = poseidon2_hash_with_separator(\n        [ovsk_app.hi, ovsk_app.lo, eph_pk.x, eph_pk.y],\n        GENERATOR_INDEX__SYMMETRIC_KEY as Field\n    ).to_be_bytes();\n\n    let mut sym_key = [0; 16];\n    let mut iv = [0; 16];\n\n    for i in 0..16 {\n        sym_key[i] = full_key[i];\n        iv[i] = full_key[i + 16];\n    }\n    aes128_encrypt(buffer, iv, sym_key).as_array()\n}\n\nmod test {\n    use crate::{\n        encrypted_logs::payload::{compute_encrypted_log, compute_incoming_body_ciphertext, compute_outgoing_body_ciphertext},\n        keys::public_keys::{OvpkM, IvpkM}\n    };\n    use std::embedded_curve_ops::fixed_base_scalar_mul as derive_public_key;\n    use dep::protocol_types::{address::AztecAddress, point::Point, scalar::Scalar};\n    use std::test::OracleMock;\n\n    #[test]\n    unconstrained fn test_encrypted_log_matches_typescript() {\n        // All the values in this test were copied over from `tagged_log.test.ts`\n        let contract_address = AztecAddress::from_field(0x10f48cd9eff7ae5b209c557c70de2e657ee79166868676b787e9417e19260e04);\n        let ovsk_app = 0x03a6513d6def49f41d20373d2cec894c23e7492794b08fc50c0e8a1bd2512612;\n        let ovpk_m = OvpkM {\n            inner: Point {\n                x: 0x1961448682803198631f299340e4206bb12809d4bebbf012b30f59af73ba1a15,\n                y: 0x133674060c3925142aceb4f1dcd9f9137d0217d37ff8729ee5ceaa6e2790353d,\n                is_infinite: false\n            }\n        };\n        let ivpk_m = IvpkM {\n            inner: Point {\n                x: 0x260cd3904f6df16e974c29944fdc839e40fb5cf293f03df2eb370851d3a527bc,\n                y: 0x0eef2964fe6640e84c82b5d2915892409b38e9e25d39f68dd79edb725c55387f,\n                is_infinite: false\n            }\n        };\n\n        let plaintext = [\n            0, 0, 0, 1, 48, 22, 64, 206, 234, 117, 131, 145, 178, 225, 97, 201, 44, 5, 19, 241, 41, 2, 15, 65, 37, 37, 106, 253, 174, 38, 70, 206, 49, 9, 159, 92, 16, 244, 140, 217, 239, 247, 174, 91, 32, 156, 85, 124, 112, 222, 46, 101, 126, 231, 145, 102, 134, 134, 118, 183, 135, 233, 65, 126, 25, 38, 14, 4, 15, 228, 107, 229, 131, 183, 31, 74, 181, 183, 12, 38, 87, 255, 29, 5, 204, 207, 29, 41, 42, 147, 105, 98, 141, 26, 25, 79, 148, 78, 101, 153, 0, 0, 16, 39\n        ];\n\n        let eph_sk = 0x1358d15019d4639393d62b97e1588c095957ce74a1c32d6ec7d62fe6705d9538;\n        let _ = OracleMock::mock(\"getRandomField\").returns(eph_sk);\n\n        let recipient = AztecAddress::from_field(0x10ee41ee4b62703b16f61e03cb0d88c4b306a9eb4a6ceeb2aff13428541689a2);\n\n        let log: [u8; 448] = compute_encrypted_log(contract_address, ovsk_app, ovpk_m, ivpk_m, recipient, plaintext);\n\n        // The following value was generated by `tagged_log.test.ts`\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let encrypted_log_from_typescript = [\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 70, 12, 14, 67, 77, 132, 110, 193, 234, 40, 110, 64, 144, 235, 86, 55, 111, 242, 123, 221, 193, 170, 202, 225, 216, 86, 84, 159, 112, 31, 167, 126, 79, 51, 186, 47, 71, 253, 172, 99, 112, 241, 59, 197, 241, 107, 186, 232, 87, 187, 230, 171, 62, 228, 234, 42, 51, 145, 146, 238, 242, 42, 71, 206, 13, 244, 66, 111, 195, 20, 203, 98, 148, 204, 242, 145, 183, 156, 29, 141, 54, 44, 220, 194, 35, 229, 16, 32, 204, 211, 49, 142, 112, 82, 202, 116, 241, 254, 146, 42, 217, 20, 189, 70, 228, 182, 171, 205, 104, 27, 99, 171, 28, 91, 244, 21, 30, 130, 240, 5, 72, 174, 124, 97, 197, 157, 248, 193, 23, 193, 76, 46, 141, 144, 70, 211, 45, 67, 167, 218, 129, 140, 104, 190, 41, 110, 249, 209, 68, 106, 135, 164, 80, 235, 63, 101, 80, 32, 13, 38, 99, 145, 91, 11, 173, 151, 231, 247, 65, 153, 117, 229, 167, 64, 239, 182, 126, 235, 83, 4, 169, 8, 8, 160, 4, 235, 252, 21, 96, 84, 161, 69, 145, 145, 215, 254, 161, 117, 246, 198, 65, 89, 179, 194, 90, 19, 121, 12, 202, 114, 80, 195, 14, 60, 128, 105, 142, 100, 86, 90, 108, 157, 219, 22, 172, 20, 121, 195, 25, 159, 236, 2, 70, 75, 42, 37, 34, 2, 17, 149, 20, 176, 32, 18, 204, 56, 117, 121, 34, 15, 3, 88, 123, 64, 68, 74, 233, 63, 59, 131, 222, 194, 192, 167, 110, 217, 10, 128, 73, 129, 172, 61, 43, 12, 98, 165, 203, 191, 154, 161, 150, 4, 239, 95, 48, 60, 159, 33, 222, 142, 102, 73, 193, 236, 145, 197, 160, 216, 254, 113, 243, 25, 244, 251, 192, 222, 35, 7, 114, 101, 35, 152, 151, 112, 24, 32, 94, 138, 71, 160, 91, 68, 131, 217, 117, 140, 19, 147, 37, 197, 192, 21, 43, 172, 239, 239, 205, 15, 110, 76, 26, 211, 42, 117, 4, 15, 135, 145, 247, 37, 73, 84, 164, 149, 250, 35, 0, 205, 105, 178, 143, 104, 98, 100, 250, 193, 154, 136, 175, 177, 109, 225, 207, 252, 147, 250, 250, 189, 117, 147, 101, 230, 132\n        ];\n        assert_eq(encrypted_log_from_typescript, log);\n    }\n\n    #[test]\n    fn test_incoming_body_ciphertext_matches_typescript() {\n        // All the values in this test were copied over from `encrypted_note_log_incoming_body.test.ts`\n        let eph_sk = Scalar {\n            lo: 0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n            hi: 0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n        };\n        let ivpk = IvpkM {\n            inner: Point {\n                x: 0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n                y: 0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n                is_infinite: false\n            }\n        };\n        let plaintext = [\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3\n        ];\n\n        // `compute_incoming_body_ciphertext(...)` function then derives symmetric key from `eph_sk` and `ivpk` and encrypts\n        // the note plaintext using AES-128.\n        let ciphertext = compute_incoming_body_ciphertext(plaintext, eph_sk, ivpk);\n\n        // The following value was generated by `encrypted_note_log_incoming_body.test.ts`.\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let note_body_ciphertext_from_typescript = [\n            226, 240, 253, 6, 28, 52, 19, 131, 33, 132, 178, 212, 245, 62, 14, 190, 147, 228, 160, 190, 146, 61, 95, 203, 124, 153, 68, 168, 17, 150, 92, 0, 99, 214, 85, 64, 191, 78, 157, 131, 149, 96, 236, 253, 96, 172, 157, 30, 27, 176, 228, 74, 242, 190, 138, 48, 33, 93, 46, 37, 223, 130, 25, 245, 188, 163, 159, 223, 187, 24, 139, 206, 131, 154, 159, 130, 37, 17, 158, 114, 242, 141, 124, 193, 232, 54, 146, 96, 145, 100, 125, 234, 57, 43, 95, 115, 183, 39, 121, 232, 134, 229, 148, 25, 46, 77, 87, 127, 95, 7, 77, 188, 37, 234, 245, 142, 232, 87, 252, 28, 67, 67, 90, 214, 254, 89, 47, 68, 66, 187, 227, 8, 59, 162, 25, 141, 97, 141, 217, 197, 115, 15, 212, 202, 157, 41, 150, 62, 219, 57, 224, 92, 185, 212, 142, 94, 146, 41, 178, 145, 68, 169, 23, 185, 206, 138, 70, 47, 176, 210, 165, 236, 23, 206, 229, 108\n        ];\n\n        assert_eq(note_body_ciphertext_from_typescript.len(), ciphertext.len());\n\n        for i in 0..note_body_ciphertext_from_typescript.len() {\n            assert_eq(ciphertext[i], note_body_ciphertext_from_typescript[i]);\n        }\n    }\n\n    #[test]\n    fn test_encrypted_log_outgoing_body_matches_typescript() {\n        let eph_sk = Scalar {\n            lo: 0x00000000000000000000000000000000d0d302ee245dfaf2807e604eec4715fe,\n            hi: 0x000000000000000000000000000000000f096b423017226a18461115fa8d34bb\n        };\n        let recipient_ivsk = Scalar {\n            lo: 0x000000000000000000000000000000004828f8f95676ebb481df163f87fd4022,\n            hi: 0x000000000000000000000000000000000f4d97c25d578f9348251a71ca17ae31\n        };\n        let sender_ovsk_app = Scalar {\n            lo: 0x0000000000000000000000000000000074d2e28c6bc5176ac02cf7c7d36a444e,\n            hi: 0x00000000000000000000000000000000089c6887cb1446d86c64e81afc78048b\n        };\n\n        let eph_pk = derive_public_key(eph_sk);\n        let recipient_ivpk = IvpkM { inner: derive_public_key(recipient_ivsk) };\n\n        let recipient = AztecAddress::from_field(0xdeadbeef);\n\n        let ciphertext = compute_outgoing_body_ciphertext(recipient, recipient_ivpk, sender_ovsk_app, eph_sk, eph_pk);\n\n        // The following value was generated by `encrypted_log_outgoing_body.test.ts`\n        // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n        let outgoing_body_ciphertext_from_typescript = [\n            127, 182, 227, 75, 192, 197, 54, 47, 168, 134, 233, 148, 251, 46, 86, 12, 73, 50, 238, 50, 31, 174, 27, 202, 110, 77, 161, 197, 244, 124, 17, 100, 143, 150, 232, 14, 156, 248, 43, 177, 16, 82, 244, 103, 88, 74, 84, 200, 15, 65, 187, 14, 163, 60, 91, 22, 104, 31, 211, 190, 124, 121, 79, 92, 239, 65, 185, 106, 51, 178, 168, 137, 84, 43, 79, 158, 151, 152, 83, 42, 170, 13, 106, 209, 254, 74, 39, 145, 73, 215, 17, 234, 196, 89, 30, 58, 120, 127, 88, 69, 121, 61, 18, 206, 89, 118, 243, 238, 177, 71, 73, 47, 147, 4, 155, 25, 173, 248, 206, 52, 17, 180, 122, 186, 106, 191, 252, 102, 197, 91, 16, 39, 94, 91, 224, 30, 168, 177, 26, 144, 5, 124, 128, 6\n        ];\n\n        for i in 0..outgoing_body_ciphertext_from_typescript.len() {\n            assert_eq(ciphertext[i], outgoing_body_ciphertext_from_typescript[i]);\n        }\n        assert_eq(outgoing_body_ciphertext_from_typescript.len(), ciphertext.len());\n    }\n}\n"},"110":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/encrypted_note_emission.nr","source":"use crate::{\n    context::PrivateContext, note::{note_emission::NoteEmission, note_interface::NoteInterface},\n    keys::{getters::get_ovsk_app, public_keys::{PublicKeys, OvpkM, IvpkM}},\n    encrypted_logs::payload::compute_encrypted_log\n};\nuse dep::protocol_types::{hash::sha256_to_field, address::AztecAddress, abis::note_hash::NoteHash};\n\nfn compute_raw_note_log<Note, let N: u32>(\n    context: PrivateContext,\n    note: Note,\n    ovsk_app: Field,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress\n) -> (u32, [u8; 416 + N * 32], Field) where Note: NoteInterface<N> {\n    let note_header = note.get_header();\n    let note_hash_counter = note_header.note_hash_counter;\n    let storage_slot = note_header.storage_slot;\n\n    // TODO(#8589): use typesystem to skip this check when not needed\n    let note_exists = context.note_hashes.storage.any(|n: NoteHash| n.counter == note_hash_counter);\n    assert(note_exists, \"Can only emit a note log for an existing note.\");\n\n    let contract_address: AztecAddress = context.this_address();\n\n    let plaintext = note.to_be_bytes(storage_slot);\n    let encrypted_log: [u8; 416 + N * 32] = compute_encrypted_log(contract_address, ovsk_app, ovpk, ivpk, recipient, plaintext);\n    let log_hash = sha256_to_field(encrypted_log);\n\n    (note_hash_counter, encrypted_log, log_hash)\n}\n\nunconstrained fn compute_raw_note_log_unconstrained<Note, let N: u32>(\n    context: PrivateContext,\n    note: Note,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress\n) -> (u32, [u8; 416 + N * 32], Field) where Note: NoteInterface<N> {\n    let ovsk_app = get_ovsk_app(ovpk.hash());\n    compute_raw_note_log(context, note, ovsk_app, ovpk, ivpk, recipient)\n}\n\n// This function seems to be affected by the following Noir bug:\n// https://github.com/noir-lang/noir/issues/5771\n// If you get weird behavior it might be because of it.\npub fn encode_and_encrypt_note<Note, let N: u32>(\n    context: &mut PrivateContext,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress\n) -> fn[(&mut PrivateContext, OvpkM, IvpkM, AztecAddress)](NoteEmission<Note>) -> () where Note: NoteInterface<N> {\n    | e: NoteEmission<Note> | {\n        let ovsk_app: Field  = context.request_ovsk_app(ovpk.hash());\n\n        let (note_hash_counter, encrypted_log, log_hash) = compute_raw_note_log(*context, e.note, ovsk_app, ovpk, ivpk, recipient);\n        context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n    }\n}\n\npub fn encode_and_encrypt_note_unconstrained<Note, let N: u32>(\n    context: &mut PrivateContext,\n    ovpk: OvpkM,\n    ivpk: IvpkM,\n    recipient: AztecAddress\n) -> fn[(&mut PrivateContext, OvpkM, IvpkM, AztecAddress)](NoteEmission<Note>) -> () where Note: NoteInterface<N> {\n    | e: NoteEmission<Note> | {\n        //   Having the log hash be unconstrained here is fine because the way this works is we send the log hash\n        // to the kernel, and it gets included as part of its public inputs. Then we send the tx to the sequencer,\n        // which includes the kernel proof and the log preimages. The sequencer computes the hashes of the logs\n        // and checks that they are the ones in the public inputs of the kernel, and drops the tx otherwise (proposing\n        // the block on L1 would later fail if it didn't because of txs effects hash mismatch).\n        //   So if we don't constrain the log hash, then a malicious sender can compute the correct log, submit a bad\n        // log hash to the kernel, and then submit the bad log preimage to the sequencer. All checks will pass, but\n        // the submitted log will not be the one that was computed by the app.\n        //   In the unconstrained case, we don't care about the log at all because we don't do anything with it,\n        // and because it's unconstrained: it could be anything. So if a sender chooses to broadcast the tx with a log\n        // that is different from the one that was used in the circuit, then they'll be able to, but they were already\n        // able to change the log before anyway, so the end result is the same. It's important here that we do not\n        // return the log from this function to the app, otherwise it could try to do stuff with it and then that might\n        // be wrong.\n        //   Regarding the note hash counter, this is used for squashing. The kernel assumes that a given note can have\n        // more than one log and removes all of the matching ones, so all a malicious sender could do is either: cause\n        // for the log to be deleted when it shouldn't have (which is fine - they can already make the content be\n        // whatever), or cause for the log to not be deleted when it should have (which is also fine - it'll be a log\n        // for a note that doesn't exist).\n        let (note_hash_counter, encrypted_log, log_hash) = unsafe {\n            compute_raw_note_log_unconstrained(*context, e.note, ovpk, ivpk, recipient)\n        };\n        context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n    }\n}\n\n/// Encrypts a partial log and emits it. Takes recipient keys on the input and encrypts both the outgoing and incoming\n/// logs for the recipient. This is necessary because in the partial notes flow the outgoing always has to be the same\n/// as the incoming to not leak any information (typically the `from` party finalizing the partial note in public does\n/// not know who the recipient is).\npub fn encrypt_and_emit_partial_log<let M: u32>(\n    context: &mut PrivateContext,\n    log_plaintext: [u8; M],\n    recipient_keys: PublicKeys,\n    recipient: AztecAddress\n) {\n    let ovsk_app: Field  = context.request_ovsk_app(recipient_keys.ovpk_m.hash());\n\n    let encrypted_log: [u8; 352 + M] = compute_encrypted_log(\n        context.this_address(),\n        ovsk_app,\n        recipient_keys.ovpk_m,\n        recipient_keys.ivpk_m,\n        recipient,\n        log_plaintext\n    );\n    let log_hash = sha256_to_field(encrypted_log);\n\n    // Unfortunately we need to push a dummy note hash to the context here because a note log requires having\n    // a counter that corresponds to a note hash in the same call.\n    let note_hash_counter = context.side_effect_counter;\n    context.push_note_hash(5);\n\n    context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n}\n"},"111":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/encrypted_logs/header.nr","source":"use dep::protocol_types::{address::AztecAddress, scalar::Scalar, point::Point};\n\nuse crate::keys::{point_to_symmetric_key::point_to_symmetric_key, public_keys::ToPoint};\n\nuse std::aes128::aes128_encrypt;\n\npub struct EncryptedLogHeader {\n    address: AztecAddress,\n}\n\nimpl EncryptedLogHeader {\n    fn new(address: AztecAddress) -> Self {\n        EncryptedLogHeader { address }\n    }\n\n    fn compute_ciphertext<T>(self, secret: Scalar, pk: T) -> [u8; 48] where T: ToPoint {\n        let full_key = point_to_symmetric_key(secret, pk.to_point());\n        let mut sym_key = [0; 16];\n        let mut iv = [0; 16];\n\n        for i in 0..16 {\n            sym_key[i] = full_key[i];\n            iv[i] = full_key[i + 16];\n        }\n\n        let input: [u8; 32] = self.address.to_field().to_be_bytes();\n        aes128_encrypt(input, iv, sym_key).as_array()\n    }\n}\n\n#[test]\nunconstrained fn test_encrypted_log_header_matches_noir() {\n    let address = AztecAddress::from_field(0xdeadbeef);\n    let header = EncryptedLogHeader::new(address);\n    let secret = Scalar {\n        lo: 0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n        hi: 0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n    };\n    let point = crate::keys::public_keys::IvpkM {\n        inner: Point {\n            x: 0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n            y: 0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n            is_infinite: false\n        }\n    };\n\n    let ciphertext = header.compute_ciphertext(secret, point);\n\n    // The following value was generated by `encrypted_log_header.test.ts`.\n    // --> Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update test data.\n    let expected_header_ciphertext_from_typescript = [\n        226, 240, 253, 6, 28, 52, 19, 131, 33, 132, 178, 212, 245, 62, 14, 190, 194, 44, 7, 131, 160, 83, 64, 181, 98, 38, 153, 214, 62, 171, 253, 161, 111, 191, 28, 247, 216, 26, 222, 171, 176, 218, 48, 209, 73, 89, 200, 209\n    ];\n\n    assert_eq(ciphertext, expected_header_ciphertext_from_typescript);\n}\n"},"114":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/call_interfaces.nr","source":"use dep::protocol_types::{\n    abis::{function_selector::FunctionSelector, private_circuit_public_inputs::PrivateCircuitPublicInputs},\n    address::AztecAddress, traits::Deserialize\n};\n\nuse crate::context::{\n    private_context::PrivateContext, public_context::PublicContext, gas::GasOpts,\n    inputs::PrivateContextInputs\n};\n\nuse crate::oracle::arguments::pack_arguments;\nuse crate::hash::hash_args;\n\npub trait CallInterface<let N: u32, T, P, Env> {\n    fn get_original(self) -> fn[Env](T) -> P;\n\n    fn get_args(self) -> [Field] {\n        self.args\n    }\n\n    fn get_selector(self) -> FunctionSelector {\n        self.selector\n    }\n\n    fn get_name(self) -> str<N> {\n        self.name\n    }\n\n    fn get_contract_address(self) -> AztecAddress {\n        self.target_contract\n    }\n\n    fn get_is_static(self) -> bool {\n        self.is_static\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, T, Env> PrivateCallInterface<N, T, Env> {\n    pub fn call<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            self.args_hash,\n            false,\n            false\n        );\n        let unpacked: T = returns.unpack_into();\n        unpacked\n    }\n\n    pub fn view<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false);\n        returns.unpack_into()\n    }\n\n    pub fn delegate_call<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, false, true);\n        returns.unpack_into()\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, Env> PrivateVoidCallInterface<N, Env> {\n    pub fn call(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            self.args_hash,\n            false,\n            false\n        ).assert_empty();\n    }\n\n    pub fn view(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false).assert_empty();\n    }\n\n    pub fn delegate_call(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, false, true).assert_empty();\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateStaticCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateStaticCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, T, Env> PrivateStaticCallInterface<N, T, Env> {\n    pub fn view<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false);\n        returns.unpack_into()\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateStaticVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateStaticVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, Env> PrivateStaticVoidCallInterface<N, Env> {\n    pub fn view(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false).assert_empty();\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), T, Env> for PublicCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](()) -> T {\n        self.original\n    }\n}\n\npub struct PublicCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    gas_opts: GasOpts,\n    original: fn[Env](()) -> T,\n    is_static: bool\n}\n\nimpl<let N: u32, T, Env> PublicCallInterface<N, T, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn call<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.deserialize_into()\n    }\n\n    pub fn view<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.deserialize_into()\n    }\n\n    pub fn delegate_call<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.delegate_call_public_function(self.target_contract, self.selector, self.args);\n        returns.deserialize_into()\n    }\n\n    pub fn enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn delegate_enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ true\n        )\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), (), Env> for PublicVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](()) -> () {\n        self.original\n    }\n}\n\npub struct PublicVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](()) -> (),\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<let N: u32, Env> PublicVoidCallInterface<N, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn call(self, context: &mut PublicContext) {\n        let returns = context.call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn view(self, context: &mut PublicContext) {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn delegate_call(self, context: &mut PublicContext) {\n        let returns = context.delegate_call_public_function(self.target_contract, self.selector, self.args);\n        returns.assert_empty()\n    }\n\n    pub fn enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn delegate_enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ true\n        )\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), T, Env> for PublicStaticCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](()) -> T {\n        self.original\n    }\n}\n\npub struct PublicStaticCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](()) -> T,\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<let N: u32, T, Env> PublicStaticCallInterface<N, T, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn view<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        let unpacked: T = returns.deserialize_into();\n        unpacked\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), (), Env> for PublicStaticVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](()) -> () {\n        self.original\n    }\n}\n\npub struct PublicStaticVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](()) -> (),\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<let N: u32, Env> PublicStaticVoidCallInterface<N, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn view(self, context: &mut PublicContext) {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n}\n"},"117":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/private_context.nr","source":"use crate::{\n    context::{inputs::PrivateContextInputs, packed_returns::PackedReturns},\n    messaging::process_l1_to_l2_message, hash::{hash_args_array, ArgsHasher},\n    keys::constants::{NULLIFIER_INDEX, OUTGOING_INDEX, NUM_KEY_TYPES, sk_generators},\n    oracle::{\n    key_validation_request::get_key_validation_request, arguments, returns::pack_returns,\n    call_private_function::call_private_function_internal, header::get_header_at,\n    logs::{emit_encrypted_note_log, emit_encrypted_event_log},\n    enqueue_public_function_call::{\n    enqueue_public_function_call_internal, notify_set_min_revertible_side_effect_counter,\n    set_public_teardown_function_call_internal\n}\n}\n};\nuse dep::protocol_types::{\n    abis::{\n    call_context::CallContext, function_selector::FunctionSelector, max_block_number::MaxBlockNumber,\n    validation_requests::{KeyValidationRequest, KeyValidationRequestAndGenerator},\n    private_call_request::PrivateCallRequest, private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_request::PublicCallRequest, read_request::ReadRequest, note_hash::NoteHash,\n    nullifier::Nullifier, log_hash::{LogHash, NoteLogHash, EncryptedLogHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NOTE_HASHES_PER_CALL, MAX_L2_TO_L1_MSGS_PER_CALL, MAX_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_KEY_VALIDATION_REQUESTS_PER_CALL, MAX_ENCRYPTED_LOGS_PER_CALL, MAX_UNENCRYPTED_LOGS_PER_CALL,\n    MAX_NOTE_ENCRYPTED_LOGS_PER_CALL, PUBLIC_DISPATCH_SELECTOR\n},\n    header::Header, messaging::l2_to_l1_message::L2ToL1Message, traits::Empty\n};\n\n// When finished, one can call .finish() to convert back to the abi\npub struct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    min_revertible_side_effect_counter: u32,\n    is_fee_payer: bool,\n\n    args_hash: Field,\n    return_hash: Field,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: BoundedVec<ReadRequest, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>,\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    key_validation_requests_and_generators: BoundedVec<KeyValidationRequestAndGenerator, MAX_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    note_hashes: BoundedVec<NoteHash, MAX_NOTE_HASHES_PER_CALL>,\n    nullifiers: BoundedVec<Nullifier, MAX_NULLIFIERS_PER_CALL>,\n\n    private_call_requests : BoundedVec<PrivateCallRequest, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_requests : BoundedVec<PublicCallRequest, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    public_teardown_call_request: PublicCallRequest,\n    l2_to_l1_msgs : BoundedVec<L2ToL1Message, MAX_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    note_encrypted_logs_hashes: BoundedVec<NoteLogHash, MAX_NOTE_ENCRYPTED_LOGS_PER_CALL>,\n    encrypted_logs_hashes: BoundedVec<EncryptedLogHash, MAX_ENCRYPTED_LOGS_PER_CALL>,\n    unencrypted_logs_hashes: BoundedVec<LogHash, MAX_UNENCRYPTED_LOGS_PER_CALL>,\n\n    // Contains the last key validation request for each key type. This is used to cache the last request and avoid\n    // fetching the same request multiple times.\n    // The index of the array corresponds to the key type (0 nullifier, 1 incoming, 2 outgoing, 3 tagging).\n    last_key_validation_requests: [Option<KeyValidationRequest>; NUM_KEY_TYPES],\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs,\n            side_effect_counter: inputs.start_side_effect_counter + 1,\n            min_revertible_side_effect_counter: 0,\n            is_fee_payer: false,\n            args_hash,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            historical_header: inputs.historical_header,\n            private_call_requests: BoundedVec::new(),\n            public_call_requests: BoundedVec::new(),\n            public_teardown_call_request: PublicCallRequest::empty(),\n            l2_to_l1_msgs: BoundedVec::new(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.tx_context.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.tx_context.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    fn push_note_hash(&mut self, note_hash: Field) {\n        self.note_hashes.push(NoteHash { value: note_hash, counter: self.next_counter() });\n    }\n\n    fn push_nullifier(&mut self, nullifier: Field) {\n        self.nullifiers.push(Nullifier { value: nullifier, note_hash: 0, counter: self.next_counter() });\n    }\n\n    fn push_nullifier_for_note_hash(&mut self, nullifier: Field, nullified_note_hash: Field) {\n        self.nullifiers.push(Nullifier { value: nullifier, note_hash: nullified_note_hash, counter: self.next_counter() });\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn set_return_hash(&mut self, returns_hasher: ArgsHasher) {\n        pack_returns(returns_hasher.fields);\n        self.return_hash = returns_hasher.hash();\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            returns_hash: self.return_hash,\n            min_revertible_side_effect_counter: self.min_revertible_side_effect_counter,\n            is_fee_payer: self.is_fee_payer,\n            max_block_number: self.max_block_number,\n            note_hash_read_requests: self.note_hash_read_requests.storage,\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            key_validation_requests_and_generators: self.key_validation_requests_and_generators.storage,\n            note_hashes: self.note_hashes.storage,\n            nullifiers: self.nullifiers.storage,\n            private_call_requests: self.private_call_requests.storage,\n            public_call_requests: self.public_call_requests.storage,\n            public_teardown_call_request: self.public_teardown_call_request,\n            l2_to_l1_msgs: self.l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            note_encrypted_logs_hashes: self.note_encrypted_logs_hashes.storage,\n            encrypted_logs_hashes: self.encrypted_logs_hashes.storage,\n            unencrypted_logs_hashes: self.unencrypted_logs_hashes.storage,\n            historical_header: self.historical_header,\n            tx_context: self.inputs.tx_context\n        }\n    }\n\n    pub fn set_as_fee_payer(&mut self) {\n        dep::protocol_types::debug_log::debug_log_format(\"Setting {0} as fee payer\", [self.this_address().to_field()]);\n        self.is_fee_payer = true;\n    }\n\n    pub fn end_setup(&mut self) {\n        // dep::protocol_types::debug_log::debug_log_format(\n        //     \"Ending setup at counter {0}\",\n        //     [self.side_effect_counter as Field]\n        // );\n        self.min_revertible_side_effect_counter = self.side_effect_counter;\n        notify_set_min_revertible_side_effect_counter(self.min_revertible_side_effect_counter);\n    }\n\n    // docs:start:max-block-number\n    pub fn set_tx_max_block_number(&mut self, max_block_number: u32) {\n        // docs:end:max-block-number\n        self.max_block_number = MaxBlockNumber::min_with_u32(self.max_block_number, max_block_number);\n    }\n\n    pub fn push_note_hash_read_request(&mut self, note_hash: Field) {\n        let side_effect = ReadRequest { value: note_hash, counter: self.next_counter() };\n        self.note_hash_read_requests.push(side_effect);\n    }\n\n    pub fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.next_counter() };\n        self.nullifier_read_requests.push(request);\n    }\n\n    pub fn request_nsk_app(&mut self, npk_m_hash: Field) -> Field {\n        self.request_sk_app(npk_m_hash, NULLIFIER_INDEX)\n    }\n\n    pub fn request_ovsk_app(&mut self, ovpk_m_hash: Field) -> Field {\n        self.request_sk_app(ovpk_m_hash, OUTGOING_INDEX)\n    }\n\n    fn request_sk_app(&mut self, pk_m_hash: Field, key_index: Field) -> Field {\n        let cached_request = self.last_key_validation_requests[key_index].unwrap_or(KeyValidationRequest::empty());\n\n        if cached_request.pk_m.hash() == pk_m_hash {\n            // We get a match so the cached request is the latest one\n            cached_request.sk_app\n        } else {\n            // We didn't get a match meaning the cached result is stale. We fetch new values from oracle and instruct\n            // protocol circuits to validate them by storing the validation request in context.\n            let request = get_key_validation_request(pk_m_hash, key_index);\n            let request_and_generator = KeyValidationRequestAndGenerator { request, sk_app_generator: sk_generators[key_index] };\n            // We constrain that the pk_m_hash matches the one in the request (otherwise we could get an arbitrary\n            // valid key request and not the one corresponding to pk_m_hash).\n            assert(request.pk_m.hash() == pk_m_hash);\n            self.key_validation_requests_and_generators.push(request_and_generator);\n            self.last_key_validation_requests[key_index] = Option::some(request);\n            request.sk_app\n        }\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        // docs:end:context_message_portal\n        let message = L2ToL1Message { recipient, content, counter: self.next_counter() };\n        self.l2_to_l1_msgs.push(message);\n    }\n\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        // docs:end:context_consume_l1_to_l2_message\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            self.this_address(),\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_nullifier(nullifier)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    // NB: A randomness value of 0 signals that the kernels should not mask the contract address\n    // used in siloing later on e.g. 'handshaking' contract w/ known address.\n    pub fn emit_raw_event_log_with_masked_address<let M: u32>(\n        &mut self,\n        randomness: Field,\n        log: [u8; M],\n        log_hash: Field\n    ) {\n        let counter = self.next_counter();\n        let contract_address = self.this_address();\n        let len = log.len() as Field + 4;\n        let side_effect = EncryptedLogHash { value: log_hash, counter, length: len, randomness };\n        self.encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_event_log(contract_address, randomness, log, counter);\n    }\n\n    pub fn emit_raw_note_log<let M: u32>(&mut self, note_hash_counter: u32, log: [u8; M], log_hash: Field) {\n        let counter = self.next_counter();\n        let len = log.len() as Field + 4;\n        let side_effect = NoteLogHash { value: log_hash, counter, length: len, note_hash_counter };\n        self.note_encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_note_log(note_hash_counter, log, counter);\n    }\n\n    pub fn call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> PackedReturns {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let start_side_effect_counter = self.side_effect_counter;\n        let (end_side_effect_counter, returns_hash) = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            start_side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.side_effect_counter = end_side_effect_counter + 1;\n\n        // TODO (fees) figure out why this crashes the prover and enable it\n        // we need this in order to pay fees inside child call contexts\n        // assert(\n        //     (item.public_inputs.min_revertible_side_effect_counter == 0 as u32)\n        //     | (item.public_inputs.min_revertible_side_effect_counter\n        //         > self.min_revertible_side_effect_counter)\n        // );\n\n        // if item.public_inputs.min_revertible_side_effect_counter\n        //     > self.min_revertible_side_effect_counter {\n        //     self.min_revertible_side_effect_counter = item.public_inputs.min_revertible_side_effect_counter;\n        // }\n\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.private_call_requests.push(\n            PrivateCallRequest {\n            contract_address,\n            call_context,\n            args_hash,\n            returns_hash,\n            start_side_effect_counter,\n            end_side_effect_counter\n        }\n        );\n\n        PackedReturns::new(returns_hash)\n    }\n\n    pub fn call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let counter = self.next_counter();\n\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/8985): Fix this.\n        // WARNING: This is insecure and should be temporary!\n        // The oracle repacks the arguments and returns a new args_hash.\n        // new_args = [selector, ...old_args], so as to make it suitable to call the public dispatch function.\n        // We don't validate or compute it in the circuit because a) it's harder to do with slices, and\n        // b) this is only temporary.\n        let args_hash = enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        // Public calls are rerouted through the dispatch function.\n        let function_selector = comptime {\n            FunctionSelector::from_field(PUBLIC_DISPATCH_SELECTOR)\n        };\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let call_request = PublicCallRequest { contract_address, call_context, args_hash, counter };\n        self.public_call_requests.push(call_request);\n    }\n\n    pub fn set_public_teardown_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.set_public_teardown_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn set_public_teardown_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let counter = self.next_counter();\n\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/8985): Fix this.\n        // WARNING: This is insecure and should be temporary!\n        // The oracle repacks the arguments and returns a new args_hash.\n        // new_args = [selector, ...old_args], so as to make it suitable to call the public dispatch function.\n        // We don't validate or compute it in the circuit because a) it's harder to do with slices, and\n        // b) this is only temporary.\n        let args_hash = set_public_teardown_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let function_selector = comptime {\n            FunctionSelector::from_field(PUBLIC_DISPATCH_SELECTOR)\n        };\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.public_teardown_call_request = PublicCallRequest {\n            contract_address,\n            call_context,\n            args_hash,\n            counter,\n        };\n    }\n\n    fn generate_call_context(\n        self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> CallContext {\n        let msg_sender = if is_delegate_call {\n            self.msg_sender()\n        } else {\n            self.this_address()\n        };\n        let storage_contract_address = if is_delegate_call {\n            self.this_address()\n        } else {\n            contract_address\n        };\n        CallContext { msg_sender, storage_contract_address, function_selector, is_static_call, is_delegate_call }\n    }\n\n    fn next_counter(&mut self) -> u32 {\n        let counter = self.side_effect_counter;\n        self.side_effect_counter += 1;\n        counter\n    }\n}\n\nimpl Empty for PrivateContext {\n    fn empty() -> Self {\n        PrivateContext {\n            inputs: PrivateContextInputs::empty(),\n            side_effect_counter: 0 as u32,\n            min_revertible_side_effect_counter: 0 as u32,\n            is_fee_payer: false,\n            args_hash: 0,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            private_call_requests: BoundedVec::new(),\n            public_call_requests: BoundedVec::new(),\n            public_teardown_call_request: PublicCallRequest::empty(),\n            l2_to_l1_msgs: BoundedVec::new(),\n            historical_header: Header::empty(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n}\n"},"118":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/packed_returns.nr","source":"use crate::{hash::hash_args_array, oracle::returns::unpack_returns};\nuse dep::protocol_types::traits::Deserialize;\n\npub struct PackedReturns {\n  packed_returns: Field,\n}\n\nimpl PackedReturns {\n    pub fn new(packed_returns: Field) -> Self {\n        PackedReturns { packed_returns }\n    }\n\n    pub fn assert_empty(self) {\n        assert_eq(self.packed_returns, 0);\n    }\n\n    pub fn raw(self) -> Field {\n        self.packed_returns\n    }\n\n    pub fn unpack<let N: u32>(self) -> [Field; N] {\n        // We verify that the value returned by `unpack_returns` is the preimage of `packed_returns`, fully constraining\n        // it.\n        let unpacked: [Field; N] = unsafe {\n            unpack_returns(self.packed_returns)\n        };\n        assert_eq(self.packed_returns, hash_args_array(unpacked));\n        unpacked\n    }\n\n    pub fn unpack_into<T, let N: u32>(self) -> T where T: Deserialize<N> {\n        let unpacked: [Field; N] = self.unpack();\n        Deserialize::deserialize(unpacked)\n    }\n}\n"},"122":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/public_context.nr","source":"use crate::hash::{compute_secret_hash, compute_message_hash, compute_message_nullifier};\nuse dep::protocol_types::address::{AztecAddress, EthAddress};\nuse dep::protocol_types::constants::{MAX_FIELD_VALUE, PUBLIC_DISPATCH_SELECTOR};\nuse dep::protocol_types::traits::{Serialize, Deserialize, Empty};\nuse dep::protocol_types::abis::function_selector::FunctionSelector;\nuse crate::context::gas::GasOpts;\n\npub struct PublicContext {\n    args_hash: Option<Field>,\n    compute_args_hash: fn () -> Field,\n}\n\nimpl PublicContext {\n    pub fn new(compute_args_hash: fn() -> Field) -> Self {\n        PublicContext { args_hash: Option::none(), compute_args_hash }\n    }\n\n    pub fn emit_unencrypted_log<T, let N: u32>(_self: &mut Self, log: T) where T: Serialize<N> {\n        emit_unencrypted_log(Serialize::serialize(log).as_slice());\n    }\n\n    pub fn note_hash_exists(_self: Self, note_hash: Field, leaf_index: Field) -> bool {\n        note_hash_exists(note_hash, leaf_index) == 1\n    }\n\n    pub fn l1_to_l2_msg_exists(_self: Self, msg_hash: Field, msg_leaf_index: Field) -> bool {\n        l1_to_l2_msg_exists(msg_hash, msg_leaf_index) == 1\n    }\n\n    fn nullifier_exists(_self: Self, unsiloed_nullifier: Field, address: AztecAddress) -> bool {\n        nullifier_exists(unsiloed_nullifier, address.to_field()) == 1\n    }\n\n    fn consume_l1_to_l2_message(\n        &mut self,\n        content: Field,\n        secret: Field,\n        sender: EthAddress,\n        leaf_index: Field\n    ) {\n        let secret_hash = compute_secret_hash(secret);\n        let message_hash = compute_message_hash(\n            sender,\n            self.chain_id(),\n            /*recipient=*/ self.this_address(),\n            self.version(),\n            content,\n            secret_hash\n        );\n        let nullifier = compute_message_nullifier(message_hash, secret, leaf_index);\n\n        assert(\n            !self.nullifier_exists(nullifier, self.this_address()), \"L1-to-L2 message is already nullified\"\n        );\n        assert(\n            self.l1_to_l2_msg_exists(message_hash, leaf_index), \"Tried to consume nonexistent L1-to-L2 message\"\n        );\n\n        self.push_nullifier(nullifier);\n    }\n\n    fn message_portal(_self: &mut Self, recipient: EthAddress, content: Field) {\n        send_l2_to_l1_msg(recipient, content);\n    }\n\n    fn call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let args = &[function_selector.to_field()].append(args);\n        let results = call(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            PUBLIC_DISPATCH_SELECTOR\n        );\n        let data_to_return: [Field; RETURNS_COUNT] = results.0;\n        let success: u8 = results.1;\n        assert(success == 1, \"Nested call failed!\");\n\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn static_call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let args = &[function_selector.to_field()].append(args);\n        let (data_to_return, success): ([Field; RETURNS_COUNT], u8) = call_static(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            PUBLIC_DISPATCH_SELECTOR\n        );\n\n        assert(success == 1, \"Nested static call failed!\");\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn delegate_call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        _contract_address: AztecAddress,\n        _function_selector: FunctionSelector,\n        _args: [Field]\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        panic(f\"'delegate_call_public_function' not implemented!\")\n    }\n\n    fn push_note_hash(_self: &mut Self, note_hash: Field) {\n        emit_note_hash(note_hash);\n    }\n    fn push_nullifier(_self: &mut Self, nullifier: Field) {\n        emit_nullifier(nullifier);\n    }\n\n    fn this_address(_self: Self) -> AztecAddress {\n        address()\n    }\n    pub fn storage_address(_self: Self) -> AztecAddress {\n        storage_address()\n    }\n    fn msg_sender(_self: Self) -> AztecAddress {\n        sender()\n    }\n    fn selector(_self: Self) -> FunctionSelector {\n        // The selector is the first element of the calldata when calling a public function through dispatch.\n        let raw_selector: [Field; 1] = calldata_copy(0, 1);\n        FunctionSelector::from_field(raw_selector[0])\n    }\n    fn get_args_hash(mut self) -> Field {\n        if !self.args_hash.is_some() {\n            self.args_hash = Option::some((self.compute_args_hash)());\n        }\n\n        self.args_hash.unwrap_unchecked()\n    }\n    fn transaction_fee(_self: Self) -> Field {\n        transaction_fee()\n    }\n\n    fn chain_id(_self: Self) -> Field {\n        chain_id()\n    }\n    fn version(_self: Self) -> Field {\n        version()\n    }\n    fn block_number(_self: Self) -> Field {\n        block_number()\n    }\n    fn timestamp(_self: Self) -> u64 {\n        timestamp()\n    }\n    pub fn fee_per_l2_gas(_self: Self) -> Field {\n        fee_per_l2_gas()\n    }\n    pub fn fee_per_da_gas(_self: Self) -> Field {\n        fee_per_da_gas()\n    }\n\n    fn l2_gas_left(_self: Self) -> Field {\n        l2_gas_left()\n    }\n    fn da_gas_left(_self: Self) -> Field {\n        da_gas_left()\n    }\n    fn is_static_call(_self: Self) -> bool {\n        is_static_call() == 1\n    }\n\n    fn raw_storage_read<let N: u32>(_self: Self, storage_slot: Field) -> [Field; N] {\n        let mut out = [0; N];\n        for i in 0..N {\n            out[i] = storage_read(storage_slot + i as Field);\n        }\n        out\n    }\n\n    fn storage_read<T, let N: u32>(self, storage_slot: Field) -> T where T: Deserialize<N> {\n        T::deserialize(self.raw_storage_read(storage_slot))\n    }\n\n    fn raw_storage_write<let N: u32>(_self: Self, storage_slot: Field, values: [Field; N]) {\n        for i in 0..N {\n            storage_write(storage_slot + i as Field, values[i]);\n        }\n    }\n\n    fn storage_write<T, let N: u32>(self, storage_slot: Field, value: T) where T: Serialize<N> {\n        self.raw_storage_write(storage_slot, value.serialize());\n    }\n}\n\n// Helper functions\nfn gas_for_call(user_gas: GasOpts) -> [Field; 2] {\n    // It's ok to use the max possible gas here, because the gas will be\n    // capped by the gas left in the (STATIC)CALL instruction.\n    [\n        user_gas.l2_gas.unwrap_or(MAX_FIELD_VALUE),\n        user_gas.da_gas.unwrap_or(MAX_FIELD_VALUE)\n    ]\n}\n\n// Unconstrained opcode wrappers (do not use directly).\nunconstrained fn address() -> AztecAddress {\n    address_opcode()\n}\nunconstrained fn storage_address() -> AztecAddress {\n    storage_address_opcode()\n}\nunconstrained fn sender() -> AztecAddress {\n    sender_opcode()\n}\nunconstrained fn portal() -> EthAddress {\n    portal_opcode()\n}\n// UNUSED: Remove.\n// unconstrained fn function_selector() -> u32 {\n//     function_selector_opcode()\n// }\nunconstrained fn transaction_fee() -> Field {\n    transaction_fee_opcode()\n}\nunconstrained fn chain_id() -> Field {\n    chain_id_opcode()\n}\nunconstrained fn version() -> Field {\n    version_opcode()\n}\nunconstrained fn block_number() -> Field {\n    block_number_opcode()\n}\nunconstrained fn timestamp() -> u64 {\n    timestamp_opcode()\n}\nunconstrained fn fee_per_l2_gas() -> Field {\n    fee_per_l2_gas_opcode()\n}\nunconstrained fn fee_per_da_gas() -> Field {\n    fee_per_da_gas_opcode()\n}\nunconstrained fn l2_gas_left() -> Field {\n    l2_gas_left_opcode()\n}\nunconstrained fn da_gas_left() -> Field {\n    da_gas_left_opcode()\n}\nunconstrained fn is_static_call() -> Field {\n    is_static_call_opcode()\n}\nunconstrained fn note_hash_exists(note_hash: Field, leaf_index: Field) -> u8 {\n    note_hash_exists_opcode(note_hash, leaf_index)\n}\nunconstrained fn emit_note_hash(note_hash: Field) {\n    emit_note_hash_opcode(note_hash)\n}\nunconstrained fn nullifier_exists(nullifier: Field, address: Field) -> u8 {\n    nullifier_exists_opcode(nullifier, address)\n}\nunconstrained fn emit_nullifier(nullifier: Field) {\n    emit_nullifier_opcode(nullifier)\n}\nunconstrained fn emit_unencrypted_log(message: [Field]) {\n    emit_unencrypted_log_opcode(message)\n}\nunconstrained fn l1_to_l2_msg_exists(msg_hash: Field, msg_leaf_index: Field) -> u8 {\n    l1_to_l2_msg_exists_opcode(msg_hash, msg_leaf_index)\n}\nunconstrained fn send_l2_to_l1_msg(recipient: EthAddress, content: Field) {\n    send_l2_to_l1_msg_opcode(recipient, content)\n}\nunconstrained fn call<let RET_SIZE: u32>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_opcode(gas, address, args, function_selector)\n}\nunconstrained fn call_static<let RET_SIZE: u32>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_static_opcode(gas, address, args, function_selector)\n}\n\nunconstrained pub fn calldata_copy<let N: u32>(cdoffset: u32, copy_size: u32) -> [Field; N] {\n    calldata_copy_opcode(cdoffset, copy_size)\n}\n\nunconstrained fn avm_return<let N: u32>(returndata: [Field; N]) {\n    return_opcode(returndata)\n}\n\nunconstrained fn storage_read(storage_slot: Field) -> Field {\n    storage_read_opcode(storage_slot)\n}\n\nunconstrained fn storage_write(storage_slot: Field, value: Field) {\n    storage_write_opcode(storage_slot, value);\n}\n\nimpl Empty for PublicContext {\n    fn empty() -> Self {\n        PublicContext::new(|| 0)\n    }\n}\n\n// AVM oracles (opcodes) follow, do not use directly.\n#[oracle(avmOpcodeAddress)]\nunconstrained fn address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeStorageAddress)]\nunconstrained fn storage_address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeSender)]\nunconstrained fn sender_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodePortal)]\nunconstrained fn portal_opcode() -> EthAddress {}\n\n// UNUSED: Remove.\n// #[oracle(avmOpcodeFunctionSelector)]\n// unconstrained fn function_selector_opcode() -> u32 {}\n\n#[oracle(avmOpcodeTransactionFee)]\nunconstrained fn transaction_fee_opcode() -> Field {}\n\n#[oracle(avmOpcodeChainId)]\nunconstrained fn chain_id_opcode() -> Field {}\n\n#[oracle(avmOpcodeVersion)]\nunconstrained fn version_opcode() -> Field {}\n\n#[oracle(avmOpcodeBlockNumber)]\nunconstrained fn block_number_opcode() -> Field {}\n\n#[oracle(avmOpcodeTimestamp)]\nunconstrained fn timestamp_opcode() -> u64 {}\n\n#[oracle(avmOpcodeFeePerL2Gas)]\nunconstrained fn fee_per_l2_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeFeePerDaGas)]\nunconstrained fn fee_per_da_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeL2GasLeft)]\nunconstrained fn l2_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeDaGasLeft)]\nunconstrained fn da_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeIsStaticCall)]\nunconstrained fn is_static_call_opcode() -> Field {}\n\n#[oracle(avmOpcodeNoteHashExists)]\nunconstrained fn note_hash_exists_opcode(note_hash: Field, leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNoteHash)]\nunconstrained fn emit_note_hash_opcode(note_hash: Field) {}\n\n#[oracle(avmOpcodeNullifierExists)]\nunconstrained fn nullifier_exists_opcode(nullifier: Field, address: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNullifier)]\nunconstrained fn emit_nullifier_opcode(nullifier: Field) {}\n\n#[oracle(avmOpcodeEmitUnencryptedLog)]\nunconstrained fn emit_unencrypted_log_opcode(message: [Field]) {}\n\n#[oracle(avmOpcodeL1ToL2MsgExists)]\nunconstrained fn l1_to_l2_msg_exists_opcode(msg_hash: Field, msg_leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeSendL2ToL1Msg)]\nunconstrained fn send_l2_to_l1_msg_opcode(recipient: EthAddress, content: Field) {}\n\n#[oracle(avmOpcodeCalldataCopy)]\nunconstrained fn calldata_copy_opcode<let N: u32>(cdoffset: u32, copy_size: u32) -> [Field; N] {}\n\n#[oracle(avmOpcodeReturn)]\nunconstrained fn return_opcode<let N: u32>(returndata: [Field; N]) {}\n\n#[oracle(avmOpcodeCall)]\nunconstrained fn call_opcode<let RET_SIZE: u32>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStaticCall)]\nunconstrained fn call_static_opcode<let RET_SIZE: u32>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStorageRead)]\nunconstrained fn storage_read_opcode(storage_slot: Field) -> Field {}\n\n#[oracle(avmOpcodeStorageWrite)]\nunconstrained fn storage_write_opcode(storage_slot: Field, value: Field) {}\n\npub struct FunctionReturns<let N: u32> {\n    values: [Field; N]\n}\n\nimpl<let N: u32> FunctionReturns<N> {\n    pub fn new(values: [Field; N]) -> FunctionReturns<N> {\n        FunctionReturns { values }\n    }\n\n    pub fn raw(self) -> [Field; N] {\n        self.values\n    }\n\n    pub fn deserialize_into<T>(self) -> T where T: Deserialize<N> {\n        Deserialize::deserialize(self.raw())\n    }\n}\n\nimpl FunctionReturns<0> {\n    pub fn assert_empty(self) {\n        assert(self.values.len() == 0);\n    }\n}\n"},"134":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/state_vars/map.nr","source":"use dep::protocol_types::{storage::map::derive_storage_slot_in_map, traits::ToField};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:map\npub struct Map<K, V, Context> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<K, T, Context> Storage<T> for Map<K, T, Context> {}\n\nimpl<K, V, Context> Map<K, V, Context> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map { context, storage_slot, state_var_constructor }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: K) -> V where K: ToField {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = derive_storage_slot_in_map(self.storage_slot, key);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n"},"135":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/state_vars/shared_immutable.nr","source":"use crate::{context::{PrivateContext, PublicContext, UnconstrainedContext}, state_vars::storage::Storage};\nuse dep::protocol_types::{constants::INITIALIZATION_SLOT_SEPARATOR, traits::{Deserialize, Serialize}};\n\n// Just like PublicImmutable but with the ability to read from private functions.\npub struct SharedImmutable<T, Context>{\n    context: Context,\n    storage_slot: Field,\n}\n\nimpl<T, Context> Storage<T> for SharedImmutable<T, Context> {}\n\nimpl<T, Context> SharedImmutable<T, Context> {\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self { context, storage_slot }\n    }\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> SharedImmutable<T, &mut PublicContext> where T: Serialize<T_SERIALIZED_LEN> + Deserialize<T_SERIALIZED_LEN> {\n    // Intended to be only called once.\n    pub fn initialize(self, value: T) {\n        // We check that the struct is not yet initialized by checking if the initialization slot is 0\n        let initialization_slot = INITIALIZATION_SLOT_SEPARATOR + self.storage_slot;\n        let init_field: Field = self.context.storage_read(initialization_slot);\n        assert(init_field == 0, \"SharedImmutable already initialized\");\n\n        // We populate the initialization slot with a non-zero value to indicate that the struct is initialized\n        self.context.storage_write(initialization_slot, 0xdead);\n        self.context.storage_write(self.storage_slot, value);\n    }\n\n    pub fn read_public(self) -> T {\n        self.context.storage_read(self.storage_slot)\n    }\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> SharedImmutable<T, UnconstrainedContext> where T: Serialize<T_SERIALIZED_LEN> + Deserialize<T_SERIALIZED_LEN> {\n    unconstrained pub fn read_public(self) -> T {\n        self.context.storage_read(self.storage_slot)\n    }\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> SharedImmutable<T, &mut PrivateContext> where T: Serialize<T_SERIALIZED_LEN> + Deserialize<T_SERIALIZED_LEN> {\n    pub fn read_private(self) -> T {\n        let header = self.context.get_header();\n        let mut fields = [0; T_SERIALIZED_LEN];\n\n        for i in 0..fields.len() {\n            fields[i] =\n                header.public_storage_historical_read(\n                    self.storage_slot + i as Field,\n                    (*self.context).this_address()\n                );\n        }\n        T::deserialize(fields)\n    }\n}\n"},"140":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/state_vars/private_set.nr","source":"use dep::protocol_types::{constants::MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, abis::read_request::ReadRequest};\nuse crate::context::{PrivateContext, PublicContext, UnconstrainedContext};\nuse crate::note::{\n    constants::MAX_NOTES_PER_PAGE,\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note_unsafe},\n    note_getter::{get_notes, view_notes}, note_getter_options::NoteGetterOptions,\n    note_interface::{NoteInterface, NullifiableNote}, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_request, note_emission::NoteEmission\n};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:struct\npub struct PrivateSet<Note, Context> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:struct\n\nimpl<T, Context> Storage<T> for PrivateSet<T, Context> {}\n\nimpl<Note, Context> PrivateSet<Note, Context> {\n    // docs:start:new\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PrivateSet { context, storage_slot }\n    }\n    // docs:end:new\n}\n\nimpl<Note, let N: u32> PrivateSet<Note, &mut PublicContext> where Note: NoteInterface<N> + NullifiableNote {\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(self.context, self.storage_slot, note);\n    }\n    // docs:end:insert_from_public\n}\n\nimpl<Note, let N: u32> PrivateSet<Note, &mut PrivateContext> where Note: NoteInterface<N> + NullifiableNote + Eq {\n    // docs:start:insert\n    pub fn insert(self, note: &mut Note) -> NoteEmission<Note> {\n        create_note(self.context, self.storage_slot, note)\n    }\n    // docs:end:insert\n\n    pub fn pop_notes<PREPROCESSOR_ARGS, FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n    ) -> BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> {\n        let (notes, note_hashes) = get_notes(self.context, self.storage_slot, options);\n        // We iterate in a range 0..options.limit instead of 0..notes.len() because options.limit is known at compile\n        // time and hence will result in less constraints when set to a lower value than\n        // MAX_NOTE_HASH_READ_REQUESTS_PER_CALL.\n        for i in 0..options.limit {\n            if i < notes.len() {\n                let note = notes.get_unchecked(i);\n                let note_hash = note_hashes.get_unchecked(i);\n                // We immediately destroy the note without doing any of the read request checks `remove` typically\n                // performs because we know that the `get_notes` call has already placed those constraints.\n                destroy_note_unsafe(self.context, note, note_hash);\n            }\n        }\n\n        notes\n    }\n\n    /// Note that if you obtained the note via `get_notes` it's much better to use `pop_notes` as `pop_notes` results\n    /// in significantly less constrains due to avoiding an extra hash and read request check.\n    pub fn remove(self, note: Note) {\n        let note_hash = compute_note_hash_for_read_request(note);\n        let has_been_read = self.context.note_hash_read_requests.any(|r: ReadRequest| r.value == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note_unsafe(self.context, note, note_hash);\n    }\n\n    /// Note that if you later on remove the note it's much better to use `pop_notes` as `pop_notes` results\n    /// in significantly less constrains due to avoiding 1 read request check.\n    pub fn get_notes<PREPROCESSOR_ARGS, FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n    ) -> BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> {\n        get_notes(self.context, self.storage_slot, options).0\n    }\n}\n\nimpl<Note, let N: u32> PrivateSet<Note, UnconstrainedContext> where Note: NoteInterface<N> + NullifiableNote {\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>\n    ) -> BoundedVec<Note, MAX_NOTES_PER_PAGE> {\n        view_notes(self.storage_slot, options)\n    }\n    // docs:end:view_notes\n}\n"},"141":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/hash.nr","source":"use dep::protocol_types::{\n    address::{AztecAddress, EthAddress},\n    constants::{GENERATOR_INDEX__SECRET_HASH, GENERATOR_INDEX__MESSAGE_NULLIFIER, GENERATOR_INDEX__FUNCTION_ARGS},\n    point::Point, traits::Hash,\n    hash::{sha256_to_field, poseidon2_hash_with_separator, poseidon2_hash_with_separator_slice}\n};\nuse crate::utils::to_bytes::{arr_to_be_bytes_arr, str_to_be_bytes_arr};\n\npub use dep::protocol_types::hash::{compute_siloed_nullifier, pedersen_hash};\n\npub fn pedersen_commitment<let N: u32>(inputs: [Field; N], hash_index: u32) -> Point {\n    std::hash::pedersen_commitment_with_separator(inputs, hash_index)\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    poseidon2_hash_with_separator([secret], GENERATOR_INDEX__SECRET_HASH)\n}\n\npub fn compute_unencrypted_log_hash<let N: u32>(contract_address: AztecAddress, log: [u8; N]) -> Field {\n    let mut hash_bytes = [0; N + 36];\n    // Address is converted to 32 bytes in ts\n    let address_bytes: [u8; 32] = contract_address.to_field().to_be_bytes();\n    for i in 0..32 {\n        hash_bytes[i] = address_bytes[i];\n    }\n    let len_bytes: [u8; 4] = (N as Field).to_be_bytes();\n    for i in 0..4 {\n        hash_bytes[32 + i] = len_bytes[i];\n    }\n    for i in 0..N {\n        hash_bytes[36 + i] = log[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\npub fn compute_message_hash(\n    sender: EthAddress,\n    chain_id: Field,\n    recipient: AztecAddress,\n    version: Field,\n    content: Field,\n    secret_hash: Field\n) -> Field {\n    let mut hash_bytes = [0 as u8; 192];\n    let sender_bytes: [u8; 32] = sender.to_field().to_be_bytes();\n    let chain_id_bytes: [u8; 32] = chain_id.to_be_bytes();\n    let recipient_bytes: [u8; 32] = recipient.to_field().to_be_bytes();\n    let version_bytes: [u8; 32] = version.to_be_bytes();\n    let content_bytes: [u8; 32] = content.to_be_bytes();\n    let secret_hash_bytes: [u8; 32] = secret_hash.to_be_bytes();\n\n    for i in 0..32 {\n        hash_bytes[i] = sender_bytes[i];\n        hash_bytes[i + 32] = chain_id_bytes[i];\n        hash_bytes[i + 64] = recipient_bytes[i];\n        hash_bytes[i + 96] = version_bytes[i];\n        hash_bytes[i + 128] = content_bytes[i];\n        hash_bytes[i + 160] = secret_hash_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\n// The nullifier of a l1 to l2 message is the hash of the message salted with the secret and index of the message hash\n// in the L1 to L2 message tree\npub fn compute_message_nullifier(message_hash: Field, secret: Field, leaf_index: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [message_hash, secret, leaf_index],\n        GENERATOR_INDEX__MESSAGE_NULLIFIER\n    )\n}\n\npub struct ArgsHasher {\n    fields: [Field],\n}\n\nimpl Hash for ArgsHasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl ArgsHasher {\n    pub fn new() -> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<let N: u32>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n\npub fn hash_args_array<let N: u32>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        poseidon2_hash_with_separator(args, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\npub fn hash_args(args: [Field]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        poseidon2_hash_with_separator_slice(args, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n#[test]\nunconstrained fn compute_var_args_hash() {\n    let mut input = ArgsHasher::new();\n    for i in 0..100 {\n        input.add(i as Field);\n    }\n    let hash = input.hash();\n    dep::std::println(hash);\n    assert(hash == 0x19b0d74feb06ebde19edd85a28986c97063e84b3b351a8b666c7cac963ce655f);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_array() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = [\n        0x20660de09f35f876e3e69d227b2a35166ad05f09d82d06366ec9b6f65a51fec2,\n        0x1b52bfe3b8689761916f76dc3d38aa8810860db325cd39ca611eed980091f01c,\n        0x2e559c4045c378a56ad13b9edb1e8de4e7ad3b3aa35cc7ba9ec77f7a68fa43a4,\n        0x25d0f689c4a4178a29d59306f2675824d19be6d25e44fa03b03f49c263053dd2,\n        0x2d513a722d6f352dc0961f156afdc5e31495b9f0e35cb069261a8e55e2df67fd\n    ];\n    let serialized_log = arr_to_be_bytes_arr(log);\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x0095b2d17ab72f4b27a341f7ac63e49ec73935ae8c9181a0ac02023eb12f3284);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_addr() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = AztecAddress::from_field(0x26aa302d4715fd8a687453cb26d616b0768027bd54bcae56b09d908ecd9f8303);\n    let serialized_log: [u8; 32] = log.to_field().to_be_bytes();\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x0083ab647dfb26e7ddee90a0f4209d049d4660cab42000c544b986aaa84c55a3);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"dummy\";\n    let serialized_log = str_to_be_bytes_arr(log);\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x00629e88ebd6374f44aa6cfe07e251ecf07213ebc7267e8f6b578ae57ffd6c20);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_longer_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"Hello this is a string\";\n    let serialized_log = str_to_be_bytes_arr(log);\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x0098637962f7d34fa202b7ffad8a07a238c5d1fd897b82a108f7f467fa73b841);\n}\n"},"152":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/history/public_storage.nr","source":"use dep::protocol_types::{\n    constants::GENERATOR_INDEX__PUBLIC_LEAF_INDEX, hash::poseidon2_hash_with_separator,\n    address::AztecAddress, header::Header, utils::field::full_field_less_than\n};\nuse dep::protocol_types::merkle_tree::root::root_from_sibling_path;\n\nuse crate::{oracle::get_public_data_witness::get_public_data_witness};\n\ntrait PublicStorageHistoricalRead {\n    fn public_storage_historical_read(header: Header, storage_slot: Field, contract_address: AztecAddress) -> Field;\n}\n\nimpl PublicStorageHistoricalRead for Header {\n    fn public_storage_historical_read(self, storage_slot: Field, contract_address: AztecAddress) -> Field {\n        // 1) Compute the leaf index by siloing the storage slot with the contract address\n        let public_data_tree_index = poseidon2_hash_with_separator(\n            [contract_address.to_field(), storage_slot],\n            GENERATOR_INDEX__PUBLIC_LEAF_INDEX\n        );\n\n        // 2) Get the membership witness for the tree index.\n        let witness = unsafe {\n            get_public_data_witness(\n                self.global_variables.block_number as u32,\n                public_data_tree_index\n            )\n        };\n\n        // 3) The witness is made up of two parts: the preimage of the leaf and the proof that it exists in the tree.\n        // We first prove that the witness is indeed valid for the public data tree, i.e. that the preimage is of a\n        // value present in the tree. Note that `hash` returns not just the hash of the value but also the metadata\n        // (slot, next index and next slot).\n        assert(\n            self.state.partial.public_data_tree.root\n            == root_from_sibling_path(witness.leaf_preimage.hash(), witness.index, witness.path), \"Proving public value inclusion failed\"\n        );\n\n        // 4) Now that we know the preimage is valid, we determine the value that's represented by this tree entry. Here\n        // we have two scenarios:\n        // 1. The tree entry is initialized, and the value is the same as the one in the witness\n        // 2. The entry was never initialized, and the value is default zero (the default)\n        // The code below is based on the same checks in `validate_public_data_reads` in `base_rollup_inputs`.\n        let preimage = witness.leaf_preimage;\n\n        let is_less_than_slot = full_field_less_than(preimage.slot, public_data_tree_index);\n        let is_next_greater_than = full_field_less_than(public_data_tree_index, preimage.next_slot);\n        let is_max = ((preimage.next_index == 0) & (preimage.next_slot == 0));\n        let is_in_range = is_less_than_slot & (is_next_greater_than | is_max);\n\n        let value = if is_in_range {\n            0\n        } else {\n            assert_eq(preimage.slot, public_data_tree_index, \"Public data tree index doesn't match witness\");\n            preimage.value\n        };\n\n        value\n    }\n}\n"},"158":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/initializer.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, hash::poseidon2_hash_with_separator, constants::GENERATOR_INDEX__CONSTRUCTOR,\n    abis::function_selector::FunctionSelector\n};\n\nuse crate::{\n    context::{PrivateContext, PublicContext}, oracle::get_contract_instance::get_contract_instance,\n    oracle::get_contract_instance::get_contract_instance_avm\n};\n\npub fn mark_as_initialized_public(context: &mut PublicContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier((*context).this_address());\n    context.push_nullifier(init_nullifier);\n}\n\npub fn mark_as_initialized_private(context: &mut PrivateContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier((*context).this_address());\n    context.push_nullifier(init_nullifier);\n}\n\npub fn assert_is_initialized_public(context: &mut PublicContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    assert(context.nullifier_exists(init_nullifier, context.this_address()), \"Not initialized\");\n}\n\npub fn assert_is_initialized_private(context: &mut PrivateContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    context.push_nullifier_read_request(init_nullifier);\n}\n\nfn compute_unsiloed_contract_initialization_nullifier(address: AztecAddress) -> Field {\n    address.to_field()\n}\n\npub fn assert_initialization_matches_address_preimage_public(context: PublicContext) {\n    let address = context.this_address();\n    let instance = get_contract_instance_avm(address).unwrap();\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn assert_initialization_matches_address_preimage_private(context: PrivateContext) {\n    let address = context.this_address();\n    let instance = get_contract_instance(address);\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn compute_initialization_hash(init_selector: FunctionSelector, init_args_hash: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [init_selector.to_field(), init_args_hash],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n"},"162":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/utils/point.nr","source":"use dep::protocol_types::point::Point;\n\n// I am storing the modulus divided by 2 plus 1 here because full modulus would throw \"String literal too large\" error\n// Full modulus is 21888242871839275222246405745257275088548364400416034343698204186575808495617\nglobal BN254_FR_MODULUS_DIV_2: Field = 10944121435919637611123202872628637544274182200208017171849102093287904247808;\n\n/// Converts a public key to a byte array.\n///\n/// We don't serialize the point at infinity flag because this function is used in situations where we do not want\n/// to waste the extra byte (encrypted log).\npub fn point_to_bytes(pk: Point) -> [u8; 32] {\n    // Note that there is 1 more free bit in the 32 bytes (254 bits currently occupied by the x coordinate, 1 bit for\n    // the \"sign\") so it's possible to use that last bit as an \"is_infinite\" flag if desired in the future.\n    assert(!pk.is_infinite, \"Cannot serialize point at infinity as bytes.\");\n\n    let mut result: [u8; 32] = pk.x.to_be_bytes();\n\n    // We store only a \"sign\" of the y coordinate because the rest can be derived from the x coordinate. To get\n    // the sign we check if the y coordinate is less or equal than the curve's order minus 1 divided by 2.\n    // Ideally we'd do `y <= MOD_DIV_2`, but there's no `lte` function, so instead we do `!(y > MOD_DIV_2)`, which is\n    // equivalent, and then rewrite that as `!(MOD_DIV_2 < y)`, since we also have no `gt` function.\n    if !BN254_FR_MODULUS_DIV_2.lt(pk.y) {\n        // y is <= (modulus - 1) / 2 so we set the sign bit to 1\n        // Here we leverage that field fits into 254 bits (log2(Fr.MODULUS) < 254) and given that we serialize Fr to 32\n        // bytes and we use big-endian the 2 most significant bits are never populated. Hence we can use one of\n        // the bits as a sign bit.\n        result[0] += 128;\n    }\n\n    result\n}\n\nmod test {\n    use dep::protocol_types::point::Point;\n    use crate::utils::point::point_to_bytes;\n\n    #[test]\n    unconstrained fn test_point_to_bytes_positive_sign() {\n        let p = Point {\n            x: 0x1af41f5de96446dc3776a1eb2d98bb956b7acd9979a67854bec6fa7c2973bd73,\n            y: 0x07fc22c7f2c7057571f137fe46ea9c95114282bc95d37d71ec4bfb88de457d4a,\n            is_infinite: false\n        };\n\n        let compressed_point = point_to_bytes(p);\n\n        let expected_compressed_point_positive_sign = [\n            154, 244, 31, 93, 233, 100, 70, 220, 55, 118, 161, 235, 45, 152, 187, 149, 107, 122, 205, 153, 121, 166, 120, 84, 190, 198, 250, 124, 41, 115, 189, 115\n        ];\n\n        assert_eq(expected_compressed_point_positive_sign.len(), compressed_point.len());\n        for i in 0..expected_compressed_point_positive_sign.len() {\n            assert_eq(compressed_point[i], expected_compressed_point_positive_sign[i]);\n        }\n    }\n\n    #[test]\n    unconstrained fn test_point_to_bytes_negative_sign() {\n        let p = Point {\n            x: 0x247371652e55dd74c9af8dbe9fb44931ba29a9229994384bd7077796c14ee2b5,\n            y: 0x26441aec112e1ae4cee374f42556932001507ad46e255ffb27369c7e3766e5c0,\n            is_infinite: false\n        };\n\n        let compressed_point = point_to_bytes(p);\n\n        let expected_compressed_point_negative_sign = [\n            36, 115, 113, 101, 46, 85, 221, 116, 201, 175, 141, 190, 159, 180, 73, 49, 186, 41, 169, 34, 153, 148, 56, 75, 215, 7, 119, 150, 193, 78, 226, 181\n        ];\n\n        assert_eq(expected_compressed_point_negative_sign.len(), compressed_point.len());\n        for i in 0..expected_compressed_point_negative_sign.len() {\n            assert_eq(compressed_point[i], expected_compressed_point_negative_sign[i]);\n        }\n    }\n}\n"},"164":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/utils/collapse_array.nr","source":"// Collapses an array of Options with sparse Some values into a BoundedVec, essentially unwrapping the Options and\n// removing the None values. For example, given:\n//   input: [some(3), none(), some(1)]\n// this returns\n//   collapsed: [3, 1]\npub fn collapse_array<T, let N: u32>(input: [Option<T>; N]) -> BoundedVec<T, N> where T: Eq {\n    // Computing the collpased BoundedVec would result in a very large number of constraints, since we'd need to loop\n    // over the input array and conditionally write to a dynamic vec index, which is a very unfriendly pattern to the\n    // proving backend.\n    // Instead, we use an unconstrained function to produce the final collapsed array, along with some hints, and then\n    // verify that the input and collapsed arrays are equivalent.\n    let (collapsed, collapsed_to_input_index_mapping) = unsafe {\n        get_collapse_hints(input)\n    };\n    verify_collapse_hints(input, collapsed, collapsed_to_input_index_mapping);\n    collapsed\n}\n\npub(crate) fn verify_collapse_hints<T, let N: u32>(\n    input: [Option<T>; N],\n    collapsed: BoundedVec<T, N>,\n    collapsed_to_input_index_mapping: BoundedVec<u32, N>\n) where T: Eq {\n    // collapsed should be a BoundedVec with all the non-none elements in input, in the same order. We need to lay down\n    // multiple constraints to guarantee this.\n\n    // First we check that the number of elements is correct\n    let mut count = 0;\n    for i in 0..N {\n        if input[i].is_some() {\n            count += 1;\n        }\n    }\n    assert_eq(count, collapsed.len(), \"Wrong collapsed vec length\");\n\n    // Then we check that all elements exist in the original array, and are in the same order. To do this we use the\n    // auxiliary collapsed_to_input_index_mapping array, which at index n contains the index in the input array that\n    // corresponds to the collapsed entry at index n.\n    // Example:\n    //  - input: [some(3), none(), some(1)]\n    //  - collapsed: [3, 1]\n    //  - collapsed_to_input_index_mapping: [0, 2]\n    // These two arrays should therefore have the same length.\n    assert_eq(collapsed.len(), collapsed_to_input_index_mapping.len(), \"Collapse hint vec length mismatch\");\n\n    // We now look at each collapsed entry and check that there is a valid equal entry in the input array.\n    let mut last_index = Option::none();\n    for i in 0..N {\n        if i < collapsed.len() {\n            let input_index = collapsed_to_input_index_mapping.get_unchecked(i);\n            assert(input_index < N, \"Out of bounds index hint\");\n\n            assert_eq(collapsed.get_unchecked(i), input[input_index].unwrap(), \"Wrong collapsed vec content\");\n\n            // By requiring increasing input indices, we both guarantee that we're not looking at the same input\n            // element more than once, and that we're going over them in the original order.\n            if last_index.is_some() {\n                assert(input_index > last_index.unwrap_unchecked(), \"Wrong collapsed vec order\");\n            }\n            last_index = Option::some(input_index);\n        } else {\n            // BoundedVec assumes that the unused parts of the storage are zeroed out (e.g. in the Eq impl), so we make\n            // sure that this property holds.\n            assert_eq(collapsed.get_unchecked(i), std::mem::zeroed(), \"Dirty collapsed vec storage\");\n        }\n    }\n    // We now know that:\n    //  - all values in the collapsed array exist in the input array\n    //  - the order of the collapsed values is the same as in the input array\n    //  - no input value is present more than once in the collapsed array\n    //  - the number of elements in the collapsed array is the same as in the input array.\n    // Therefore, the collapsed array is correct.\n}\n\nunconstrained fn get_collapse_hints<T, let N: u32>(input: [Option<T>; N]) -> (BoundedVec<T, N>, BoundedVec<u32, N>) {\n    let mut collapsed: BoundedVec<T, N> = BoundedVec::new();\n    let mut collapsed_to_input_index_mapping: BoundedVec<u32, N> = BoundedVec::new();\n\n    for i in 0..N {\n        if input[i].is_some() {\n            collapsed.push(input[i].unwrap_unchecked());\n            collapsed_to_input_index_mapping.push(i);\n        }\n    }\n\n    (collapsed, collapsed_to_input_index_mapping)\n}\n"},"167":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/get_public_data_witness.nr","source":"use dep::protocol_types::{constants::PUBLIC_DATA_TREE_HEIGHT, data::PublicDataTreeLeafPreimage, utils::arr_copy_slice};\n\nglobal LEAF_PREIMAGE_LENGTH: u32 = 4;\nglobal PUBLIC_DATA_WITNESS: u32 = 45;\n\npub struct PublicDataWitness {\n    index: Field,\n    leaf_preimage: PublicDataTreeLeafPreimage,\n    path: [Field; PUBLIC_DATA_TREE_HEIGHT],\n}\n\n#[oracle(getPublicDataTreeWitness)]\nunconstrained fn get_public_data_witness_oracle(\n    _block_number: u32,\n    _public_data_tree_index: Field\n) -> [Field; PUBLIC_DATA_WITNESS] {}\n\nunconstrained pub fn get_public_data_witness(\n    block_number: u32,\n    public_data_tree_index: Field\n) -> PublicDataWitness {\n    let fields = get_public_data_witness_oracle(block_number, public_data_tree_index);\n    PublicDataWitness {\n        index: fields[0],\n        leaf_preimage: PublicDataTreeLeafPreimage { slot: fields[1], value: fields[2], next_index: fields[3] as u32, next_slot: fields[4] },\n        path: arr_copy_slice(fields, [0; PUBLIC_DATA_TREE_HEIGHT], 1 + LEAF_PREIMAGE_LENGTH)\n    }\n}\n"},"169":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/notes.nr","source":"use crate::note::{note_header::NoteHeader, note_interface::NoteInterface};\n\nuse dep::protocol_types::{address::AztecAddress, utils::arr_copy_slice};\n\n/// Notifies the simulator that a note has been created, so that it can be returned in future read requests in the same\n/// transaction. This note should only be added to the non-volatile database if found in an actual block.\npub fn notify_created_note<let N: u32>(\n    storage_slot: Field,\n    note_type_id: Field,\n    serialized_note: [Field; N],\n    note_hash: Field,\n    counter: u32\n) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call.\n    unsafe {\n        notify_created_note_oracle_wrapper(storage_slot, note_type_id, serialized_note, note_hash, counter)\n    };\n}\n\n/// Notifies the simulator that a note has been nullified, so that it is no longer returned in future read requests in\n/// the same transaction. This note should only be removed to the non-volatile database if its nullifier is found in an\n/// actual block.\npub fn notify_nullified_note(nullifier: Field, note_hash: Field, counter: u32) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call.\n    unsafe {\n        notify_nullified_note_oracle_wrapper(nullifier, note_hash, counter)\n    };\n}\n\nunconstrained fn notify_created_note_oracle_wrapper<let N: u32>(\n    storage_slot: Field,\n    note_type_id: Field,\n    serialized_note: [Field; N],\n    note_hash: Field,\n    counter: u32\n) {\n    let _ = notify_created_note_oracle(storage_slot, note_type_id, serialized_note, note_hash, counter);\n}\n\n#[oracle(notifyCreatedNote)]\nunconstrained fn notify_created_note_oracle<let N: u32>(\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _serialized_note: [Field; N],\n    _note_hash: Field,\n    _counter: u32\n) -> Field {}\n\nunconstrained fn notify_nullified_note_oracle_wrapper(\n    nullifier: Field,\n    note_hash: Field,\n    counter: u32\n) {\n    let _ = notify_nullified_note_oracle(nullifier, note_hash, counter);\n}\n\n#[oracle(notifyNullifiedNote)]\nunconstrained fn notify_nullified_note_oracle(_nullifier: Field, _note_hash: Field, _counter: u32) -> Field {}\n\n#[oracle(getNotes)]\nunconstrained fn get_notes_oracle<let N: u32, let S: u32>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by_indexes: [u8; N],\n    _select_by_offsets: [u8; N],\n    _select_by_lengths: [u8; N],\n    _select_values: [Field; N],\n    _select_comparators: [u8; N],\n    _sort_by_indexes: [u8; N],\n    _sort_by_offsets: [u8; N],\n    _sort_by_lengths: [u8; N],\n    _sort_order: [u8; N],\n    _limit: u32,\n    _offset: u32,\n    _status: u8,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<let N: u32, let S: u32>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; N],\n    select_by_offsets: [u8; N],\n    select_by_lengths: [u8; N],\n    select_values: [Field; N],\n    select_comparators: [u8; N],\n    sort_by_indexes: [u8; N],\n    sort_by_offsets: [u8; N],\n    sort_by_lengths: [u8; N],\n    sort_order: [u8; N],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        return_size,\n        placeholder_fields\n    )\n}\n\nunconstrained pub fn get_notes<Note, let N: u32, let M: u32, let S: u32, let NS: u32>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; M],\n    select_by_offsets: [u8; M],\n    select_by_lengths: [u8; M],\n    select_values: [Field; M],\n    select_comparators: [u8; M],\n    sort_by_indexes: [u8; M],\n    sort_by_offsets: [u8; M],\n    sort_by_lengths: [u8; M],\n    sort_order: [u8; M],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n    _placeholder_note_length: [Field; N] // Turbofish hack? Compiler breaks calculating read_offset unless we add this parameter\n) -> [Option<Note>; S] where Note: NoteInterface<N> {\n    let fields = get_notes_oracle_wrapper(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        placeholder_fields\n    );\n    let num_notes = fields[0] as u32;\n    let contract_address = AztecAddress::from_field(fields[1]);\n    for i in 0..placeholder_opt_notes.len() {\n        if i < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: u32 = 2; // num_notes & contract_address.\n            let extra_preimage_length: u32 = 2; // nonce & note_hash_counter.\n            let read_offset: u32 = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let note_hash_counter = fields[read_offset + 1] as u32;\n            let header = NoteHeader { contract_address, nonce, storage_slot, note_hash_counter };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = Note::deserialize_content(serialized_note);\n            note.set_header(header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n/// Returns true if the nullifier exists. Note that a `true` value can be constrained by proving existence of the\n/// nullifier, but a `false` value should not be relied upon since other transactions may emit this nullifier before the\n/// current transaction is included in a block. While this might seem of little use at first, certain design patterns\n/// benefit from this abstraction (see e.g. `PrivateMutable`).\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n\n#[oracle(checkNullifierExists)]\nunconstrained fn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n"},"172":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/call_private_function.nr","source":"use dep::protocol_types::{abis::function_selector::FunctionSelector, address::AztecAddress, utils::reader::Reader};\n\n#[oracle(callPrivateFunction)]\nunconstrained fn call_private_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _start_side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; 2] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    start_side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> (u32, Field) {\n    let fields = call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        start_side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    );\n\n    let mut reader = Reader::new(fields);\n    let end_side_effect_counter = reader.read_u32();\n    let returns_hash = reader.read();\n\n    (end_side_effect_counter, returns_hash)\n}\n"},"173":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/enqueue_public_function_call.nr","source":"use dep::protocol_types::{abis::{function_selector::FunctionSelector}, address::AztecAddress};\n\n#[oracle(enqueuePublicFunctionCall)]\nunconstrained fn enqueue_public_function_call_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> Field {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> Field {\n    enqueue_public_function_call_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    )\n}\n\n#[oracle(setPublicTeardownFunctionCall)]\nunconstrained fn set_public_teardown_function_call_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> Field {}\n\nunconstrained pub fn set_public_teardown_function_call_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> Field {\n    set_public_teardown_function_call_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    )\n}\n\npub fn notify_set_min_revertible_side_effect_counter(counter: u32) {\n    unsafe {\n        notify_set_min_revertible_side_effect_counter_oracle_wrapper(counter)\n    };\n}\n\nunconstrained pub fn notify_set_min_revertible_side_effect_counter_oracle_wrapper(counter: u32) {\n    notify_set_min_revertible_side_effect_counter_oracle(counter);\n}\n\n#[oracle(notifySetMinRevertibleSideEffectCounter)]\nunconstrained fn notify_set_min_revertible_side_effect_counter_oracle(_counter: u32) {}\n"},"174":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/logs.nr","source":"use dep::protocol_types::address::AztecAddress;\n\n/// Informs the simulator that an encrypted note log has been emitted, helping it keep track of side-effects and easing\n/// debugging.\npub fn emit_encrypted_note_log<let M: u32>(note_hash_counter: u32, encrypted_note: [u8; M], counter: u32) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call.\n    unsafe {\n        emit_encrypted_note_log_oracle_wrapper(note_hash_counter, encrypted_note, counter)\n    }\n}\n\n/// Informs the simulator that an encrypted event log has been emitted, helping it keep track of side-effects and easing\n/// debugging.\npub fn emit_encrypted_event_log<let M: u32>(contract_address: AztecAddress, randomness: Field, encrypted_event: [u8; M], counter: u32) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call.\n    unsafe {\n        emit_encrypted_event_log_oracle_wrapper(contract_address, randomness, encrypted_event, counter)\n    }\n}\n\n/// Informs the simulator that an unencrypted log has been emitted, helping it keep track of side-effects and easing\n/// debugging.\npub fn emit_unencrypted_log_private<T>(contract_address: AztecAddress, message: T, counter: u32) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call.\n    unsafe {\n        emit_unencrypted_log_private_oracle_wrapper(contract_address, message, counter)\n    }\n}\n\nunconstrained fn emit_encrypted_note_log_oracle_wrapper<let M: u32>(note_hash_counter: u32, encrypted_note: [u8; M], counter: u32) {\n    emit_encrypted_note_log_oracle(note_hash_counter, encrypted_note, counter)\n}\n\nunconstrained fn emit_encrypted_event_log_oracle_wrapper<let M: u32>(\n    contract_address: AztecAddress,\n    randomness: Field,\n    encrypted_event: [u8; M],\n    counter: u32\n) {\n    emit_encrypted_event_log_oracle(contract_address, randomness, encrypted_event, counter)\n}\n\nunconstrained fn emit_unencrypted_log_private_oracle_wrapper<T>(contract_address: AztecAddress, message: T, counter: u32) {\n    let _ = emit_unencrypted_log_private_oracle(contract_address, message, counter);\n}\n\n/// Temporary substitute for `emit_unencrypted_log_private` that is used for handling contract class registration. This\n/// variant returns the log hash, which would be too large to compute inside a circuit.\nunconstrained pub fn emit_contract_class_unencrypted_log_private<let N: u32>(\n    contract_address: AztecAddress,\n    message: [Field; N],\n    counter: u32\n) -> Field {\n    emit_contract_class_unencrypted_log_private_oracle(contract_address, message, counter)\n}\n\n// = 480 + 32 * N bytes\n#[oracle(emitEncryptedNoteLog)]\nunconstrained fn emit_encrypted_note_log_oracle<let M: u32>(\n    _note_hash_counter: u32,\n    _encrypted_note: [u8; M],\n    _counter: u32\n) {}\n\n#[oracle(emitEncryptedEventLog)]\nunconstrained fn emit_encrypted_event_log_oracle<let M: u32>(\n    _contract_address: AztecAddress,\n    _randomness: Field,\n    _encrypted_event: [u8; M],\n    _counter: u32\n) {}\n\n#[oracle(emitUnencryptedLog)]\nunconstrained fn emit_unencrypted_log_private_oracle<T>(\n    _contract_address: AztecAddress,\n    _message: T,\n    _counter: u32\n) -> Field {}\n\n#[oracle(emitContractClassUnencryptedLog)]\nunconstrained fn emit_contract_class_unencrypted_log_private_oracle<let N: u32>(\n    contract_address: AztecAddress,\n    message: [Field; N],\n    counter: u32\n) -> Field {}\n"},"177":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/get_contract_instance.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, contract_instance::ContractInstance, constants::CONTRACT_INSTANCE_LENGTH,\n    utils::reader::Reader\n};\n\n#[oracle(getContractInstance)]\nunconstrained fn get_contract_instance_oracle(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {}\n\n// Returns a ContractInstance plus a boolean indicating whether the instance was found.\n#[oracle(avmOpcodeGetContractInstance)]\nunconstrained fn get_contract_instance_oracle_avm(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {}\n\nunconstrained fn get_contract_instance_internal(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n    get_contract_instance_oracle(address)\n}\n\nunconstrained pub fn get_contract_instance_internal_avm(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {\n    get_contract_instance_oracle_avm(address)\n}\n\npub fn get_contract_instance(address: AztecAddress) -> ContractInstance {\n    let instance = unsafe {\n        ContractInstance::deserialize(get_contract_instance_internal(address))\n    };\n    // The to_address function combines all values in the instance object to produce an address, so by checking that we\n    // get the expected address we validate the entire struct.\n    assert_eq(instance.to_address(), address);\n\n    instance\n}\n\npub fn get_contract_instance_avm(address: AztecAddress) -> Option<ContractInstance> {\n    let mut reader = Reader::new(get_contract_instance_internal_avm(address));\n    let found = reader.read();\n    if found == 0 {\n        Option::none()\n    } else {\n        Option::some(reader.read_struct(ContractInstance::deserialize))\n    }\n}\n"},"178":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/returns.nr","source":"/// Notifies the simulator that `returns` will be later fetched once the function return is processed, referenced by\n/// their hash. This allows the simulator to know how to respond to this future request.\n///\n/// This is only used during private execution, since in public it is the VM itself that keeps track of return values.\npub fn pack_returns(returns: [Field]) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call. When\n    // unpacking however the caller must check that the returned value is indeed the preimage.\n    unsafe {\n        pack_returns_oracle_wrapper(returns)\n    };\n}\n\nunconstrained pub fn pack_returns_oracle_wrapper(returns: [Field]) {\n    let _ = pack_returns_oracle(returns);\n}\n\nunconstrained pub fn unpack_returns<let N: u32>(return_hash: Field) -> [Field; N] {\n    unpack_returns_oracle(return_hash)\n}\n\n#[oracle(packReturns)]\nunconstrained fn pack_returns_oracle(_returns: [Field]) -> Field {}\n\n#[oracle(unpackReturns)]\nunconstrained fn unpack_returns_oracle<let N: u32>(_return_hash: Field) -> [Field; N] {}\n"},"180":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/random.nr","source":"/// Returns an unconstrained random value. Note that it is not possible to constrain this value to prove that it is\n/// truly random: we assume that the oracle is cooperating and returning random values.\n/// In some applications this behavior might not be acceptable and other techniques might be more suitable, such as\n/// producing pseudo-random values by hashing values outside of user control (like block hashes) or secrets.\nunconstrained pub fn random() -> Field {\n    rand_oracle()\n}\n\n#[oracle(getRandomField)]\nunconstrained fn rand_oracle() -> Field {}\n"},"181":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/keys.nr","source":"use crate::keys::{PublicKeys, public_keys::{NpkM, IvpkM, OvpkM, TpkM}};\nuse dep::protocol_types::{address::{AztecAddress, PartialAddress}, point::Point};\n\n#[oracle(getPublicKeysAndPartialAddress)]\nunconstrained fn get_public_keys_and_partial_address_oracle(_address: AztecAddress) -> [Field; 13] {}\n\nunconstrained pub fn get_public_keys_and_partial_address(address: AztecAddress) -> (PublicKeys, PartialAddress) {\n    let result = get_public_keys_and_partial_address_oracle(address);\n\n    let keys = PublicKeys {\n        npk_m: NpkM { inner: Point { x: result[0], y: result[1], is_infinite: result[2] as bool } },\n        ivpk_m: IvpkM { inner: Point { x: result[3], y: result[4], is_infinite: result[5] as bool } },\n        ovpk_m: OvpkM { inner: Point { x: result[6], y: result[7], is_infinite: result[8] as bool } },\n        tpk_m: TpkM { inner: Point { x: result[9], y: result[10], is_infinite: result[11] as bool } }\n    };\n\n    let partial_address = PartialAddress::from_field(result[12]);\n\n    (keys, partial_address)\n}\n"},"182":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/key_validation_request.nr","source":"use dep::protocol_types::abis::validation_requests::{KeyValidationRequest, key_validation_request::KEY_VALIDATION_REQUEST_LENGTH};\n\n#[oracle(getKeyValidationRequest)]\nunconstrained fn get_key_validation_request_oracle(\n    _pk_m_hash: Field,\n    _key_index: Field\n) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {}\n\nunconstrained fn get_key_validation_request_internal(\n    npk_m_hash: Field,\n    key_index: Field\n) -> KeyValidationRequest {\n    let result = get_key_validation_request_oracle(npk_m_hash, key_index);\n    KeyValidationRequest::deserialize(result)\n}\n\nunconstrained pub fn get_key_validation_request(\n    pk_m_hash: Field,\n    key_index: Field\n) -> KeyValidationRequest {\n    get_key_validation_request_internal(pk_m_hash, key_index)\n}\n"},"183":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/arguments.nr","source":"/// Notifies the simulator that `args` will later be used at some point during execution, referenced by their hash. This\n/// allows the simulator to know how to respond to this future request.\n///\n/// This is only used during private execution, since in public it is the VM itself that keeps track of arguments.\npub fn pack_arguments(args: [Field]) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call. When\n    // unpacking however the caller must check that the returned value is indeed the preimage.\n    unsafe {\n        pack_arguments_oracle_wrapper(args)\n    };\n}\n\n/// Same as `pack_arguments`, but using arrays instead of slices.\npub fn pack_arguments_array<let N: u32>(args: [Field; N]) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call. When\n    // unpacking however the caller must check that the returned value is indeed the preimage.\n    unsafe {\n        pack_arguments_array_oracle_wrapper(args)\n    };\n}\n\nunconstrained fn pack_arguments_oracle_wrapper(args: [Field]) {\n    let _ = pack_arguments_oracle(args);\n}\n\nunconstrained fn pack_arguments_array_oracle_wrapper<let N: u32>(args: [Field; N]) {\n    let _ = pack_arguments_array_oracle(args);\n}\n\n#[oracle(packArguments)]\nunconstrained fn pack_arguments_oracle(_args: [Field]) -> Field {}\n\n#[oracle(packArgumentsArray)]\nunconstrained fn pack_arguments_array_oracle<let N: u32>(_args: [Field; N]) -> Field {}\n"},"195":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/type_serialization.nr","source":"use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: u32 = 1;\nglobal U8_SERIALIZED_LEN: u32 = 1;\nglobal U32_SERIALIZED_LEN: u32 = 1;\nglobal U64_SERIALIZED_LEN: u32 = 1;\nglobal U128_SERIALIZED_LEN: u32 = 1;\nglobal FIELD_SERIALIZED_LEN: u32 = 1;\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U8_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U64_SERIALIZED_LEN> for u64 {\n    fn serialize(self) -> [Field; U64_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U64_SERIALIZED_LEN> for u64 {\n    fn deserialize(fields: [Field; U64_SERIALIZED_LEN]) -> Self {\n        fields[0] as u64\n    }\n}\n\nimpl Serialize<U128_SERIALIZED_LEN> for U128 {\n    fn serialize(self) -> [Field; U128_SERIALIZED_LEN] {\n        [self.to_integer()]\n    }\n}\n\nimpl Deserialize<U128_SERIALIZED_LEN> for U128 {\n    fn deserialize(fields: [Field; U128_SERIALIZED_LEN]) -> Self {\n        U128::from_integer(fields[0])\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; FIELD_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n\nimpl <T, let N: u32, let M: u32> Serialize<N * M> for [T; N] where T: Serialize<M> {\n    fn serialize(self) -> [Field; N * M] {\n        let mut result: [Field; N * M] = std::mem::zeroed();\n        let mut serialized: [Field; M] = std::mem::zeroed();\n        for i in 0..N {\n            serialized = self[i].serialize();\n            for j in 0..M {\n                result[i * M + j] = serialized[j];\n            }\n        }\n        result\n    }\n}\n\nimpl <T, let N: u32, let M: u32> Deserialize<N * M> for [T; N] where T: Deserialize<M> {\n    fn deserialize(fields: [Field; N * M]) -> Self {\n        let mut reader = crate::utils::reader::Reader::new(fields);\n        let mut result: [T; N] = std::mem::zeroed();\n        reader.read_struct_array::<T, M, N>(Deserialize::deserialize, result)\n    }\n}\n"},"197":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/storage/map.nr","source":"use crate::{hash::poseidon2_hash, traits::ToField};\n\npub fn derive_storage_slot_in_map<K>(storage_slot: Field, key: K) -> Field where K: ToField {\n    poseidon2_hash([storage_slot, key.to_field()])\n}\n\nmod test {\n    use crate::{address::AztecAddress, storage::map::derive_storage_slot_in_map};\n\n    #[test]\n    fn test_derive_storage_slot_in_map_matches_typescript() {\n        let map_slot = 0x132258fb6962c4387ba659d9556521102d227549a386d39f0b22d1890d59c2b5;\n        let key = AztecAddress::from_field(0x302dbc2f9b50a73283d5fb2f35bc01eae8935615817a0b4219a057b2ba8a5a3f);\n\n        let slot = derive_storage_slot_in_map(map_slot, key);\n\n        // The following value was generated by `map_slot.test.ts`\n        let slot_from_typescript = 0x15b9fe39449affd8b377461263e9d2b610b9ad40580553500b4e41d9cbd887ac;\n\n        assert_eq(slot, slot_from_typescript);\n    }\n}\n"},"198":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/hash.nr","source":"use crate::{\n    abis::{\n    contract_class_function_leaf_preimage::ContractClassFunctionLeafPreimage,\n    function_selector::FunctionSelector, log_hash::{LogHash, ScopedLogHash, ScopedEncryptedLogHash},\n    note_hash::ScopedNoteHash, nullifier::ScopedNullifier\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    FUNCTION_TREE_HEIGHT, GENERATOR_INDEX__SILOED_NOTE_HASH, GENERATOR_INDEX__OUTER_NULLIFIER,\n    GENERATOR_INDEX__VK, GENERATOR_INDEX__NOTE_HASH_NONCE, GENERATOR_INDEX__UNIQUE_NOTE_HASH,\n    MAX_ENCRYPTED_LOGS_PER_TX, MAX_NOTE_ENCRYPTED_LOGS_PER_TX\n},\n    merkle_tree::root::root_from_sibling_path,\n    messaging::l2_to_l1_message::{L2ToL1Message, ScopedL2ToL1Message},\n    recursion::verification_key::VerificationKey, traits::{is_empty, ToField},\n    utils::field::field_from_bytes_32_trunc\n};\nuse super::utils::field::field_from_bytes;\n\npub fn sha256_to_field<let N: u32>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = std::hash::sha256(bytes_to_hash);\n    let hash_in_a_field = field_from_bytes_32_trunc(sha256_hashed);\n\n    hash_in_a_field\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\nfn compute_note_hash_nonce(tx_hash: Field, note_index_in_tx: u32) -> Field {\n    // Hashing tx hash with note index in tx is guaranteed to be unique\n    poseidon2_hash_with_separator(\n        [\n        tx_hash,\n        note_index_in_tx as Field\n    ],\n        GENERATOR_INDEX__NOTE_HASH_NONCE\n    )\n}\n\npub fn compute_unique_note_hash(nonce: Field, note_hash: Field) -> Field {\n    let inputs = [nonce, note_hash];\n    poseidon2_hash_with_separator(inputs, GENERATOR_INDEX__UNIQUE_NOTE_HASH)\n}\n\npub fn compute_siloed_note_hash(app: AztecAddress, unique_note_hash: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [\n        app.to_field(),\n        unique_note_hash\n    ],\n        GENERATOR_INDEX__SILOED_NOTE_HASH\n    )\n}\n\n/// Siloing in the context of Aztec refers to the process of hashing a note hash with a contract address (this way\n/// the note hash is scoped to a specific contract). This is used to prevent intermingling of notes between contracts.\npub fn silo_note_hash(note_hash: ScopedNoteHash, tx_hash: Field, note_index_in_tx: u32) -> Field {\n    if note_hash.contract_address.is_zero() {\n        0\n    } else {\n        let nonce = compute_note_hash_nonce(tx_hash, note_index_in_tx);\n        let unique_note_hash = compute_unique_note_hash(nonce, note_hash.value());\n        compute_siloed_note_hash(note_hash.contract_address, unique_note_hash)\n    }\n}\n\npub fn compute_siloed_nullifier(app: AztecAddress, nullifier: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [\n        app.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\npub fn silo_nullifier(nullifier: ScopedNullifier) -> Field {\n    if nullifier.contract_address.is_zero() {\n        nullifier.value() // Return value instead of 0 because the first nullifier's contract address is zero.\n    } else {\n        compute_siloed_nullifier(nullifier.contract_address, nullifier.value())\n    }\n}\n\npub fn silo_encrypted_log_hash(log_hash: ScopedLogHash) -> Field {\n    // We assume contract address has already been masked\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        accumulate_sha256([log_hash.contract_address.to_field(), log_hash.log_hash.value])\n    }\n}\n\npub fn mask_encrypted_log_hash(scoped_log: ScopedEncryptedLogHash) -> AztecAddress {\n    if scoped_log.contract_address.is_zero() {\n        AztecAddress::from_field(0)\n    } else if (scoped_log.log_hash.randomness == 0) {\n        scoped_log.contract_address\n    } else {\n        AztecAddress::from_field(\n            poseidon2_hash_with_separator(\n                [scoped_log.contract_address.to_field(), scoped_log.log_hash.randomness],\n                0\n            )\n        )\n    }\n}\n\nfn compute_siloed_unencrypted_log_hash(address: AztecAddress, log_hash: Field) -> Field {\n    accumulate_sha256([address.to_field(), log_hash])\n}\n\npub fn silo_unencrypted_log_hash(log_hash: ScopedLogHash) -> Field {\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        compute_siloed_unencrypted_log_hash(log_hash.contract_address, log_hash.value())\n    }\n}\n\npub fn merkle_hash(left: Field, right: Field) -> Field {\n    poseidon2_hash([left, right])\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    recipient: EthAddress,\n    content: Field,\n    rollup_version_id: Field,\n    chain_id: Field\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new();\n\n    let inputs = [contract_address.to_field(), rollup_version_id, recipient.to_field(), chain_id, content];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes: [u8; 32] = inputs[i].to_be_bytes();\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\npub fn silo_l2_to_l1_message(msg: ScopedL2ToL1Message, rollup_version_id: Field, chain_id: Field) -> Field {\n    if msg.contract_address.is_zero() {\n        0\n    } else {\n        compute_l2_to_l1_hash(\n            msg.contract_address,\n            msg.message.recipient,\n            msg.message.content,\n            rollup_version_id,\n            chain_id\n        )\n    }\n}\n\n// Computes sha256 hash of 2 input hashes.\n//\n// NB: This method now takes in two 31 byte fields - it assumes that any input\n// is the result of a sha_to_field hash and => is truncated\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\npub fn accumulate_sha256(input: [Field; 2]) -> Field {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually\n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field\n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n\n    // Concatentate two fields into 32x2 = 64 bytes\n    // accumulate_sha256 assumes that the inputs are pre-truncated 31 byte numbers\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..input.len() {\n        let input_as_bytes: [u8; 32] = input[offset].to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    sha256_to_field(hash_input_flattened)\n}\n\n// Computes the final logs hash for a tx.\n// NB: this assumes MAX_ENCRYPTED_LOGS_PER_TX == MAX_UNENCRYPTED_LOGS_PER_TX\n// to avoid doubling code, since we can't define the byte len to be 32*N directly.\npub fn compute_tx_logs_hash(logs: [LogHash; MAX_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes: [u8; 32] = logs[offset].value.to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn compute_tx_note_logs_hash(logs: [LogHash; MAX_NOTE_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_NOTE_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_NOTE_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes: [u8; 32] = logs[offset].value.to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn pedersen_hash<let N: u32>(inputs: [Field; N], hash_index: u32) -> Field {\n    std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n\npub fn poseidon2_hash<let N: u32>(inputs: [Field; N]) -> Field {\n    std::hash::poseidon2::Poseidon2::hash(inputs, N)\n}\n\n#[no_predicates]\npub fn poseidon2_hash_with_separator<let N: u32, T>(\n    inputs: [Field; N],\n    separator: T\n) -> Field where T: ToField {\n    // We manually hash the inputs here, since we cannot express with the type system a constant size inputs array of N + 1\n    let in_len = N + 1;\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n    sponge.absorb(separator.to_field());\n\n    for i in 0..inputs.len() {\n        sponge.absorb(inputs[i]);\n    }\n\n    sponge.squeeze()\n}\n\npub fn poseidon2_hash_with_separator_slice<T>(inputs: [Field], separator: T) -> Field where T: ToField {\n    let in_len = inputs.len() + 1;\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n    sponge.absorb(separator.to_field());\n\n    for i in 0..inputs.len() {\n        sponge.absorb(inputs[i]);\n    }\n\n    sponge.squeeze()\n}\n\n#[no_predicates]\npub fn poseidon2_hash_bytes<let N: u32>(inputs: [u8; N]) -> Field {\n    // We manually hash the inputs here, since we cannot express with the type system a constant size inputs array of Math.ceil(N/31)\n    let mut in_len = N / 31;\n    let mut has_padding = false;\n    if N % 31 != 0 {\n        in_len += 1;\n        has_padding = true;\n    }\n\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n\n    let mut current_field = [0; 31];\n    for i in 0..inputs.len() {\n        let index = i % 31;\n        current_field[index] = inputs[i];\n        if index == 30 {\n            sponge.absorb(field_from_bytes(current_field, false));\n            current_field = [0; 31];\n        }\n    }\n    if has_padding {\n        sponge.absorb(field_from_bytes(current_field, false));\n    }\n\n    sponge.squeeze()\n}\n\n#[test]\nfn smoke_sha256_to_field() {\n    let full_buffer = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159\n    ];\n    let result = sha256_to_field(full_buffer);\n\n    assert(result == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184c7);\n\n    // to show correctness of the current ver (truncate one byte) vs old ver (mod full bytes):\n    let result_bytes = std::hash::sha256(full_buffer);\n    let truncated_field = crate::utils::field::field_from_bytes_32_trunc(result_bytes);\n    assert(truncated_field == result);\n    let mod_res = result + (result_bytes[31] as Field);\n    assert(mod_res == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184e0);\n}\n\n#[test]\nfn compute_l2_l1_hash() {\n    // All zeroes\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(0), EthAddress::zero(), 0, 0, 0);\n    assert(hash_result == 0xb393978842a0fa3d3e1470196f098f473f9678e72463cb65ec4ab5581856c2);\n\n    // Non-zero case\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(1), EthAddress::from_field(3), 5, 2, 4);\n    assert(hash_result == 0x3f88c1044a05e5340ed20466276500f6d45ca5603913b9091e957161734e16);\n}\n\n#[test]\nfn silo_l2_to_l1_message_matches_typescript() {\n    let version = 4;\n    let chainId = 5;\n\n    let hash = silo_l2_to_l1_message(\n        ScopedL2ToL1Message {\n        message: L2ToL1Message { recipient: EthAddress::from_field(1), content: 2, counter: 0 },\n        contract_address: AztecAddress::from_field(3)\n    },\n        version,\n        chainId\n    );\n\n    // The following value was generated by `l2_to_l1_message.test.ts`\n    let hash_from_typescript = 0x00c6155d69febb9d5039b374dd4f77bf57b7c881709aa524a18acaa0bd57476a;\n\n    assert_eq(hash, hash_from_typescript);\n}\n"},"207":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/merkle_tree/root.nr","source":"use crate::{hash::merkle_hash, merkle_tree::merkle_tree::MerkleTree};\n\n// Calculate the Merkle tree root from the sibling path and leaf.\n//\n// The leaf is hashed with its sibling, and then the result is hashed\n// with the next sibling etc in the path. The last hash is the root.\n//\n// TODO(David/Someone): The cpp code is using a uint256, whereas its\n// TODO a bit simpler in Noir to just have a bit array.\n// TODO: I'd generally like to avoid u256 for algorithms like\n// this because it means we never even need to consider cases where\n// the index is greater than p.\npub fn root_from_sibling_path<let N: u32>(\n    leaf: Field,\n    leaf_index: Field,\n    sibling_path: [Field; N]\n) -> Field {\n    let mut node = leaf;\n    let indices: [u1; N] = leaf_index.to_le_bits();\n\n    for i in 0..N {\n        let (hash_left, hash_right) = if indices[i] == 1 {\n            (sibling_path[i], node)\n        } else {\n            (node, sibling_path[i])\n        };\n        node = merkle_hash(hash_left, hash_right);\n    }\n    node\n}\n\npub fn calculate_subtree_root<let N: u32>(leaves: [Field; N]) -> Field {\n    MerkleTree::new(leaves).get_root()\n}\n\n// These values are precomputed and we run tests to ensure that they\n// are correct. The values themselves were computed from the cpp code.\n//\n// Would be good if we could use width since the compute_subtree\n// algorithm uses depth.\npub fn calculate_empty_tree_root(depth: u32) -> Field {\n    if depth == 0 {\n        0\n    } else if depth == 1 {\n        0x0b63a53787021a4a962a452c2921b3663aff1ffd8d5510540f8e659e782956f1\n    } else if depth == 2 {\n        0x0e34ac2c09f45a503d2908bcb12f1cbae5fa4065759c88d501c097506a8b2290\n    } else if depth == 3 {\n        0x21f9172d72fdcdafc312eee05cf5092980dda821da5b760a9fb8dbdf607c8a20\n    } else if depth == 4 {\n        0x2373ea368857ec7af97e7b470d705848e2bf93ed7bef142a490f2119bcf82d8e\n    } else if depth == 5 {\n        0x120157cfaaa49ce3da30f8b47879114977c24b266d58b0ac18b325d878aafddf\n    } else if depth == 6 {\n        0x01c28fe1059ae0237b72334700697bdf465e03df03986fe05200cadeda66bd76\n    } else if depth == 7 {\n        0x2d78ed82f93b61ba718b17c2dfe5b52375b4d37cbbed6f1fc98b47614b0cf21b\n    } else if depth == 8 {\n        0x067243231eddf4222f3911defbba7705aff06ed45960b27f6f91319196ef97e1\n    } else if depth == 9 {\n        0x1849b85f3c693693e732dfc4577217acc18295193bede09ce8b97ad910310972\n    } else if depth == 10 {\n        0x2a775ea761d20435b31fa2c33ff07663e24542ffb9e7b293dfce3042eb104686\n    } else {\n        panic(f\"depth should be between 0 and 10\")\n    }\n}\n\n#[test]\nfn test_merkle_root_interop_test() {\n    // This is a test to ensure that we match the cpp implementation.\n    // You can grep for `TEST_F(root_rollup_tests, noir_interop_test)`\n    // to find the test that matches this.\n    let root = calculate_subtree_root([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]);\n    assert(0x1a09d935ae110b4c861fcec8f9099ec30b4485022aeb3d3cf9d7168e38fdc231 == root);\n\n    let empty_root = calculate_subtree_root([0; 16]);\n    assert(0x2373ea368857ec7af97e7b470d705848e2bf93ed7bef142a490f2119bcf82d8e == empty_root);\n}\n\n#[test]\nfn test_empty_subroot() {\n    assert(calculate_empty_tree_root(0) == 0);\n\n    let expected_empty_root_2 = calculate_subtree_root([0; 2]);\n    assert(calculate_empty_tree_root(1) == expected_empty_root_2);\n\n    let expected_empty_root_4 = calculate_subtree_root([0; 4]);\n    assert(calculate_empty_tree_root(2) == expected_empty_root_4);\n\n    let expected_empty_root_8 = calculate_subtree_root([0; 8]);\n    assert(calculate_empty_tree_root(3) == expected_empty_root_8);\n\n    let expected_empty_root_16 = calculate_subtree_root([0; 16]);\n    assert(calculate_empty_tree_root(4) == expected_empty_root_16);\n\n    let expected_empty_root_32 = calculate_subtree_root([0; 32]);\n    assert(calculate_empty_tree_root(5) == expected_empty_root_32);\n\n    let expected_empty_root_64 = calculate_subtree_root([0; 64]);\n    assert(calculate_empty_tree_root(6) == expected_empty_root_64);\n\n    let expected_empty_root_128 = calculate_subtree_root([0; 128]);\n    assert(calculate_empty_tree_root(7) == expected_empty_root_128);\n\n    let expected_empty_root_256 = calculate_subtree_root([0; 256]);\n    assert(calculate_empty_tree_root(8) == expected_empty_root_256);\n\n    let expected_empty_root_512 = calculate_subtree_root([0; 512]);\n    assert(calculate_empty_tree_root(9) == expected_empty_root_512);\n\n    let expected_empty_root_1024 = calculate_subtree_root([0; 1024]);\n    assert(calculate_empty_tree_root(10) == expected_empty_root_1024);\n}\n"},"215":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/address/aztec_address.nr","source":"use crate::{\n    address::{partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    constants::{AZTEC_ADDRESS_LENGTH, GENERATOR_INDEX__CONTRACT_ADDRESS_V1},\n    hash::poseidon2_hash_with_separator, traits::{Empty, FromField, ToField, Serialize, Deserialize},\n    utils\n};\n\n// Aztec address\npub struct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other: Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self { inner: 0 }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl FromField for AztecAddress {\n    fn from_field(value: Field) -> AztecAddress {\n        AztecAddress { inner: value }\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_LENGTH] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_LENGTH]) -> Self {\n        FromField::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            poseidon2_hash_with_separator(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS_V1\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n\n#[test]\nfn compute_address_from_partial_and_pub_keys_hash() {\n    let pub_keys_hash = PublicKeysHash::from_field(1);\n    let partial_address = PartialAddress::from_field(2);\n\n    let address = AztecAddress::compute(pub_keys_hash, partial_address);\n    let expected_computed_address_from_partial_and_pubkey = 0x23ce9be3fa3c846b0f9245cc796902e731d04f086e8a42473bb29e405fc98075;\n    assert(address.to_field() == expected_computed_address_from_partial_and_pubkey);\n}\n\n#[test]\nfn from_field_to_field() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(FromField::from_field(address.to_field()), address);\n}\n\n#[test]\nfn serde() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(Deserialize::deserialize(address.serialize()), address);\n}\n"},"217":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/traits.nr","source":"use crate::utils::field::field_from_bytes;\nuse crate::meta::{derive_deserialize, derive_serialize};\n\n// Trait: is_empty\n//\n// The general is_empty trait checks if a data type is is empty,\n// and it defines empty for the basic data types as 0.\n//\n// If a Field is equal to zero, then it is regarded as zero.\n// We will go with this definition for now, however it can be problematic\n// if a value can actually be zero. In a future refactor, we can\n// use the optional type for safety. Doing it now would lead to a worse devex\n// and would make it harder to sync up with the cpp code.\n// Preferred over Default trait to convey intent, as default doesn't necessarily mean empty.\npub trait Empty {\n    fn empty() -> Self;\n}\n\nimpl Empty for Field {\n    fn empty() -> Self {\n        0\n    }\n}\n\nimpl Empty for u1 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u8 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u32 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u64 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for U128 {\n    fn empty() -> Self {\n        U128::from_integer(0)\n    }\n}\n\npub fn is_empty<T>(item: T) -> bool where T: Empty + Eq {\n    item.eq(T::empty())\n}\n\npub fn is_empty_array<T, let N: u32>(array: [T; N]) -> bool where T: Empty + Eq {\n    array.all(|elem| is_empty(elem))\n}\n\npub trait Hash {\n    fn hash(self) -> Field;\n}\n\npub trait ToField {\n    fn to_field(self) -> Field;\n}\n\nimpl ToField for Field {\n    fn to_field(self) -> Field {\n        self\n    }\n}\n\nimpl ToField for bool {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u1 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u8 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u32 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u64 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for U128 {\n    fn to_field(self) -> Field {\n        self.to_integer()\n    }\n}\nimpl<let N: u32> ToField for str<N> {\n    fn to_field(self) -> Field {\n        assert(N < 32, \"String doesn't fit in a field, consider using Serialize instead\");\n        field_from_bytes(self.as_bytes(), true)\n    }\n}\n\npub trait FromField {\n    fn from_field(value: Field) -> Self;\n}\n\nimpl FromField for Field {\n    fn from_field(value: Field) -> Self {\n        value\n    }\n}\n\nimpl FromField for bool {\n    fn from_field(value: Field) -> Self {\n        value as bool\n    }\n}\nimpl FromField for u1 {\n    fn from_field(value: Field) -> Self {\n        value as u1\n    }\n}\nimpl FromField for u8 {\n    fn from_field(value: Field) -> Self {\n        value as u8\n    }\n}\nimpl FromField for u32 {\n    fn from_field(value: Field) -> Self {\n        value as u32\n    }\n}\nimpl FromField for u64 {\n    fn from_field(value: Field) -> Self {\n        value as u64\n    }\n}\nimpl FromField for U128 {\n    fn from_field(value: Field) -> Self {\n        U128::from_integer(value)\n    }\n}\n\n// docs:start:serialize\n#[derive_via(derive_serialize)]\npub trait Serialize<let N: u32> {\n    fn serialize(self) -> [Field; N];\n}\n// docs:end:serialize\n\nimpl<let N: u32> Serialize<N> for str<N> {\n    fn serialize(self) -> [Field; N] {\n        let bytes = self.as_bytes();\n        let mut fields = [0; N];\n        for i in 0..bytes.len() {\n            fields[i] = bytes[i] as Field;\n        }\n        fields\n    }\n}\n\n// docs:start:deserialize\n#[derive_via(derive_deserialize)]\npub trait Deserialize<let N: u32> {\n    fn deserialize(fields: [Field; N]) -> Self;\n}\n// docs:end:deserialize\n\nimpl <let N: u32> Deserialize<N> for str<N> {\n    fn deserialize(fields: [Field; N]) -> Self {\n        str<N>::from(fields.map(|value| value as u8))\n    }\n}\n"},"218":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/mod.nr","source":"// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\npub fn arr_copy_slice<T, let N: u32, let M: u32>(src: [T; N], mut dst: [T; M], offset: u32) -> [T; M] {\n    let iterator_len = if N > M { M } else { N };\n    for i in 0..iterator_len {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n"},"220":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/reader.nr","source":"pub struct Reader<let N: u32> {\n    data: [Field; N],\n    offset: u32,\n}\n\nimpl<let N: u32> Reader<N> {\n    pub fn new(data: [Field; N]) -> Self {\n        Self { data, offset: 0 }\n    }\n\n    pub fn read(&mut self) -> Field {\n        let result = self.data[self.offset];\n        self.offset += 1;\n        result\n    }\n\n    pub fn read_u32(&mut self) -> u32 {\n        self.read() as u32\n    }\n\n    pub fn read_bool(&mut self) -> bool {\n        self.read() as bool\n    }\n\n    pub fn read_array<let K: u32>(&mut self, mut result: [Field; K]) -> [Field; K] {\n        for i in 0..K {\n            result[i] = self.data[self.offset + i];\n        }\n        self.offset += K;\n        result\n    }\n\n    // TODO(#4394)\n    pub fn read_struct<T, let K: u32>(&mut self, deserialise: fn([Field; K]) -> T) -> T {\n        let result = deserialise(self.read_array([0; K]));\n        result\n    }\n\n    pub fn read_struct_array<T, let K: u32, let C: u32>(&mut self, deserialise: fn([Field; K]) -> T, mut result: [T; C]) -> [T; C] {\n        for i in 0..C {\n            result[i] = self.read_struct(deserialise);\n        }\n        result\n    }\n\n    pub fn finish(self) {\n        assert(self.offset == self.data.len(), \"Reader did not read all data\");\n    }\n}\n"},"24":{"path":"std/embedded_curve_ops.nr","source":"use crate::ops::arith::{Add, Sub, Neg};\nuse crate::cmp::Eq;\n\n/// A point on the embedded elliptic curve\n/// By definition, the base field of the embedded curve is the scalar field of the proof system curve, i.e the Noir Field.\n/// x and y denotes the Weierstrass coordinates of the point, if is_infinite is false.\npub struct EmbeddedCurvePoint {\n    x: Field,\n    y: Field,\n    is_infinite: bool\n}\n\nimpl EmbeddedCurvePoint {\n    /// Elliptic curve point doubling operation\n    /// returns the doubled point of a point P, i.e P+P\n    pub fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    /// Returns the null element of the curve; 'the point at infinity'\n    pub fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    /// Adds two points P+Q, using the curve addition formula, and also handles point at infinity\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    /// Points subtraction operation, using addition and negation\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    /// Negates a point P, i.e returns -P, by negating the y coordinate.\n    /// If the point is at infinity, then the result is also at infinity.\n    fn neg(self) -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: self.x, y: -self.y, is_infinite: self.is_infinite }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    /// Checks whether two points are equal\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite)\n            | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\n/// Scalar for the embedded curve represented as low and high limbs\n/// By definition, the scalar field of the embedded curve is base field of the proving system curve.\n/// It may not fit into a Field element, so it is represented with two Field elements; its low and high limbs.\npub struct EmbeddedCurveScalar {\n    lo: Field,\n    hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    #[field(bn254)]\n    pub fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a,b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n\n    //Bytes to scalar: take the first (after the specified offset) 16 bytes of the input as the lo value, and the next 16 bytes as the hi value\n    #[field(bn254)]\n    pub(crate) fn from_bytes(bytes: [u8; 64], offset: u32) -> EmbeddedCurveScalar {\n        let mut v = 1;\n        let mut lo = 0 as Field;\n        let mut hi = 0 as Field;\n        for i in 0..16 {\n            lo = lo + (bytes[offset+31 - i] as Field) * v;\n            hi = hi + (bytes[offset+15 - i] as Field) * v;\n            v = v * 256;\n        }\n        let sig_s = crate::embedded_curve_ops::EmbeddedCurveScalar { lo, hi };\n        sig_s\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, other: Self) -> bool {\n        (other.hi == self.hi) & (other.lo == self.lo)\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the \n// underlying proof system.\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N]\n) -> EmbeddedCurvePoint\n// docs:end:multi_scalar_mul\n{\n    let point_array = multi_scalar_mul_array_return(points, scalars);\n    EmbeddedCurvePoint { x: point_array[0], y: point_array[1], is_infinite: point_array[2] as bool }\n}\n\n#[foreign(multi_scalar_mul)]\nfn multi_scalar_mul_array_return<let N: u32>(points: [EmbeddedCurvePoint; N], scalars: [EmbeddedCurveScalar; N]) -> [Field; 3] {}\n\n#[foreign(multi_scalar_mul)]\npub(crate) fn multi_scalar_mul_slice(points: [EmbeddedCurvePoint], scalars: [EmbeddedCurveScalar]) -> [Field; 3] {}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(scalar: EmbeddedCurveScalar) -> EmbeddedCurvePoint\n// docs:end:fixed_base_scalar_mul\n{\n    let g1 = EmbeddedCurvePoint { x: 1, y: 17631683881184975370165255887551781615748388533673675138860, is_infinite: false };\n    multi_scalar_mul([g1], [scalar])\n}\n\n/// This function only assumes that the points are on the curve\n/// It handles corner cases around the infinity point causing some overhead compared to embedded_curve_add_not_nul and embedded_curve_add_unsafe\n// This is a hack because returning an `EmbeddedCurvePoint` from a foreign function in brillig returns a [BrilligVariable::SingleAddr; 2] rather than BrilligVariable::BrilligArray\n// as is defined in the brillig bytecode format. This is a workaround which allows us to fix this without modifying the serialization format.\n// docs:start:embedded_curve_add\npub fn embedded_curve_add(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    // docs:end:embedded_curve_add\n    let x_coordinates_match = point1.x == point2.x;\n    let y_coordinates_match = point1.y == point2.y;\n    let double_predicate = (x_coordinates_match & y_coordinates_match);\n    let infinity_predicate = (x_coordinates_match & !y_coordinates_match);\n    let point1_1 = EmbeddedCurvePoint { x: point1.x + (x_coordinates_match as Field), y: point1.y, is_infinite: x_coordinates_match };\n    // point1_1 is guaranteed to have a different abscissa than point2\n    let mut result = embedded_curve_add_unsafe(point1_1, point2);\n    result.is_infinite = x_coordinates_match;\n\n    // dbl if x_match, y_match\n    let double = embedded_curve_add_unsafe(point1, point1);\n    result = if double_predicate { double } else { result };\n\n    // infinity if x_match, !y_match\n    if point1.is_infinite {\n        result= point2;\n    }\n    if point2.is_infinite {\n        result = point1;\n    }\n    let mut result_is_infinity = infinity_predicate & (!point1.is_infinite & !point2.is_infinite);\n    result.is_infinite = result_is_infinity | (point1.is_infinite & point2.is_infinite);\n    result\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(_point1: EmbeddedCurvePoint, _point2: EmbeddedCurvePoint) -> [Field; 3] {}\n\n/// This function assumes that:\n/// The points are on the curve, and\n/// The points don't share an x-coordinate, and\n/// Neither point is the infinity point.\n/// If it is used with correct input, the function ensures the correct non-zero result is returned.\n/// Except for points on the curve, the other assumptions are checked by the function. It will cause assertion failure if they are not respected.\npub fn embedded_curve_add_not_nul(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    assert(point1.x != point2.x);\n    assert(!point1.is_infinite);\n    assert(!point2.is_infinite);\n    embedded_curve_add_unsafe(point1, point2)\n}\n\n/// Unsafe ec addition\n/// If the inputs are the same, it will perform a doubling, but only if point1 and point2 are the same variable.\n/// If they have the same value but are different variables, the result will be incorrect because in this case\n/// it assumes (but does not check) that the points' x-coordinates are not equal.\n/// It also assumes neither point is the infinity point.\npub fn embedded_curve_add_unsafe(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    let point_array = embedded_curve_add_array_return(point1, point2);\n    let x = point_array[0];\n    let y = point_array[1];\n\n    EmbeddedCurvePoint { x, y, is_infinite: false }\n}\n"},"240":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/field.nr","source":"pub fn field_from_bytes<let N: u32>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// Convert a 32 byte array to a field element by truncating the final byte\npub fn field_from_bytes_32_trunc(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..15 {\n        // covers bytes 16..30 (31 is truncated and ignored)\n        low = low + (bytes32[15 + 15 - i] as Field) * v;\n        v = v * 256;\n        // covers bytes 0..14\n        high = high + (bytes32[14 - i] as Field) * v;\n    }\n    // covers byte 15\n    low = low + (bytes32[15] as Field) * v;\n\n    low + high * v\n}\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    lhs.lt(rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    rhs.lt(lhs)\n}\n\n#[test]\nunconstrained fn bytes_field_test() {\n    // Tests correctness of field_from_bytes_32_trunc against existing methods\n    // Bytes representing 0x543e0a6642ffeb8039296861765a53407bba62bd1c97ca43374de950bbe0a7\n    let inputs = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167\n    ];\n    let field = field_from_bytes(inputs, true);\n    let return_bytes: [u8; 31] = field.to_be_bytes();\n    for i in 0..31 {\n        assert_eq(inputs[i], return_bytes[i]);\n    }\n    // 32 bytes - we remove the final byte, and check it matches the field\n    let inputs2 = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167, 158\n    ];\n    let field2 = field_from_bytes_32_trunc(inputs2);\n    let return_bytes2: [u8; 31] = field.to_be_bytes();\n\n    for i in 0..31 {\n        assert_eq(return_bytes2[i], return_bytes[i]);\n    }\n    assert_eq(field2, field);\n}\n\n#[test]\nunconstrained fn max_field_test() {\n    // Tests the hardcoded value in constants.nr vs underlying modulus\n    // NB: We can't use 0-1 in constants.nr as it will be transpiled incorrectly to ts and sol constants files\n    let max_value = crate::constants::MAX_FIELD_VALUE;\n    assert_eq(max_value, 0 - 1);\n    // modulus == 0 is tested elsewhere, so below is more of a sanity check\n    let max_bytes: [u8; 32] = max_value.to_be_bytes();\n    let mod_bytes = std::field::modulus_be_bytes();\n    for i in 0..31 {\n        assert_eq(max_bytes[i], mod_bytes[i]);\n    }\n    assert_eq(max_bytes[31], mod_bytes[31] - 1);\n}\n"},"242":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/point.nr","source":"pub use dep::std::embedded_curve_ops::EmbeddedCurvePoint as Point;\nuse crate::{traits::{Deserialize, Empty, Hash, Serialize}, hash::poseidon2_hash};\n\nglobal POINT_LENGTH: u32 = 3;\n\nimpl Serialize<POINT_LENGTH> for Point {\n    fn serialize(self: Self) -> [Field; POINT_LENGTH] {\n        [self.x, self.y, self.is_infinite as Field]\n    }\n}\n\nimpl Hash for Point {\n    fn hash(self) -> Field {\n        poseidon2_hash(self.serialize())\n    }\n}\n\nimpl Empty for Point {\n    /// Note: Does not return a valid point on curve - instead represents an empty/\"unpopulated\" point struct (e.g.\n    /// empty/unpopulated value in an array of points).\n    fn empty() -> Self {\n        Point { x: 0, y: 0, is_infinite: false }\n    }\n}\n\nimpl Deserialize<POINT_LENGTH> for Point {\n    fn deserialize(serialized: [Field; POINT_LENGTH]) -> Point {\n        Point { x: serialized[0], y: serialized[1], is_infinite: serialized[2] as bool }\n    }\n}\n"},"245":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/data/public_data_tree_leaf_preimage.nr","source":"use crate::{merkle_tree::leaf_preimage::IndexedTreeLeafPreimage, traits::{Empty, Hash}};\n\npub struct PublicDataTreeLeafPreimage {\n    slot : Field,\n    value: Field,\n    next_slot :Field,\n    next_index : u32,\n}\n\nimpl Empty for PublicDataTreeLeafPreimage {\n    fn empty() -> Self {\n        Self { slot: 0, value: 0, next_slot: 0, next_index: 0 }\n    }\n}\n\nimpl Hash for PublicDataTreeLeafPreimage {\n    fn hash(self) -> Field {\n        if self.is_empty() {\n            0\n        } else {\n            crate::hash::poseidon2_hash([self.slot, self.value, (self.next_index as Field), self.next_slot])\n        }\n    }\n}\n\nimpl IndexedTreeLeafPreimage for PublicDataTreeLeafPreimage {\n    fn get_key(self) -> Field {\n        self.slot\n    }\n\n    fn get_next_key(self) -> Field {\n        self.next_slot\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl PublicDataTreeLeafPreimage {\n    pub fn is_empty(self) -> bool {\n        (self.slot == 0) & (self.value == 0) & (self.next_slot == 0) & (self.next_index == 0)\n    }\n}\n"},"25":{"path":"std/field/bn254.nr","source":"use crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let mut offset = 1;\n    for i in 0..16 {\n        low += (x_bytes[i] as Field) * offset;\n        high += (x_bytes[i + 16] as Field) * offset;\n        offset *= 256;\n    }\n\n    (low, high)\n}\n\nunconstrained pub(crate) fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nfn compute_lt(x: Field, y: Field, num_bytes: u32) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i];\n            let y_byte = y_bytes[num_bytes - 1 - i];\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nfn compute_lte(x: Field, y: Field, num_bytes: u32) -> bool {\n    if x == y {\n        true\n    } else {\n        compute_lt(x, y, num_bytes)\n    }\n}\n\nunconstrained fn lt_32_hint(x: Field, y: Field) -> bool {\n    compute_lt(x, y, 32)\n}\n\nunconstrained fn lte_16_hint(x: Field, y: Field) -> bool {\n    compute_lte(x, y, 16)\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    unsafe {\n        let borrow = lte_16_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size(128);\n        rhi.assert_max_bit_size(128);\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size(128);\n            xhi.assert_max_bit_size(128);\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(compute_lt(b, a, 32));\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        compute_lt(b, a, 32)\n    } else if a == b {\n        false\n    } else {\n        // Take a hint of the comparison and verify it\n        unsafe {\n            if lt_32_hint(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{decompose, compute_lt, assert_gt, gt, TWO_POW_128, compute_lte, PLO, PHI};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    fn check_compute_lt() {\n        assert(compute_lt(0, 1, 16));\n        assert(compute_lt(0, 0x100, 16));\n        assert(compute_lt(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lt(0, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_compute_lte() {\n        assert(compute_lte(0, 1, 16));\n        assert(compute_lte(0, 0x100, 16));\n        assert(compute_lte(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lte(0, TWO_POW_128, 16));\n\n        assert(compute_lte(0, 0, 16));\n        assert(compute_lte(0x100, 0x100, 16));\n        assert(compute_lte(TWO_POW_128 - 1, TWO_POW_128 - 1, 16));\n        assert(compute_lte(TWO_POW_128, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n"},"26":{"path":"std/field/mod.nr","source":"pub mod bn254;\nuse bn254::lt as bn254_lt;\nuse crate::runtime::is_unconstrained;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size(self, bit_size: u32) {\n        // docs:end:assert_max_bit_size\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n     // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self', \n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let  p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self', \n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let  p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N-1-i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..32 {\n        if (!done) {\n            let x_byte = x_bytes[32 - 1 - i] as u8;\n            let y_byte = y_bytes[32 - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nmod tests {\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_bytes();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bits), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_bytes();\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bits), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bits), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bits), field);\n    }\n    // docs:end:to_le_radix_example\n}\n"},"271":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/contract_instance.nr","source":"use crate::{\n    address::{aztec_address::AztecAddress, partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    contract_class_id::ContractClassId, constants::CONTRACT_INSTANCE_LENGTH,\n    traits::{Deserialize, Hash, Serialize}\n};\n\npub struct ContractInstance {\n    salt : Field,\n    deployer: AztecAddress,\n    contract_class_id : ContractClassId,\n    initialization_hash : Field,\n    public_keys_hash : PublicKeysHash,\n}\n\nimpl Eq for ContractInstance {\n    fn eq(self, other: Self) -> bool {\n        self.public_keys_hash.eq(other.public_keys_hash)\n            & self.initialization_hash.eq(other.initialization_hash)\n            & self.contract_class_id.eq(other.contract_class_id)\n            & self.salt.eq(other.salt)\n    }\n}\n\nimpl Serialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn serialize(self) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n        [\n            self.salt,\n            self.deployer.to_field(),\n            self.contract_class_id.to_field(),\n            self.initialization_hash,\n            self.public_keys_hash.to_field()\n        ]\n    }\n}\n\nimpl Deserialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn deserialize(serialized: [Field; CONTRACT_INSTANCE_LENGTH]) -> Self {\n        Self {\n            salt: serialized[0],\n            deployer: AztecAddress::from_field(serialized[1]),\n            contract_class_id: ContractClassId::from_field(serialized[2]),\n            initialization_hash: serialized[3],\n            public_keys_hash: PublicKeysHash::from_field(serialized[4])\n        }\n    }\n}\n\nimpl Hash for ContractInstance {\n    fn hash(self) -> Field {\n        self.to_address().to_field()\n    }\n}\n\nimpl ContractInstance {\n    fn to_address(self) -> AztecAddress {\n        AztecAddress::compute(\n            self.public_keys_hash,\n            PartialAddress::compute(\n                self.contract_class_id,\n                self.salt,\n                self.initialization_hash,\n                self.deployer\n            )\n        )\n    }\n}\n"},"29":{"path":"std/hash/mod.nr","source":"pub mod poseidon;\npub mod mimc;\npub mod poseidon2;\npub mod keccak;\npub mod sha256;\npub mod sha512;\n\nuse crate::default::Default;\nuse crate::uint128::U128;\nuse crate::collections::vec::Vec;\nuse crate::embedded_curve_ops::{EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul, multi_scalar_mul_slice};\nuse crate::meta::derive_via;\n\n// Kept for backwards compatibility\npub use sha256::{digest, sha256, sha256_compression, sha256_var};\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n// docs:start:pedersen_commitment\npub fn pedersen_commitment<let N: u32>(input: [Field; N]) -> EmbeddedCurvePoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\npub fn pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    pedersen_hash_with_separator_noir(input, separator)\n}\n\npub fn pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let value = __pedersen_commitment_with_separator(input, separator);\n    if (value[0] == 0) & (value[1] == 0) {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    } else {\n        EmbeddedCurvePoint { x: value[0], y: value[1], is_infinite: false }\n    }\n}\n\n#[no_predicates]\nfn pedersen_commitment_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let mut points = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N];\n    for i in 0..N {\n        // we use the unsafe version because the multi_scalar_mul will constrain the scalars.\n        points[i] = from_field_unsafe(input[i]);\n    }\n    let generators = derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    multi_scalar_mul(generators, points)\n}\n\n#[no_predicates]\nfn pedersen_hash_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    let mut scalars: Vec<EmbeddedCurveScalar> = Vec::from_slice([EmbeddedCurveScalar { lo: 0, hi: 0 }; N].as_slice()); //Vec::new();\n\n    for i in 0..N {\n        scalars.set(i, from_field_unsafe(input[i]));\n    }\n    scalars.push(EmbeddedCurveScalar { lo: N as Field, hi: 0 as Field });\n    let domain_generators :[EmbeddedCurvePoint; N]= derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    let mut vec_generators = Vec::new();\n    for i in 0..N {\n        vec_generators.push(domain_generators[i]);\n    }\n    let length_generator : [EmbeddedCurvePoint; 1] = derive_generators(\"pedersen_hash_length\".as_bytes(), 0);\n    vec_generators.push(length_generator[0]);\n    multi_scalar_mul_slice(vec_generators.slice, scalars.slice)[0]\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<let N: u32>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator_noir(input, 0)\n}\n\n#[foreign(pedersen_hash)]\nfn __pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {}\n\n#[foreign(pedersen_commitment)]\nfn __pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> [Field; 2] {}\n\n#[field(bn254)]\npub fn derive_generators<let N: u32, let M: u32>(domain_separator_bytes: [u8; M], starting_index: u32) -> [EmbeddedCurvePoint; N] {\n    crate::assert_constant(domain_separator_bytes);\n    // TODO(https://github.com/noir-lang/noir/issues/5672): Add back assert_constant on starting_index\n    __derive_generators(domain_separator_bytes, starting_index)\n}\n\n#[builtin(derive_pedersen_generators)]\n#[field(bn254)]\nfn __derive_generators<let N: u32, let M: u32>(domain_separator_bytes: [u8; M], starting_index: u32) -> [EmbeddedCurvePoint; N] {}\n\n#[field(bn254)]\n// Same as from_field but:\n// does not assert the limbs are 128 bits\n// does not assert the decomposition does not overflow the EmbeddedCurveScalar\nfn from_field_unsafe(scalar: Field) -> EmbeddedCurveScalar {\n    let (xlo, xhi) = unsafe {\n        crate::field::bn254::decompose_hint(scalar)\n    };\n    // Check that the decomposition is correct\n    assert_eq(scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi);\n    EmbeddedCurveScalar { lo: xlo, hi: xhi }\n}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut sum = 0;\n\n    for input in inputs {\n        let input_bytes: [u8; 32] = input.to_le_bytes();\n        sum += crate::field::bytes32_to_field(blake2s(input_bytes));\n    }\n\n    sum\n}\n\n// docs:start:keccak256\npub fn keccak256<let N: u32>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{\n    crate::hash::keccak::keccak256(input, message_size)\n}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<let N: u32>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n// Generic hashing support.\n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\n#[derive_via(derive_hash)]\npub trait Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher;\n}\n\n// docs:start:derive_hash\ncomptime fn derive_hash(s: StructDefinition) -> Quoted {\n    let name = quote { Hash };\n    let signature = quote { fn hash<H>(_self: Self, _state: &mut H) where H: std::hash::Hasher };\n    let for_each_field = |name| quote { _self.$name.hash(_state); };\n    crate::meta::make_trait_impl(s, name, signature, for_each_field, quote {}, |fields| fields)\n}\n// docs:end:derive_hash\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\npub trait Hasher {\n    fn finish(self) -> Field;\n\n    fn write(&mut self, input: Field);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\npub trait BuildHasher<H> where H: Hasher {\n    fn build_hasher(self) -> H;\n}\n\npub struct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default {\n    fn build_hasher(_self: Self) -> H {\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default {\n    fn default() -> Self {\n        BuildHasherDefault {}\n    }\n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self);\n    }\n}\n\nimpl Hash for u1 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u16 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i16 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H) where H: Hasher {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self.lo as Field);\n        H::write(state, self.hi as Field);\n    }\n}\n\nimpl<T, let N: u32> Hash for [T; N] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B) where A: Hash, B: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C) where A: Hash, B: Hash, C: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D) where A: Hash, B: Hash, C: Hash, D: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E) where A: Hash, B: Hash, C: Hash, D: Hash, E: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n\n// Some test vectors for Pedersen hash and Pedersen Commitment.\n// They have been generated using the same functions so the tests are for now useless\n// but they will be useful when we switch to Noir implementation.\n#[test]\nfn assert_pedersen() {\n    assert_eq(\n        pedersen_hash_with_separator([1], 1), 0x1b3f4b1a83092a13d8d1a59f7acb62aba15e7002f4440f2275edb99ebbc2305f\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1], 1), EmbeddedCurvePoint {\n        x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n        y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n        is_infinite: false\n    }\n    );\n\n    assert_eq(\n        pedersen_hash_with_separator([1, 2], 2), 0x26691c129448e9ace0c66d11f0a16d9014a9e8498ee78f4d69f0083168188255\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2], 2), EmbeddedCurvePoint {\n        x: 0x2e2b3b191e49541fe468ec6877721d445dcaffe41728df0a0eafeb15e87b0753,\n        y: 0x2ff4482400ad3a6228be17a2af33e2bcdf41be04795f9782bd96efe7e24f8778,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3], 3), 0x0bc694b7a1f8d10d2d8987d07433f26bd616a2d351bc79a3c540d85b6206dbe4\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3], 3), EmbeddedCurvePoint {\n        x: 0x1fee4e8cf8d2f527caa2684236b07c4b1bad7342c01b0f75e9a877a71827dc85,\n        y: 0x2f9fedb9a090697ab69bf04c8bc15f7385b3e4b68c849c1536e5ae15ff138fd1,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4], 4), 0xdae10fb32a8408521803905981a2b300d6a35e40e798743e9322b223a5eddc\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4], 4), EmbeddedCurvePoint {\n        x: 0x07ae3e202811e1fca39c2d81eabe6f79183978e6f12be0d3b8eda095b79bdbc9,\n        y: 0x0afc6f892593db6fbba60f2da558517e279e0ae04f95758587760ba193145014,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5], 5), 0xfc375b062c4f4f0150f7100dfb8d9b72a6d28582dd9512390b0497cdad9c22\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5], 5), EmbeddedCurvePoint {\n        x: 0x1754b12bd475a6984a1094b5109eeca9838f4f81ac89c5f0a41dbce53189bb29,\n        y: 0x2da030e3cfcdc7ddad80eaf2599df6692cae0717d4e9f7bfbee8d073d5d278f7,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6], 6), 0x1696ed13dc2730062a98ac9d8f9de0661bb98829c7582f699d0273b18c86a572\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6], 6), EmbeddedCurvePoint {\n        x: 0x190f6c0e97ad83e1e28da22a98aae156da083c5a4100e929b77e750d3106a697,\n        y: 0x1f4b60f34ef91221a0b49756fa0705da93311a61af73d37a0c458877706616fb,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7], 7), 0x128c0ff144fc66b6cb60eeac8a38e23da52992fc427b92397a7dffd71c45ede3\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7], 7), EmbeddedCurvePoint {\n        x: 0x015441e9d29491b06563fac16fc76abf7a9534c715421d0de85d20dbe2965939,\n        y: 0x1d2575b0276f4e9087e6e07c2cb75aa1baafad127af4be5918ef8a2ef2fea8fc,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8), 0x2f960e117482044dfc99d12fece2ef6862fba9242be4846c7c9a3e854325a55c\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8), EmbeddedCurvePoint {\n        x: 0x1657737676968887fceb6dd516382ea13b3a2c557f509811cd86d5d1199bc443,\n        y: 0x1f39f0cb569040105fa1e2f156521e8b8e08261e635a2b210bdc94e8d6d65f77,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9), 0x0c96db0790602dcb166cc4699e2d306c479a76926b81c2cb2aaa92d249ec7be7\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9), EmbeddedCurvePoint {\n        x: 0x0a3ceae42d14914a432aa60ec7fded4af7dad7dd4acdbf2908452675ec67e06d,\n        y: 0xfc19761eaaf621ad4aec9a8b2e84a4eceffdba78f60f8b9391b0bd9345a2f2,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10), 0x2cd37505871bc460a62ea1e63c7fe51149df5d0801302cf1cbc48beb8dff7e94\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10), EmbeddedCurvePoint {\n        x: 0x2fb3f8b3d41ddde007c8c3c62550f9a9380ee546fcc639ffbb3fd30c8d8de30c,\n        y: 0x300783be23c446b11a4c0fabf6c91af148937cea15fcf5fb054abf7f752ee245,\n        is_infinite: false\n    }\n    );\n}\n"},"292":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/abis/validation_requests/key_validation_request.nr","source":"use crate::{traits::{Empty, Serialize, Deserialize}, point::Point};\npub use crate::constants::KEY_VALIDATION_REQUEST_LENGTH;\n\npub struct KeyValidationRequest {\n    pk_m: Point,\n    sk_app: Field, // not a grumpkin scalar because it's output of poseidon2\n}\n\nimpl Eq for KeyValidationRequest {\n    fn eq(self, request: KeyValidationRequest) -> bool {\n        (request.pk_m.eq(self.pk_m)) & (request.sk_app.eq(self.sk_app))\n    }\n}\n\nimpl Empty for KeyValidationRequest {\n    fn empty() -> Self {\n        KeyValidationRequest { pk_m: Point::empty(), sk_app: 0 }\n    }\n}\n\nimpl Serialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn serialize(self) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {\n        [\n            self.pk_m.x,\n            self.pk_m.y,\n            self.pk_m.is_infinite as Field,\n            self.sk_app\n        ]\n    }\n}\n\nimpl Deserialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn deserialize(fields: [Field; KEY_VALIDATION_REQUEST_LENGTH]) -> Self {\n        Self { pk_m: Point { x: fields[0], y: fields[1], is_infinite: fields[2] as bool }, sk_app: fields[3] }\n    }\n}\n"},"3":{"path":"std/array/mod.nr","source":"use crate::cmp::{Eq, Ord};\nuse crate::convert::From;\nuse crate::runtime::is_unconstrained;\n\nmod check_shuffle;\nmod quicksort;\n\nimpl<T, let N: u32> [T; N] {\n    /// Returns the length of this array.\n    /// \n    /// ```noir\n    /// fn len(self) -> Field\n    /// ```\n    /// \n    /// example\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let array = [42, 42];\n    ///     assert(array.len() == 2);\n    /// }\n    /// ```\n    #[builtin(array_len)]\n    pub fn len(self) -> u32 {}\n\n    /// Returns this array as a slice.\n    /// \n    /// ```noir\n    /// let array = [1, 2];\n    /// let slice = array.as_slice();\n    /// assert_eq(slice, &[1, 2]);\n    /// ```\n    #[builtin(as_slice)]\n    pub fn as_slice(self) -> [T] {}\n\n    /// Applies a function to each element of this array, returning a new array containing the mapped elements.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// let a = [1, 2, 3];\n    /// let b = a.map(|a| a * 2);\n    /// assert_eq(b, [2, 4, 6]);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> [U; N] {\n        let first_elem = f(self[0]);\n        let mut ret = [first_elem; N];\n\n        for i in 1..self.len() {\n            ret[i] = f(self[i]);\n        }\n\n        ret\n    }\n\n    /// Applies a function to each element of the array, returning the final accumulated value. The first\n    /// parameter is the initial value.\n    /// \n    /// This is a left fold, so the given function will be applied to the accumulator and first element of\n    /// the array, then the second, and so on. For a given call the expected result would be equivalent to:\n    /// \n    /// ```rust\n    /// let a1 = [1];\n    /// let a2 = [1, 2];\n    /// let a3 = [1, 2, 3];\n    /// \n    /// let f = |a, b| a - b;\n    /// a1.fold(10, f); //=> f(10, 1)\n    /// a2.fold(10, f); //=> f(f(10, 1), 2)\n    /// a3.fold(10, f); //=> f(f(f(10, 1), 2), 3)\n    /// \n    /// assert_eq(a3.fold(10, f), 10 - 1 - 2 - 3);\n    /// ```\n    pub fn fold<U, Env>(self, mut accumulator: U, f: fn[Env](U, T) -> U) -> U {\n        for elem in self {\n            accumulator = f(accumulator, elem);\n        }\n        accumulator\n    }\n\n    /// Same as fold, but uses the first element as the starting element.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let arr = [1, 2, 3, 4];\n    ///     let reduced = arr.reduce(|a, b| a + b);\n    ///     assert(reduced == 10);\n    /// }\n    /// ```\n    pub fn reduce<Env>(self, f: fn[Env](T, T) -> T) -> T {\n        let mut accumulator = self[0];\n        for i in 1..self.len() {\n            accumulator = f(accumulator, self[i]);\n        }\n        accumulator\n    }\n\n    /// Returns true if all the elements in this array satisfy the given predicate.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let arr = [2, 2, 2, 2, 2];\n    ///     let all = arr.all(|a| a == 2);\n    ///     assert(all);\n    /// }\n    /// ```\n    pub fn all<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = true;\n        for elem in self {\n            ret &= predicate(elem);\n        }\n        ret\n    }\n\n    /// Returns true if any of the elements in this array satisfy the given predicate.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn main() {\n    ///     let arr = [2, 2, 2, 2, 5];\n    ///     let any = arr.any(|a| a == 5);\n    ///     assert(any);\n    /// }\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        for elem in self {\n            ret |= predicate(elem);\n        }\n        ret\n    }\n}\n\nimpl<T, let N: u32> [T; N] where T: Ord + Eq {\n    /// Returns a new sorted array. The original array remains untouched. Notice that this function will\n    /// only work for arrays of fields or integers, not for any arbitrary type. This is because the sorting\n    /// logic it uses internally is optimized specifically for these values. If you need a sort function to\n    /// sort any type, you should use the `sort_via` function.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// fn main() {\n    ///     let arr = [42, 32];\n    ///     let sorted = arr.sort();\n    ///     assert(sorted == [32, 42]);\n    /// }\n    /// ```\n    pub fn sort(self) -> Self {\n        self.sort_via(|a: T, b: T| a <= b)\n    }\n}\n\nimpl<T, let N: u32> [T; N] where T: Eq {\n    /// Returns a new sorted array by sorting it with a custom comparison function. \n    /// The original array remains untouched. \n    /// The ordering function must return true if the first argument should be sorted to be before the second argument or is equal to the second argument.\n    /// \n    /// Using this method with an operator like `<` that does not return `true` for equal values will result in an assertion failure for arrays with equal elements.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// fn main() {\n    ///     let arr = [42, 32]\n    ///     let sorted_ascending = arr.sort_via(|a, b| a <= b);\n    ///     assert(sorted_ascending == [32, 42]); // verifies\n    /// \n    ///     let sorted_descending = arr.sort_via(|a, b| a >= b);\n    ///     assert(sorted_descending == [32, 42]); // does not verify\n    /// }\n    /// ```\n    pub fn sort_via<Env>(self, ordering: fn[Env](T, T) -> bool) -> Self {\n        unsafe {\n            // Safety: `sorted` array is checked to be:\n            //   a. a permutation of `input`'s elements\n            //   b. satisfying the predicate `ordering`\n            let sorted = quicksort::quicksort(self, ordering);\n\n            if !is_unconstrained() {\n                for i in 0..N - 1 {\n                    assert(\n                        ordering(sorted[i], sorted[i + 1]), \"Array has not been sorted correctly according to `ordering`.\"\n                    );\n                }\n                check_shuffle::check_shuffle(self, sorted);\n            }\n            sorted\n        }\n    }\n}\n\nimpl<let N: u32> [u8; N] {\n    /// Converts a byte array of type `[u8; N]` to a string. Note that this performs no UTF-8 validation -\n    /// the given array is interpreted as-is as a string.\n    /// \n    /// Example:\n    /// \n    /// ```rust\n    /// fn main() {\n    ///     let hi = [104, 105].as_str_unchecked();\n    ///     assert_eq(hi, \"hi\");\n    /// }\n    /// ```\n    #[builtin(array_as_str_unchecked)]\n    pub fn as_str_unchecked(self) -> str<N> {}\n}\n\nimpl<let N: u32> From<str<N>> for [u8; N] {\n    /// Returns an array of the string bytes.\n    fn from(s: str<N>) -> Self {\n        s.as_bytes()\n    }\n}\n"},"315":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_selector.nr","source":"use crate::utils::field::field_from_bytes;\nuse crate::traits::{Serialize, Deserialize, FromField, ToField, Empty};\n\nglobal SELECTOR_SIZE: u32 = 4;\n\npub struct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self { inner: fields[0] as u32 }\n    }\n}\n\nimpl FromField for FunctionSelector {\n    fn from_field(field: Field) -> Self {\n        Self { inner: field as u32 }\n    }\n}\n\nimpl ToField for FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n}\n\nimpl Empty for FunctionSelector {\n    fn empty() -> Self {\n        Self { inner: 0 as u32 }\n    }\n}\n\nimpl FunctionSelector {\n    pub fn from_u32(value: u32) -> Self {\n        Self { inner: value }\n    }\n\n    pub fn from_signature<let N: u32>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = crate::hash::poseidon2_hash_bytes(bytes);\n\n        // We choose the last SELECTOR_SIZE bytes of the hash to avoid getting the first byte that is not full\n        let hash_bytes = hash.to_be_bytes::<SELECTOR_SIZE>();\n\n        FunctionSelector::from_field(field_from_bytes(hash_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n\n#[test]\nfn test_is_valid_selector() {\n    let selector = FunctionSelector::from_signature(\"IS_VALID()\");\n    assert_eq(selector.to_field(), 0x73cdda47);\n}\n\n#[test]\nfn test_long_selector() {\n    let selector = FunctionSelector::from_signature(\"foo_and_bar_and_baz_and_foo_bar_baz_and_bar_foo\");\n    assert_eq(selector.to_field(), 0x7590a997);\n}\n"},"337":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/compressed-string/src/compressed_string.nr","source":"use dep::aztec::protocol_types::{utils::field::field_from_bytes, traits::{Serialize, Deserialize}};\n\n// The general Compressed String.\n// Compresses M bytes into N fields.\n// Can be used for longer strings that don't fit in a single field.\n// Each field can store 31 characters, so N should be M/31 rounded up.\npub struct CompressedString<let N: u32, let M: u32> {\n  value: [Field; N]\n}\n\nimpl<let N: u32, let M: u32> CompressedString<N, M> {\n    pub fn from_string(input_string: str<M>) -> Self {\n        let mut fields = [0; N];\n        let byts = input_string.as_bytes();\n\n        let mut r_index = 0 as u32;\n\n        for i in 0..N {\n            let mut temp = [0 as u8; 31];\n            for j in 0..31 {\n                if r_index < M {\n                    temp[j] = byts[r_index];\n                    r_index += 1;\n                }\n            }\n\n            fields[i] = field_from_bytes(temp, true);\n        }\n\n        Self { value: fields }\n    }\n\n    pub fn to_bytes(self) -> [u8; M] {\n        let mut result = [0; M];\n        let mut w_index = 0 as u32;\n        for i in 0..N {\n            let bytes: [u8; 31] = self.value[i].to_be_bytes();\n            for j in 0..31 {\n                if w_index < M {\n                    result[w_index] = bytes[j];\n                    w_index += 1;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let M: u32> Eq for CompressedString<N, M> {\n    fn eq(self, other: CompressedString<N, M>) -> bool {\n        self.value == other.value\n    }\n}\n\nimpl<let N: u32, let M: u32> Serialize<N> for CompressedString<N, M> {\n    fn serialize(self) -> [Field; N] {\n        self.value\n    }\n}\n\nimpl<let N: u32, let M: u32> Deserialize<N> for CompressedString<N, M> {\n    fn deserialize(input: [Field; N]) -> Self {\n        Self { value: input }\n    }\n}\n\n#[test]\nunconstrained fn test_short_string() {\n    let i = \"Hello world\";\n    let b = i.as_bytes();\n    let name: CompressedString<1,11> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n\n#[test]\nunconstrained fn test_long_string() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let b = i.as_bytes();\n    let name: CompressedString<4,118> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n\n#[test]\nunconstrained fn test_long_string_work_with_too_many_fields() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let b = i.as_bytes();\n    let name: CompressedString<5,118> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n\n#[test]\nunconstrained fn test_serde() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let name: CompressedString<5,118> = CompressedString::from_string(i);\n\n    assert_eq(name, CompressedString::deserialize(name.serialize()));\n}\n\n#[test(should_fail)]\nunconstrained fn test_long_string_fail_with_too_few_fields() {\n    let i = \"Hello world. I'm setting up a very long text of blibbablubb such that we can see if works as planned for longer names.\";\n    let b = i.as_bytes();\n    let name: CompressedString<3,118> = CompressedString::from_string(i);\n    let p = b == name.to_bytes();\n    assert(p, \"invalid recover\");\n}\n"},"34":{"path":"std/hash/poseidon2.nr","source":"use crate::hash::Hasher;\nuse crate::default::Default;\n\ncomptime global RATE: u32 = 3;\n\npub struct Poseidon2 {\n    cache: [Field;3],\n    state: [Field;4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        if message_size == N {\n            Poseidon2::hash_internal(input, N, false)\n        } else {\n            Poseidon2::hash_internal(input, message_size, true)\n        }\n    }\n\n    pub(crate) fn new(iv: Field) -> Poseidon2 {\n        let mut result = Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) {\n        // add the cache into sponge state\n        for i in 0..RATE {\n            // We effectively zero-pad the cache by only adding to the state\n            // cache that is less than the specified `cache_size`\n            if i < self.cache_size {\n                self.state[i] += self.cache[i];\n            }\n        }\n        self.state = crate::hash::poseidon2_permutation(self.state, 4);\n    }\n\n    fn absorb(&mut self, input: Field) {\n        assert(!self.squeeze_mode);\n        if self.cache_size == RATE {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        assert(!self.squeeze_mode);\n        // If we're in absorb mode, apply sponge permutation to compress the cache.\n        self.perform_duplex();\n        self.squeeze_mode = true;\n\n        // Pop one item off the top of the permutation and return it.\n        self.state[0]\n    }\n\n    fn hash_internal<let N: u32>(input: [Field; N], in_len: u32, is_variable_length: bool) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv : Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\npub struct Poseidon2Hasher{\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv : Field = (self._state.len() as Field) * 18446744073709551616; // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher { _state: &[] }\n    }\n}\n"},"35":{"path":"std/hash/sha256.nr","source":"use crate::runtime::is_unconstrained;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:sha256\n{\n    digest(input)\n}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: [u32; 16], _state: [u32; 8]) -> [u32; 8] {}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> [u8; 32] {\n    sha256_var(msg, N as u64)\n}\n\n// Convert 64-byte array to array of 16 u32s\nfn msg_u8_to_u32(msg: [u8; 64]) -> [u32; 16] {\n    let mut msg32: [u32; 16] = [0; 16];\n\n    for i in 0..16 {\n        let mut msg_field: Field = 0;\n        for j in 0..4 {\n            msg_field = msg_field * 256 + msg[64 - 4*(i + 1) + j] as Field;\n        }\n        msg32[15 - i] = msg_field as u32;\n    }\n\n    msg32\n}\n\nunconstrained fn build_msg_block_iter<let N: u32>(msg: [u8; N], message_size: u32, msg_start: u32) -> ([u8; 64], u32) {\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n    for k in 0..block_input {\n        msg_block[k] = msg[msg_start + k];\n    }\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: [u8; 64],\n    msg_start: u32\n) -> u32 {\n    let mut msg_byte_ptr: u32 = 0; // Message byte pointer\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n\n    for k in msg_start..msg_end {\n        if k < message_size {\n            assert_eq(msg_block[msg_byte_ptr], msg[k]);\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\nglobal BLOCK_SIZE = 64;\nglobal ZERO = 0;\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> [u8; 32] {\n    let message_size = message_size as u32;\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut h: [u32; 8] = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]; // Intermediate hash, starting with the canonical initial value\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    msg_block[msg_byte_ptr] = 1 << 7;\n    let last_block = msg_block;\n    msg_byte_ptr = msg_byte_ptr + 1;\n\n    unsafe {\n        let (new_msg_block, new_msg_byte_ptr) = pad_msg_block(msg_block, msg_byte_ptr);\n        msg_block = new_msg_block;\n        if crate::runtime::is_unconstrained() {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..BLOCK_SIZE {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n\n        // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n        // the 1 and 0s fill up the current block, which we then compress accordingly.\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for _i in 57..BLOCK_SIZE {\n            if msg_byte_ptr <= 63 & msg_byte_ptr >= 57 {\n                assert_eq(msg_block[msg_byte_ptr], zero);\n                msg_byte_ptr += 1;\n            }\n        }\n    }\n\n    if msg_byte_ptr >= 57 {\n        h = sha256_compression(msg_u8_to_u32(msg_block), h);\n\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe {\n        attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size)\n    };\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..56 {\n            let predicate = (i < msg_byte_ptr) as u8;\n            let expected_byte = predicate * last_block[i];\n            assert_eq(msg_block[i], expected_byte);\n        }\n\n        // We verify the message length was inserted correctly by reversing the byte decomposition.\n        let len = 8 * message_size;\n        let mut reconstructed_len: Field = 0;\n        for i in 56..64 {\n            reconstructed_len = 256 * reconstructed_len + msg_block[i] as Field;\n        }\n        assert_eq(reconstructed_len, len as Field);\n    }\n\n    hash_final_block(msg_block, h)\n}\n\nunconstrained fn pad_msg_block(\n    mut msg_block: [u8; 64],\n    mut msg_byte_ptr: u32\n) -> ([u8; BLOCK_SIZE], u32) {\n    // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n    // the 1 and 0s fill up the current block, which we then compress accordingly.\n    if msg_byte_ptr >= 57 {\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for i in msg_byte_ptr..BLOCK_SIZE {\n            msg_block[i] = 0;\n        }\n        (msg_block, BLOCK_SIZE)\n    } else {\n        (msg_block, msg_byte_ptr)\n    }\n}\n\nunconstrained fn attach_len_to_msg_block(mut msg_block: [u8; BLOCK_SIZE], msg_byte_ptr: u32, message_size: u32) -> [u8; BLOCK_SIZE] {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 (i.e. until msg_byte_ptr = 56).\n\n    for i in msg_byte_ptr..56 {\n        msg_block[i] = 0;\n    }\n\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..8 {\n        msg_block[56 + i] = len_bytes[i];\n    }\n    msg_block\n}\n\nfn hash_final_block(msg_block: [u8; BLOCK_SIZE], mut state: [u32; 8]) -> [u8; 32] {\n    let mut out_h: [u8; 32] = [0; 32]; // Digest as sequence of bytes\n\n    // Hash final padded block\n    state = sha256_compression(msg_u8_to_u32(msg_block), state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[7 - j] as Field).to_le_bytes();\n        for k in 0..4 {\n            out_h[31 - 4*j - k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod tests {\n    use super::sha256_var;\n\n    #[test]\n    fn smoke_test() {\n        let input = [0xbd];\n        let result = [\n            0x68, 0x32, 0x57, 0x20, 0xaa, 0xbd, 0x7c, 0x82, 0xf3, 0x0f, 0x55, 0x4b, 0x31, 0x3d, 0x05, 0x70, 0xc9, 0x5a, 0xcc, 0xbb, 0x7d, 0xc4, 0xb5, 0xaa, 0xe1, 0x12, 0x04, 0xc0, 0x8f, 0xfe, 0x73, 0x2b\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116\n        ];\n        let result = [\n            91, 122, 146, 93, 52, 109, 133, 148, 171, 61, 156, 70, 189, 238, 153, 7, 222, 184, 94, 24, 65, 114, 192, 244, 207, 199, 87, 232, 192, 224, 171, 207\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_multiple_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115, 99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49, 46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46, 48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115, 117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97, 103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45, 52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55, 64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32, 50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32, 43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103, 110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115, 104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101, 108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56, 51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48, 87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75, 57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101, 114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99\n        ];\n        let result = [\n            116, 90, 151, 31, 78, 22, 138, 180, 211, 189, 69, 76, 227, 200, 155, 29, 59, 123, 154, 60, 47, 153, 203, 129, 157, 251, 48, 2, 79, 11, 65, 47\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_under_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59\n        ];\n        let result = [\n            143, 140, 76, 173, 222, 123, 102, 68, 70, 149, 207, 43, 39, 61, 34, 79, 216, 252, 213, 165, 74, 16, 110, 74, 29, 64, 138, 167, 30, 1, 9, 119\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_not_block_multiple() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115, 99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49, 46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46, 48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115, 117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97, 103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45, 52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55, 64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32, 50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32, 43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103, 110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115, 104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101, 108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56, 51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48, 87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75, 57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101, 114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99, 116, 58, 77, 101, 115, 115, 97, 103, 101, 45, 73, 100, 58, 68, 97, 116, 101, 58, 116, 111, 59, 32, 98, 61\n        ];\n        let result = [\n            112, 144, 73, 182, 208, 98, 9, 238, 54, 229, 61, 145, 222, 17, 72, 62, 148, 222, 186, 55, 192, 82, 220, 35, 66, 47, 193, 200, 22, 38, 26, 186\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_with_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17, 48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12, 201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48, 37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6, 242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2, 1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89, 110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2, 1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75, 193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1, 12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189, 233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4, 32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45, 105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4, 32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188, 194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212, 181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53\n        ];\n        let message_size = 297;\n        assert_eq(sha256_var(input, message_size), result);\n    }\n\n    #[test]\n    fn msg_big_no_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17, 48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12, 201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48, 37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6, 242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2, 1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89, 110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2, 1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75, 193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1, 12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189, 233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4, 32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45, 105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4, 32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188, 194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212, 181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn same_msg_len_variable_padding() {\n        let input = [\n            29, 81, 165, 84, 243, 114, 101, 37, 242, 146, 127, 99, 69, 145, 39, 72, 213, 39, 253, 179, 218, 37, 217, 201, 172, 93, 198, 50, 249, 70, 15, 30, 162, 112, 187, 40, 140, 9, 236, 53, 32, 44, 38, 163, 113, 254, 192, 197, 44, 89, 71, 130, 169, 242, 17, 211, 214, 72, 19, 178, 186, 168, 147, 127, 99, 101, 252, 227, 8, 147, 150, 85, 97, 158, 17, 107, 218, 244, 82, 113, 247, 91, 208, 214, 60, 244, 87, 137, 173, 201, 130, 18, 66, 56, 198, 149, 207, 189, 175, 120, 123, 224, 177, 167, 251, 159, 143, 110, 68, 183, 189, 70, 126, 32, 35, 164, 44, 30, 44, 12, 65, 18, 62, 239, 242, 2, 248, 104, 2, 178, 64, 28, 126, 36, 137, 24, 14, 116, 91, 98, 90, 159, 218, 102, 45, 11, 110, 223, 245, 184, 52, 99, 59, 245, 136, 175, 3, 72, 164, 146, 145, 116, 22, 66, 24, 49, 193, 121, 3, 60, 37, 41, 97, 3, 190, 66, 195, 225, 63, 46, 3, 118, 4, 208, 15, 1, 40, 254, 235, 151, 123, 70, 180, 170, 44, 172, 90, 4, 254, 53, 239, 116, 246, 67, 56, 129, 61, 22, 169, 213, 65, 27, 216, 116, 162, 239, 214, 207, 126, 177, 20, 100, 25, 48, 143, 84, 215, 70, 197, 53, 65, 70, 86, 172, 61, 62, 9, 212, 167, 169, 133, 41, 126, 213, 196, 33, 192, 238, 0, 63, 246, 215, 58, 128, 110, 101, 92, 3, 170, 214, 130, 149, 52, 81, 125, 118, 233, 3, 118, 193, 104, 207, 120, 115, 77, 253, 191, 122, 0, 107, 164, 207, 113, 81, 169, 36, 201, 228, 74, 134, 131, 218, 178, 35, 30, 216, 101, 2, 103, 174, 87, 95, 50, 50, 215, 157, 5, 210, 188, 54, 211, 78, 45, 199, 96, 121, 241, 241, 176, 226, 194, 134, 130, 89, 217, 210, 186, 32, 140, 39, 91, 103, 212, 26, 87, 32, 72, 144, 228, 230, 117, 99, 188, 50, 15, 69, 79, 179, 50, 12, 106, 86, 218, 101, 73, 142, 243, 29, 250, 122, 228, 233, 29, 255, 22, 121, 114, 125, 103, 41, 250, 241, 179, 126, 158, 198, 116, 209, 65, 94, 98, 228, 175, 169, 96, 3, 9, 233, 133, 214, 55, 161, 164, 103, 80, 85, 24, 186, 64, 167, 92, 131, 53, 101, 202, 47, 25, 104, 118, 155, 14, 12, 12, 25, 116, 45, 221, 249, 28, 246, 212, 200, 157, 167, 169, 56, 197, 181, 4, 245, 146, 1, 140, 234, 191, 212, 228, 125, 87, 81, 86, 119, 30, 63, 129, 143, 32, 96\n        ];\n\n        // Prepare inputs of different lengths\n        let mut input_511 = [0; 511];\n        let mut input_512 = [0; 512]; // Next block\n        let mut input_575 = [0; 575];\n        let mut input_576 = [0; 576]; // Next block\n        for i in 0..input.len() {\n            input_511[i] = input[i];\n            input_512[i] = input[i];\n            input_575[i] = input[i];\n            input_576[i] = input[i];\n        }\n\n        // Compute hashes of all inputs (with same message length)\n        let fixed_length_hash = super::sha256(input);\n        let var_full_length_hash = sha256_var(input, input.len() as u64);\n        let var_length_hash_511 = sha256_var(input_511, input.len() as u64);\n        let var_length_hash_512 = sha256_var(input_512, input.len() as u64);\n        let var_length_hash_575 = sha256_var(input_575, input.len() as u64);\n        let var_length_hash_576 = sha256_var(input_576, input.len() as u64);\n\n        // All of the above should have produced the same hash\n        assert_eq(var_full_length_hash, fixed_length_hash);\n        assert_eq(var_length_hash_511, fixed_length_hash);\n        assert_eq(var_length_hash_512, fixed_length_hash);\n        assert_eq(var_length_hash_575, fixed_length_hash);\n        assert_eq(var_length_hash_576, fixed_length_hash);\n    }\n}\n"},"352":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-contracts/contracts/token_contract/src/types/transparent_note.nr","source":"// docs:start:token_types_all\nuse dep::aztec::{\n    note::utils::compute_note_hash_for_nullify, prelude::{NoteHeader, NullifiableNote, PrivateContext},\n    protocol_types::{constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    macros::notes::note\n};\n\nuse dep::std::mem::zeroed;\n\n// Transparent note represents a note that is created in the clear (public execution), but can only be spent by those\n// that know the preimage of the \"secret_hash\" (the secret). This is typically used when shielding a token balance.\n// Owner of the tokens provides a \"secret_hash\" as an argument to the public \"shield\" function and then the tokens\n// can be redeemed in private by presenting the preimage of the \"secret_hash\" (the secret).\n#[note]\npub struct TransparentNote {\n    amount: Field,\n    secret_hash: Field,\n}\n\nimpl NullifiableNote for TransparentNote {\n    // Computing a nullifier in a transparent note is not guarded by making secret a part of the nullifier preimage (as\n    // is common in other cases) and instead is guarded by the functionality of \"redeem_shield\" function. There we do\n    // the following:\n    //      1) We pass the secret as an argument to the function and use it to compute a secret hash,\n    //      2) we fetch a note via the \"get_notes\" oracle which accepts the secret hash as an argument,\n    //      3) the \"get_notes\" oracle constrains that the secret hash in the returned note matches the one computed in\n    //         circuit.\n    // This achieves that the note can only be spent by the party that knows the secret.\n    fn compute_nullifier(self, _context: &mut PrivateContext, _note_hash_for_nullify: Field) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        // compute_nullifier ignores both of its parameters so we can reuse it here\n        self.compute_nullifier(zeroed(), zeroed())\n    }\n}\n\nimpl TransparentNote {\n    // CONSTRUCTORS\n    pub fn new(amount: Field, secret_hash: Field) -> Self {\n        TransparentNote { amount, secret_hash, header: NoteHeader::empty() }\n    }\n}\n\nimpl Eq for TransparentNote {\n    fn eq(self, other: Self) -> bool {\n        (self.amount == other.amount) & (self.secret_hash == other.secret_hash)\n    }\n}\n\n// docs:end:token_types_all\n"},"353":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-contracts/contracts/token_contract/src/types/token_note.nr","source":"use dep::aztec::{\n    prelude::{NoteHeader, NullifiableNote, PrivateContext},\n    protocol_types::{constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    note::utils::compute_note_hash_for_nullify, oracle::random::random, keys::getters::get_nsk_app,\n    macros::notes::partial_note\n};\n\ntrait OwnedNote {\n    fn new(amount: U128, owner_npk_m_hash: Field) -> Self;\n    fn get_amount(self) -> U128;\n}\n\n// docs:start:TokenNote\n#[partial_note(quote {amount})]\npub struct TokenNote {\n    // The amount of tokens in the note\n    amount: U128,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    // Randomness of the note to hide its contents\n    randomness: Field,\n}\n// docs:end:TokenNote\n\nimpl NullifiableNote for TokenNote {\n    // docs:start:nullifier\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n    // docs:end:nullifier\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify, secret],\n            GENERATOR_INDEX__NOTE_NULLIFIER\n        )\n    }\n}\n\nimpl Eq for TokenNote {\n    fn eq(self, other: Self) -> bool {\n        (self.amount == other.amount)\n            & (self.npk_m_hash == other.npk_m_hash)\n            & (self.randomness == other.randomness)\n    }\n}\n\nimpl OwnedNote for TokenNote {\n    fn new(amount: U128, owner_npk_m_hash: Field) -> Self {\n        // We use the randomness to preserve the privacy of the note recipient by preventing brute-forcing, so a\n        // malicious sender could use non-random values to make the note less private. But they already know the full\n        // note pre-image anyway, and so the recipient already trusts them to not disclose this information. We can\n        // therefore assume that the sender will cooperate in the random value generation.\n        let randomness = unsafe {\n            random()\n        };\n        Self { amount, npk_m_hash: owner_npk_m_hash, randomness, header: NoteHeader::empty() }\n    }\n\n    fn get_amount(self) -> U128 {\n        self.amount\n    }\n}\n"},"363":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/contracts/z_imburse_dkim_registry/src/main.nr","source":"use dep::aztec::macros::aztec;\n\npub global BULK_KEY_LENGTH: u32 = 4;\n\nmod receipt_verifier_id {\n    pub global AWS: Field = 1;\n    pub global LINODE: Field = 2;\n    pub global HEROKU: Field = 3;\n    pub global FRONTIER_AIRLINES: Field = 4;\n    pub global UNITED_AIRLINES: Field = 5;\n    pub global AMERICAN_AIRLINES: Field = 6;\n    pub global DELTA_AIRLINES: Field = 7;\n    pub global UBER: Field = 8;\n    pub global LYFT: Field = 9;\n}\n\n#[aztec]\ncontract ZImburseDkimRegistry {\n    use std::meta::derive;\n    use dep::aztec::prelude::{AztecAddress, SharedImmutable, Map};\n    use dep::aztec::macros::{storage::storage, events::event, functions::{private, public, view, initializer}};\n    use dep::aztec::unencrypted_logs::unencrypted_event_emission::emit;\n    use dep::aztec::protocol_types::traits::Serialize;\n    use crate::BULK_KEY_LENGTH;\n\n    #[storage]\n    struct Storage<Context> {\n        admin: SharedImmutable<AztecAddress, Context>,\n        dkim_registry: Map<Field, SharedImmutable<Field, Context>, Context>,\n    }\n\n    #[event]\n    #[derive(Serialize)]\n    struct DKIMKeyRegistered {\n        dkim_key_hash: Field,\n        verifier_id: Field,\n    }\n\n    /**\n     * Initialize the Z-Imburse DKIM registry contract\n     *\n     * @param registry - the address of the Z-Imburse registry contract\n     */\n    #[public]\n    #[initializer]\n    fn constructor(\n        // verifier_ids: [Field; BULK_KEY_LENGTH],\n        // dkim_key_hashes: [Field; BULK_KEY_LENGTH]\n    ) {\n        storage.admin.initialize(context.msg_sender());\n        // bulk insert up to 8 dkim key hashes at initialization (max unencrypted logs per tx)\n        // for i in 0..BULK_KEY_LENGTH {\n        //     if (verifier_ids[i] != 0) {\n        //         // ensure that the dkim key has not already been registered\n        //         let stored_id = storage.dkim_registry.at(dkim_key_hashes[i]).read_public();\n        //         assert(stored_id == 0, \"DKIM key has already been registered\");\n        //         storage.dkim_registry.at(dkim_key_hashes[i]).initialize(verifier_ids[i]);\n        //         emit(&mut context, DKIMKeyRegistered {\n        //             dkim_key_hash: dkim_key_hashes[i],\n        //             verifier_id: verifier_ids[i]\n        //         });\n        //     }\n        // }\n    }\n\n    /** Add dkim with no emit for testing purposes (more ergonomic) (remove later) */\n    #[public]\n    fn register_bulk_no_emit(verifier_ids: [Field; 8], dkim_key_hashes: [Field; 8]) {\n        // check that the sender is the admin\n        let admin = storage.admin.read_public();\n        assert(admin == context.msg_sender(), \"Sender is not the registry contract\");\n        // bulk insert up to 8 dkim key hashes at initialization (max unencrypted logs per tx)\n        for i in 0..8 {\n            if (verifier_ids[i] != 0) {\n                // ensure that the dkim key has not already been registered\n                let stored_id = storage.dkim_registry.at(dkim_key_hashes[i]).read_public();\n                assert(stored_id == 0, \"DKIM key has already been registered\");\n                storage.dkim_registry.at(dkim_key_hashes[i]).initialize(verifier_ids[i]);\n                unsafe {\n                    dep::aztec::oracle::debug_log::debug_log_format(\"Added key {0} for id {1}\", [dkim_key_hashes[i], verifier_ids[i]]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Bulk registration of DKIM keys\n     *\n     * @param verifier_ids - the verifier IDs to register the DKIM keys to\n     * @param dkim_key_hashes - the hashes of the DKIM keys\n     */\n    #[public]\n    fn register_dkim_bulk(verifier_ids: [Field; BULK_KEY_LENGTH], dkim_key_hashes: [Field; BULK_KEY_LENGTH]) {\n        // check that the sender is the admin\n        let admin = storage.admin.read_public();\n        assert(admin == context.msg_sender(), \"Sender is not the registry contract\");\n        // bulk insert up to 50 dkim key hashes\n        for i in 0..BULK_KEY_LENGTH {\n            if (verifier_ids[i] != 0) {\n                // ensure that the dkim key has not already been registered\n                let stored_id = storage.dkim_registry.at(dkim_key_hashes[i]).read_public();\n                assert(stored_id == 0, \"DKIM key has already been registered\");\n                storage.dkim_registry.at(dkim_key_hashes[i]).initialize(verifier_ids[i]);\n                emit(&mut context, DKIMKeyRegistered {\n                    dkim_key_hash: dkim_key_hashes[i],\n                    verifier_id: verifier_ids[i]\n                });\n            }\n        }\n    }\n\n    /**\n     * Register a DKIM key hash for email verifiers to anchor trust to\n     *\n     * @param verifier_id - the ID of the verifier\n     * @param dkim_key_hash - the hash of the DKIM key\n     */\n    #[public]\n    fn register_dkim(verifier_id: Field, dkim_key_hash: Field) {\n        // check that the sender is the admin\n        let admin = storage.admin.read_public();\n        assert(admin == context.msg_sender(), \"Sender is not the registry contract\");\n        // ensure that the dkim key has not already been registered\n        let stored_id = storage.dkim_registry.at(dkim_key_hash).read_public();\n        assert(stored_id == 0, \"DKIM key has already been registered\");\n        storage.dkim_registry.at(dkim_key_hash).initialize(verifier_id);\n        emit(&mut context, DKIMKeyRegistered { dkim_key_hash, verifier_id });\n    }\n\n    /**\n     * Check which verifier type a DKIM key maps to using the DKIM key hash\n     * @dev constrained in the public context\n     * \n     * @param dkim_key_hash - the hash of the DKIM key\n     * @return verifier_id - the ID of the verifier (returns 0 if none)\n     */\n    #[public]\n    #[view]\n    fn check_dkim_key_hash_public(dkim_key_hash: Field) -> Field {\n        storage.dkim_registry.at(dkim_key_hash).read_public()\n    }\n\n    /**\n     * Check which verifier type a DKIM key maps to using the DKIM key hash\n     * @dev constrained in the private context\n     * \n     * @param dkim_key_hash - the hash of the DKIM key\n     * @return verifier_id - the ID of the verifier (returns 0 if none)\n     */\n    #[private]\n    #[view]\n    fn check_dkim_key_hash_private(dkim_key_hash: Field) -> Field {\n        storage.dkim_registry.at(dkim_key_hash).read_private()\n    }\n}\n\n"},"365":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/circuits/zimburse_verifiers/src/linode.nr","source":"use dep::zkemail::{KEY_LIMBS_2048, dkim::verify_dkim_2048, get_body_hash_by_index, base64::body_hash_base64_decode};\nuse crate::constants::{LinodeBillingParams, MAX_LINODE_EMAIL_BODY_LENGTH, MAX_LINODE_EMAIL_HEADER_LENGTH};\nuse crate::utils::{check_from_linode_billing, check_subject_billing_receipt, extract_billed_amount, extract_datetime};\nuse std::hash::{sha256_var, pedersen_hash};\n\npub fn verify_linode_billing_receipt(\n    body: [u8; MAX_LINODE_EMAIL_BODY_LENGTH],\n    body_hash_index: u32,\n    body_length: u32,\n    header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH],\n    header_length: u32,\n    pubkey: [Field; KEY_LIMBS_2048],\n    pubkey_redc: [Field; KEY_LIMBS_2048],\n    signature: [Field; KEY_LIMBS_2048],\n    from_index: u32,\n    subject_index: u32,\n    amount_index: u32,\n    amount_length: u32,\n    date_index: u32,\n    receipt_id_length: u32,\n) -> [Field; 3] {\n\n    // check the body and header lengths are within bounds\n    assert(header_length <= MAX_LINODE_EMAIL_HEADER_LENGTH);\n    assert(body_length <= MAX_LINODE_EMAIL_BODY_LENGTH);\n\n    // verify the dkim signature over the header\n    verify_dkim_2048(header, header_length, pubkey, pubkey_redc, signature);\n\n    // extract body hash and decode from base64\n    let body_hash_encoded = get_body_hash_by_index(header, body_hash_index);\n    let signed_body_hash = body_hash_base64_decode(body_hash_encoded);\n\n    // compute the hash of the asserted body\n    let computed_body_hash = sha256_var(body, body_length as u64);\n\n    // compare the retrieved body hash to the computed body hash\n    assert(\n        signed_body_hash == computed_body_hash, \"SHA256 hash computed over body does not match body hash found in DKIM-signed header\"\n    );\n\n    // assert email is from billing@linode.com\n    check_from_linode_billing(from_index, header);\n\n    // assert this is a billing receipt email from Linode\n    check_subject_billing_receipt(subject_index, header, receipt_id_length);\n\n    // extract billed amount\n    // note: the billed amount has 2 decimals\n    let billed_amount = extract_billed_amount(body, amount_index, amount_length);\n\n    // extract the timestamp header from the email\n    let datetime = extract_datetime(header, date_index);\n    \n    // hash the dkim key used to verify the email\n    let dkim_key_hash = pedersen_hash(pubkey);\n    [dkim_key_hash, datetime as Field, billed_amount as Field]\n}\n"},"367":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/circuits/zimburse_verifiers/src/utils.nr","source":"use crate::constants::{\n   LB_FROM_LEN, LB_PAYMENT_TEXT_LEN, LB_SUBJECT_FIXED_END_LEN, LB_SUBJECT_FIXED_START_LEN, LINODE_BILLING_FROM, LINODE_BILLING_PAYMENT_TEXT,\n   LINODE_BILLING_SUBJECT_FIXED_END, LINODE_BILLING_SUBJECT_FIXED_START, MAX_BILLED_AMOUNT, MAX_LINODE_EMAIL_BODY_LENGTH,\n    MAX_LINODE_EMAIL_HEADER_LENGTH, DATE_HEADER_FIELD_MAX_LENGTH, DATE_LENGTH_DETERMINATION_INDEX, DATE_HEADER_FIELD_START\n};\nuse dep::date_parser::{parse_date_string, to_unix_month, DATETIME_LENGTH};\n\n/**\n* Check that email is from linode billing address\n*/\npub fn check_from_linode_billing(index: u32, header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH]) {\n    // check the first char is \"f\" or \"F\"\n    assert((header[index] == 0x66) | (header[index] != 0x46), \"Email sender not found.\");\n\n    // check the remaing chars are the expected Linode billing\n    let from_bytes = LINODE_BILLING_FROM.as_bytes();\n    for i in 0..LB_FROM_LEN {\n        assert(header[i + index + 1] == from_bytes[i], \"Email not from Linode billing.\");\n    }\n\n    // check for CRLF\n    assert(header[LB_FROM_LEN + index + 1] == 0x0D, \"Invalid CRLF sequence\");\n    assert(header[LB_FROM_LEN + index + 2] == 0x0A, \"Invalid CRLF sequence\");\n}\n\n/**\n* Check that email subject is linode billing receipt\n*/\npub fn check_subject_billing_receipt(index: u32, header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH], receipt_id_length: u32) {\n    // check the first char is \"s\" or \"S\"\n    assert((header[index] == 0x73) | (header[index] == 0x53), \"Email subject not found\");\n\n    let fixed_start_bytes = LINODE_BILLING_SUBJECT_FIXED_START.as_bytes();\n    // check chars in fixed section start\n    for i in 0..LB_SUBJECT_FIXED_START_LEN {\n        assert(header[i + index + 1] == fixed_start_bytes[i], \"Email subject is not Linode billing receipt\");\n    }\n\n    let fixed_end_bytes = LINODE_BILLING_SUBJECT_FIXED_END.as_bytes();\n    // check chars in fixed section end\n    for i in 0..LB_SUBJECT_FIXED_END_LEN {\n        let headerIndex = i + index + receipt_id_length + LB_SUBJECT_FIXED_START_LEN;\n        assert(header[headerIndex] == fixed_end_bytes[i], \"Email subject is not Linode billing receipt\");\n    }\n}\n\n/**\n * Constrains a span to be a full header field\n *\n * @param MAX_HEADER_LENGTH: the maximum possible length of the header\n * @param header: the header of the email\n * @param index: the index that the header field begins at\n * @param length: the length of the header field\n */\npub fn constrain_header_field<let MAX_HEADER_LENGTH: u32>(\n    header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH],\n    index: u32,\n    length: u32\n) {\n    // check that the field does not lie outside of the max \n    assert(index + length <= header.len(), \"Header field out of bounds\");\n    // if not the first field in the header, ensure the header field is preceded by a CRLF\n    if (index != 0) {\n        assert(header[index - 2] == 0x0D, \"Missing prefix CR in field constraint\");\n        assert(header[index - 1] == 0x0A, \"Missing prefix LF in field constraint\");\n    }\n    // check that the following two chars are the crlf\n    if (index + length < header.len()) {\n        assert(header[index + length] == 0x0D, \"Missing suffix CR in field constraint\");\n        assert(header[index + length + 1] == 0x0A, \"Missing suffix LF field constraint\");\n    }\n    // check that the field does not contain any CRLF\n    for i in 0..MAX_HEADER_LENGTH {\n        if (i < length) {\n            assert(header[index + i] != 0x0D, \"CR in field constraint Field\");\n        }\n    }\n}\n\n/**\n * Extracts the datetime from the email header\n *\n * @param header: the header of the email\n * @param index: the index that the date header field begins at\n * @return the parsed unix timestamp\n */\npub fn extract_datetime(header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH], index: u32) -> u32 {\n    // determine the index of the selector that chooses the length of the date field\n    let length_decider = index + DATE_LENGTH_DETERMINATION_INDEX;\n    let length = if header[length_decider] == 0x20 {\n        DATE_HEADER_FIELD_MAX_LENGTH - 1\n    } else {\n        DATE_HEADER_FIELD_MAX_LENGTH\n    };\n    // constrain the header field to be a single and full header field\n    constrain_header_field::<DATE_HEADER_FIELD_MAX_LENGTH>(header, index, length);\n    // check the header field starts with \"Date: \"\n    let first_byte = (header[index] == 0x44) as u1 | (header[index] == 0x64) as u1;\n    assert(first_byte as bool, \"Invalid date field: [D/d]\");\n    for i in 0..DATE_HEADER_FIELD_START.len() {\n        assert(header[index + i + 1] == DATE_HEADER_FIELD_START[i], \"Invalid date field\");\n    }\n    // extract the date string\n    let mut datetime_string: [u8; DATETIME_LENGTH] = [0; DATETIME_LENGTH];\n    // todo: make const (and also put all this shit in zkemail.nr)\n    let start_index = index + 10;\n    for i in 0..DATETIME_LENGTH {\n        datetime_string[i] = header[start_index + i];\n    }\n    // parse the datetime into unix\n    let parsed = parse_date_string(datetime_string);\n    to_unix_month(parsed)\n}\n\npub fn serialize_bytes<let LIMBS: u32, let SEQUENCE_LENGTH: u32>(sequence: [u8; SEQUENCE_LENGTH]) -> [Field; LIMBS] {\n    let mut limbs: [Field; LIMBS] = [0; LIMBS];\n    for i in 0..LIMBS {\n        let mut chunk = 0;\n        let mut v = 1;\n        for j in 0..31 {\n            let index = i * 31 + j;\n            if index < SEQUENCE_LENGTH {\n                chunk += sequence[index] as Field * v;\n                v *= 256;\n            }\n        }\n        limbs[i] = chunk;\n    }\n    limbs\n}\n\npub fn is_number_constraint(num: u8) {\n    assert(num >= 0x30);\n    assert(num < 0x3A);\n}\n\n/**\n* Extract the amount billed by Linode as a u32\n*/\npub fn extract_billed_amount(body: [u8; MAX_LINODE_EMAIL_BODY_LENGTH], index: u32, amount_length: u32) -> u32 {\n\n    // ensure billed amount follows valid payment text sequence\n    let payment_text_bytes = LINODE_BILLING_PAYMENT_TEXT.as_bytes();\n    for i in 0..LB_PAYMENT_TEXT_LEN {\n        assert(body[(index - LB_PAYMENT_TEXT_LEN) + i] == payment_text_bytes[i], \"Invalid payment text sequence.\");\n    }\n\n    let mut amount: Field = 0;\n    let fixed_values = 4; // '$', '.', and two decimals\n    let commas: Field = ((amount_length - fixed_values - 1) / 4) as Field; // account for \n    let mut power: Field = amount_length as Field - commas - 3; // 3 represents '$' and '.' and power is equal to numberic len - 1\n\n    // ensure first character is '$'\n    assert(body[index] == 36);\n\n    // if second character is a zero then decrement power\n    if body[index + 1] == 48 {\n        power = power - 1;\n    }\n\n    for i in 1..MAX_BILLED_AMOUNT {\n        if i < amount_length {\n            let byte = body[index + i];\n            // check that byte is not a comma or period\n            if (byte != 44) & (byte != 46) {\n                amount = amount + ((byte as Field - 48) * (10 as Field).pow_32(power));\n                power = power - 1;\n            }\n        }\n    }\n    amount as u32\n}\n\n// #[test]\n// fn value_extraction() {\n//     let index = 0;\n//     let mut body: [u8; MAX_LINODE_EMAIL_BODY_LENGTH] = [0; MAX_LINODE_EMAIL_BODY_LENGTH];\n//     let val = \"$4,123.00\";\n//     let bytes = val.as_bytes();\n//     for i in 0..bytes.len() {\n//         body[i] = bytes[i];\n//     }\n//     let extracted = extract_billed_amount(body, index, bytes.len());\n//     println(extracted);\n// }\n\n// #[test]\n// fn test_payment_string_bytes() {\n//  let bytes = LINODE_BILLING_PAYMENT_TEXT.as_bytes();\n//  println(bytes);\n// }"},"368":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/circuits/date_parser/src/lib.nr","source":"struct Datetime {\n    year: u16,\n    leap_years: u16,\n    add_leap_day: bool,\n    month: u8,\n    day: u8,\n    time: u32,\n    offset: u16,\n    subtract: bool\n}\n\nglobal DATETIME_LENGTH: u32 = 26;\n\n\nglobal months = [\n    \"Jan\".as_bytes(),\n    \"Feb\".as_bytes(),\n    \"Mar\".as_bytes(),\n    \"Apr\".as_bytes(),\n    \"May\".as_bytes(),\n    \"Jun\".as_bytes(),\n    \"Jul\".as_bytes(),\n    \"Aug\".as_bytes(),\n    \"Sep\".as_bytes(),\n    \"Oct\".as_bytes(),\n    \"Nov\".as_bytes(),\n    \"Dec\".as_bytes()\n];\n\nglobal days_in_month = [\n    31,\n    28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31\n];\n\npub fn parse_month(month: [u8; 3]) -> u8 {\n    let mut index = 0;\n    for i in 0..12 {\n        if month == months[i] {\n            index = i + 1;\n        }\n    }\n    index\n}\n\n// todo: is leap year + is past feb 29th\n\npub fn compute_leap_years(year: u16) -> u16 {\n    year / 4 - year / 100 + year / 400\n}\n\npub fn is_number_constraint(num: u8) {\n    assert(num >= 0x30);\n    assert(num < 0x3A);\n}\n\npub fn parse_year(year: [u8; 4]) -> (u16, u16) {\n    // range check year\n    for i in 0..year.len() {\n        is_number_constraint(year[i]);\n    }\n    // compute year\n    let mut year = (year[0] as u16 - 0x30) * 1000\n        + (year[1] as u16 - 0x30) * 100\n        + (year[2] as u16 - 0x30) * 10\n        + year[3] as u16\n        - 0x30;\n    // figure out number of leap years\n    let leap_years_since_0000 = compute_leap_years(year - 1);\n    let start_leap_years = compute_leap_years(1970);\n    let leap_years = leap_years_since_0000 - start_leap_years;\n    (year, leap_years)\n}\n\npub fn parse_time(time: [u8; 8]) -> u32 {\n    // check each char\n    is_number_constraint(time[0]);\n    is_number_constraint(time[1]);\n    assert(time[2] == 0x3A);\n    is_number_constraint(time[3]);\n    is_number_constraint(time[4]);\n    assert(time[5] == 0x3A);\n    is_number_constraint(time[6]);\n    is_number_constraint(time[7]);\n    // compute hours, mins, secs\n    let hours = (time[0] as u32 - 0x30) * 10 + time[1] as u32 - 0x30;\n    let mins = (time[3] as u32 - 0x30) * 10 + time[4] as u32 - 0x30;\n    let secs = (time[6] as u32 - 0x30) * 10 + time[7] as u32 - 0x30;\n    // return seconds since midnight\n    hours * 3600 + mins * 60 + secs\n}\n\npub fn parse_offset(offset: [u8; 5]) -> (u16, bool) {\n    // determine whether to add or subtract\n    let mut subtract = false;\n    if offset[0] == 0x2D {\n        subtract = true;\n    } else {\n        assert(offset[0] == 0x2B);\n    }\n    // check each char\n    for i in 1..offset.len() {\n        is_number_constraint(offset[i]);\n    }\n    // parse hours\n    let hours = (offset[1] as u16 - 0x30) * 10 + offset[2] as u16 - 0x30;\n    // parse mins\n    let mins = (offset[3] as u16 - 0x30) * 10 + offset[4] as u16 - 0x30;\n    // return seconds\n    let offset = hours * 3600 + mins * 60;\n    (offset, subtract)\n}\n\npub fn parse_day(dat: [u8; 2]) -> u8 {\n    // check each char\n    is_number_constraint(dat[0]);\n    is_number_constraint(dat[1]);\n    // compute day\n    (dat[0] as u8 - 0x30) * 10 + dat[1] as u8 - 0x30\n}\n\npub fn add_leap_day(year: u16, month: u8) -> bool {\n    // determine if current year is leap year\n    let div_by_4 = (year % 4 == 0) as u1;\n    let div_by_100 = (year % 100 != 0) as u1;\n    let div_by_400 = (year % 400 == 0) as u1;\n    let leap_year = div_by_4 * (1 - (1 - div_by_100) * (1 - div_by_400));\n    // determine if month is past feb\n    let past_feb = (month > 2) as u1;\n\n    (leap_year * past_feb) as bool\n}\n\npub fn parse_date_string(date_bytes: [u8; DATETIME_LENGTH]) -> Datetime {\n    // check day shift and set day\n    let day_shift = if date_bytes[1] == 0x20 {\n        (0, [0x30, date_bytes[0]])\n    } else {\n        (1, [date_bytes[0], date_bytes[1]])\n    };\n\n    // parse day\n    let day = parse_day(day_shift.1);\n\n    // parse month\n    let month = parse_month([date_bytes[2 + day_shift.0], date_bytes[3 + day_shift.0], date_bytes[4 + day_shift.0]]);\n    assert(month != 0);\n\n    // parse year\n    let year = parse_year(\n        [\n        date_bytes[6 + day_shift.0],\n        date_bytes[7 + day_shift.0],\n        date_bytes[8 + day_shift.0],\n        date_bytes[9 + day_shift.0]\n    ]\n    );\n    // parse time\n    let time = parse_time(\n        [\n        date_bytes[11 + day_shift.0],\n        date_bytes[12 + day_shift.0],\n        date_bytes[13 + day_shift.0],\n        date_bytes[14 + day_shift.0],\n        date_bytes[15 + day_shift.0],\n        date_bytes[16 + day_shift.0],\n        date_bytes[17 + day_shift.0],\n        date_bytes[18 + day_shift.0]\n    ]\n    );\n    // parse offset\n    let offset = parse_offset(\n        [\n        date_bytes[20 + day_shift.0],\n        date_bytes[21 + day_shift.0],\n        date_bytes[22 + day_shift.0],\n        date_bytes[23 + day_shift.0],\n        date_bytes[24 + day_shift.0]\n    ]\n    );\n    // check if leap day needs to be added\n    let add_leap_day = add_leap_day(year.0, month);\n\n    Datetime { year: year.0, leap_years: year.1, add_leap_day, month, day, time, offset: offset.0, subtract: offset.1 }\n}\n\npub fn to_unix_month(datetime: Datetime) -> u32 {\n    // get number of days in complete years\n    let days_in_complete_years = (datetime.year - 1970) as u32 * 365 + datetime.leap_years as u32;\n    // get number of days in current year\n    let mut days_in_current_year = 0;\n    for i in 0..12 {\n        if i + 1 < datetime.month {\n            days_in_current_year += days_in_month[i];\n        }\n    }\n    days_in_current_year += datetime.add_leap_day as u32;\n    // return total seconds since epoch (don't factor in the localized timestamp)\n    (days_in_complete_years + days_in_current_year) * 86400 + datetime.time as u32\n}\n\npub fn to_unix(datetime: Datetime) -> u32 {\n    // get number of days in complete years\n    let days_in_complete_years = (datetime.year - 1970) as u32 * 365 + datetime.leap_years as u32;\n    // get number of days in current year\n    let mut days_in_current_year = 0;\n    for i in 0..12 {\n        if i + 1 < datetime.month {\n            days_in_current_year += days_in_month[i];\n        }\n    }\n    days_in_current_year += (datetime.day + datetime.add_leap_day as u8) as u32;\n    // total seconds since epoch\n    let mut seconds_since_epoch = (days_in_complete_years + days_in_current_year) * 86400 + datetime.time as u32;\n    // apply offset\n    if datetime.subtract {\n        seconds_since_epoch -= datetime.offset as u32;\n    } else {\n        seconds_since_epoch += datetime.offset as u32;\n    }\n    // return unix timestamp\n    seconds_since_epoch\n}\n\n#[test]\nfn test_main() {\n    let date_string = \"1 Sep 2024 23:22:12 +0400 \".as_bytes(); // padded 1\n    // its off a lil bit\n    // should be 1725247332\n    // should be 1725333732\n    let date = parse_date_string(date_string);\n    let unix = to_unix(date);\n    println(unix);\n}\n"},"369":{"path":"/home/jpag/nargo/github.com/zkemail/zkemail.nrv0.3.1/lib/src/base64.nr","source":"use crate::BODY_HASH_BASE64_LENGTH;\n\n// noir_base64 has issues right now, just use this for now\n\n/**\n * Decodes a base64 encoded body hash into a 32 byte sha256 hash of the body\n * @notice from https://github.com/richardliang/noir-rsa/blob/main/crates/rsa-biguint/src/lib.nr\n\n * @param encoded - the base 64 encoded body hash\n * @returns the decoded sha256 hash\n */\npub fn body_hash_base64_decode(encoded: [u8; BODY_HASH_BASE64_LENGTH]) -> [u8; 32] {\n    let mut total_bits = [0 as u1; BODY_HASH_BASE64_LENGTH * 6];\n    for i in 0..BODY_HASH_BASE64_LENGTH {\n        let translate = base64_lookup(encoded[i] as u8);\n        // Store as big endian\n        let translate_bits: [u1; 6] = (translate as Field).to_be_bits();\n        for j in 0..6 {\n            total_bits[i * 6 + j] = translate_bits[j];\n        }\n    }\n\n    // Since we're returning the SHA256 hash, only need first 32 bytes (=256 bits)\n    let mut output = [0 as u8; 32];\n    for i in 0..32 {\n        for j in 0..8 {\n            // Convert from big endian back to little endian\n            output[i] |= (total_bits[i * 8 + j] as u8) << (7 - j) as u8;\n        }\n    }\n\n    output\n}\n\n/**\n * Lookup for the base 64 encoding\n * @todo: replace with noir_lang base64 lib\n *\n * @param input - the base 64 encoded character\n * @returns the decoded value\n */\nfn base64_lookup(input: u8) -> u8 {\n    // A-Z: 65-90\n    if input >= 65 & input <= 90 {\n        input - 65\n    } else if input >= 97 & input <= 122 {\n        // a-z: 97-122\n        input - 71\n    } else if input >= 48 & input <= 57 {\n        // 0-9: 48-57\n        input + 4\n    } else if input == 43 {\n        // +\n        62\n    } else if input == 47 {\n        // /\n        63\n    } else {\n        // =\n        0\n    }\n}"},"370":{"path":"/home/jpag/nargo/github.com/zkemail/zkemail.nrv0.3.1/lib/src/lib.nr","source":"use dep::std::hash::pedersen_hash;\n\nmod dkim;\nmod partial_hash;\nmod base64;\n\nglobal RSA_EXPONENT: u32 = 65537;\nglobal KEY_BYTES_1024: u32 = 128;\nglobal KEY_BYTES_2048: u32 = 256;\nglobal KEY_LIMBS_1024: u32 = 9;\nglobal KEY_LIMBS_2048: u32 = 18;\nglobal BODY_HASH_BASE64_LENGTH: u32 = 44;\n\n/**\n * Get the body hash from the header by allowing circuit input to choose index\n * @notice unsafe, can theoretically make a recipient display name = the bh\n *\n * @param HEADER_LENGTH - The length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param index - The asserted index to find the body hash at\n * @returns The base 64 encoded body hash\n */\npub fn get_body_hash_by_index<let MAX_HEADER_LENGTH: u32>(\n    header: [u8; MAX_HEADER_LENGTH],\n    index: u32\n) -> [u8; BODY_HASH_BASE64_LENGTH] {\n    // check index range\n    assert(index >= 3, \"Index does not leave room for 'bh=' prefix\");\n    assert(index + BODY_HASH_BASE64_LENGTH < MAX_HEADER_LENGTH, \"Index does not leave room for body hash\");\n    // check for 'bh=' prefix\n    let BH_PREFIX: [u8; 3] = [98, 104, 61]; // \"bh=\"\n    for i in 0..3 {\n        assert(header[index - 3 + i] == BH_PREFIX[i], \"No 'bh=' prefix found\");\n    }\n    // check for base64 suffix\n    let BH_SUFFIX: u8 = 59; // \";\"\n    assert(header[index + BODY_HASH_BASE64_LENGTH] == BH_SUFFIX, \"No base64 suffix found\");\n    // retrieve body hash\n    let mut body_hash = [0 as u8; BODY_HASH_BASE64_LENGTH];\n    for i in 0..BODY_HASH_BASE64_LENGTH {\n        body_hash[i] = header[index + i];\n    }\n    body_hash\n}\n\n/**\n * Standard outputs that essentially every email circuit will need to export (alongside app-specific outputs)\n * @notice if you only need the pubkey hash just import pedersen and hash away \n *\n * @param pubkey - the BN limbs of the DKIM RSA pubkey\n * @param signature - the BN limbs of the DKIM RSA signature\n * @returns\n *        0: Pedersen hash of DKIM public key (root of trust)\n *        1: Pedersen hash of DKIM signature (email nullifier)\n */\npub fn standard_outputs<let KEY_BYTE_LENGTH: u32>(\n    pubkey: [Field; KEY_BYTE_LENGTH],\n    signature: [Field; KEY_BYTE_LENGTH]\n) -> [Field; 2] {\n    // create pedersen hash of DKIM signing key to minimize public outputs\n    let pubkey_hash = pedersen_hash(pubkey);\n    // create email nullifier for email\n    let email_nullifier = pedersen_hash(signature);\n    // output the root of trust and email nullifier\n    [pubkey_hash, email_nullifier]\n}\n"},"372":{"path":"/home/jpag/nargo/github.com/zkemail/zkemail.nrv0.3.1/lib/src/dkim.nr","source":"use dep::rsa::bignum::fields::{Params1024, Params2048};\nuse dep::rsa::bignum::runtime_bignum::BigNumInstance;\nuse dep::rsa::types::RSA;\nuse dep::rsa::bignum::BigNum;\nuse dep::std::hash::sha256_var;\nuse crate::{KEY_LIMBS_1024, KEY_LIMBS_2048, KEY_BYTES_1024, KEY_BYTES_2048, RSA_EXPONENT};\n\ntype BN1024 = BigNum<KEY_LIMBS_1024, Params1024>;\ntype RSA1024 = RSA<BN1024, BigNumInstance<KEY_LIMBS_1024, Params1024>, KEY_BYTES_1024>;\ntype BN2048 = BigNum<KEY_LIMBS_2048, Params2048>;\ntype RSA2048 = RSA<BN2048, BigNumInstance<KEY_LIMBS_2048, Params2048>, KEY_BYTES_2048>;\n\n/**\n * Verify a 1024-bit RSA (DKIM) signature over an email header\n * \n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header, 0-padded to the maximum possible length for this circuit\n * @param header_length - The actual length of the email header\n * @param pubkey_modulus_limbs - The DKIM RSA Pubkey\n * @param redc_params_limbs - Barrett Reduction Parameter for Pubkey for efficient signature verification\n * @param signature - The DKIM RSA Signature \n */\npub fn verify_dkim_1024<let MAX_HEADER_LENGTH: u32>(\n    header: [u8; MAX_HEADER_LENGTH],\n    header_length: u32,\n    pubkey: [Field; KEY_LIMBS_1024],\n    pubkey_redc: [Field; KEY_LIMBS_1024],\n    signature: [Field; KEY_LIMBS_1024]\n) {\n    // check the header length is within bounds\n    assert(header_length <= MAX_HEADER_LENGTH);\n\n    // instantiate the BNInstance for the pubkey\n    let pubkey: BigNumInstance<KEY_LIMBS_1024, Params1024> = BigNumInstance::new(pubkey, pubkey_redc);\n\n    // instantiate BN for the signature\n    let signature: BN1024 = BigNum::from_array(signature);\n\n    // hash the header\n    let header_hash = sha256_var(header, header_length as u64);\n\n    // verify the DKIM signature over the header\n    let rsa: RSA1024 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n}\n\n/**\n * Verify a 1024-bit RSA (DKIM) signature over an email header\n * \n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header, 0-padded to the maximum possible length for this circuit\n * @param header_length - The actual length of the email header\n * @param pubkey_modulus_limbs - The DKIM RSA Pubkey\n * @param redc_params_limbs - Barrett Reduction Parameter for Pubkey for efficient signature verification\n * @param signature - The DKIM RSA Signature \n */\npub fn verify_dkim_2048<let MAX_HEADER_LENGTH: u32>(\n    header: [u8; MAX_HEADER_LENGTH],\n    header_length: u32,\n    pubkey: [Field; KEY_LIMBS_2048],\n    pubkey_redc: [Field; KEY_LIMBS_2048],\n    signature: [Field; KEY_LIMBS_2048]\n) {\n    // check the header length is within bounds\n    assert(header_length <= MAX_HEADER_LENGTH);\n\n    // instantiate the BNInstance for the pubkey\n    let pubkey: BigNumInstance<KEY_LIMBS_2048, Params2048> = BigNumInstance::new(pubkey, pubkey_redc);\n\n    // instantiate BN for the signature\n    let signature: BN2048 = BigNum::from_array(signature);\n\n    // hash the header\n    let header_hash = sha256_var(header, header_length as u64);\n\n    // verify the DKIM signature over the header\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n}\n"},"375":{"path":"/home/jpag/nargo/github.com/noir-lang/noir_rsav0.3.1/lib/src/rsa.nr","source":"use dep::bignum::BigNum;\nuse dep::bignum::runtime_bignum::BigNumInstance;\nuse dep::bignum::runtime_bignum::BigNumTrait;\nuse dep::bignum::runtime_bignum::BigNumInstanceTrait;\n\nuse crate::types::{RSA, BN1024, BN2048, BNInst1024, BNInst2048, RSA1024, RSA2048};\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n\n    for i in 0..32 {\n        // Padded hash is reversed\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] = [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i as u32 < 52 + ps_len as u32 {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i as u32 == 52 + ps_len as u32 {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i as u32 == 53 + ps_len as u32 {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\nimpl<BN, BNInstance, let NumBytes: u32> RSA<BN, BNInstance, NumBytes>  where BN: BigNumTrait, BNInstance: BigNumInstanceTrait<BN> {\n    /**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @details The fourth function parameter is required to define the value of `NBytes`\n *          when converting a BigNum into a byte array, the number of bytes is required and currently cannot be inferred.\n *          Once numeric generics can be derived by applying operations to other numeric generics the need for this will go away.\n *\n * @note The exponent `e` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\n    pub fn verify_sha256_pkcs1v15(_: Self, instance: BNInstance, msg_hash: [u8; 32], sig: BN, exponent: u32) -> bool {\n        assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n        let mut exponentiated = instance.mul(sig, sig); // sig^2\n\n        if exponent == 65537 {\n            // e = 65537 = 1 0000 0000 0000 0001\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2 * sig^2 = sig^4\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^64\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^128\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^256\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^512\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^1024\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2048\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^4096\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8192\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16384\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32768\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^65536\n        }\n        // otherwise, e = 3 = 11\n\n        exponentiated = instance.mul(exponentiated, sig); // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n\n        let mut padded_sha256_hash_bytes: [u8; NumBytes] = exponentiated.to_le_bytes();\n        compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n    }\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_1024() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst1024 = BigNumInstance::new(\n        [\n        0xe908724e0d28a1565511879e00f063, 0x58dea28d5112982c8ab8597d3e611f, 0xb115f9878acc910a47b41ac8d5f763, 0xc71b0a719c2283f710f86024737cee, 0x9ee9eb73e95b84f033af5217337427, 0x8fcab34c99cc2661dd57de15ae2110, 0xa38db8a829eec5550342f6f66334dc, 0xd7c4b32fd351a47d860fda1897330e, 0x98c92a33a0f33fd7\n    ],\n        [\n        0x55582e8ba08822783fbd7d07390be2, 0x1d7d83f9dce3983c66f440dcc2f33e, 0x6072d13c84a4cb304f58fbabe782e7, 0x0cee5e0dd62bc54d15a91a4ea3bc50, 0xc485e6f946c45cf660fba4f49325cb, 0x1f0e45df0464b065c94e84ed1dad8c, 0xe4c7b3976310ea239059d834b545f3, 0xd418145200fa77235f5f8d852b121f, 0x01acf0bd16cad9bd8f\n    ]\n    );\n    let signature: BN1024 = BigNum::from_array(\n        [\n        0x393f230b55a12fb7bb39c7edd2cf48, 0x78f7d0a217d340407cae4f39b8f001, 0x603909ff76a519f3c8e96d695d462e, 0x0640ab230b459bf4b20b4823a5b850, 0x02ba190de61a85074b18e228231984, 0xe1424c0779825707aa433ecb86c388, 0xbed8087d947a9c6c56625ad20c91aa, 0x7da4a0c2eee3a3c0d61e892ab4ada9, 0x6ef98a936c8bf8e5\n    ]\n    );\n\n    let rsa: RSA1024 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world\".as_bytes());\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0x183b4cadacea64716b6535b25a86ad, 0x129a32e9fbd374949e81b080546c2b, 0x9276332765f54b9b4d6fe23f4983a4, 0x91df05fde1a414c9fbf38808a01032, 0x97ca171c382e082ddd6c81be090902, 0x97161dde47ed979939451704b72648, 0x3b66f0c93f8ddbc62bb99f6b8fad2d, 0xc3a046fcad814d8938da372cd84d2a, 0xfe903cfe3ee4de6de3916023bb87f2, 0x8be5fd99c8b46dce9aab27ce4b3883, 0x0d99dfe50dd2288123804872da8543, 0xbb6d8afef8b2c7e3b86ad96973d4e5, 0x17e08fa3c5391279b844581f67825c, 0x09511f4a436abe495bfbfcc254d9c5, 0xf80d02572d620eab5ad7ecfbe2c20c, 0x2a5307402a05f59ba232ad0c8366d0, 0x7b9169630b317c38d549a86f85fcfc, 0xf2\n    ],\n        [\n        0xf4effa025abe90db41dc5bb5934a5f, 0x2596b25aa09f6a0e290accebbef006, 0x330e9567ec5eca92b7a8ce72ad3d83, 0xccf98d178ec4017e4947cadc02da7c, 0xaed6044ffeeb12de4d1e67aedfda78, 0xb5ae8a5a4637b632800e2f41dfbf0a, 0x8304360d359cf2f0d5d97c039f9b04, 0x53cde0d0633c0e66e1da9a118f6a96, 0xf9a83822351097bb1ed123d10290f5, 0xeb489c7f7227c09ca0117264dcf04f, 0x6a1b3618478a235f438adf84533177, 0x71c03085e38a87f5ec8e51c27dde98, 0xcf3e89d9cf253ef61d65d4431334d9, 0xa5a1a59e98fb7f49c746149324201d, 0x38f46c635f884f24c254eaa37981d6, 0x1c42be15dd95e1ac5bf01972b24ff9, 0x4555dd506d1f89e61279293c03db90, 0x010e\n    ]\n    );\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x5f0937ed1aacbdb83991e21c89ca8a, 0x5a1fa4ef2faf4042401c9121c73874, 0x7379fbb7713fbf807d250f7401afb8, 0x9cc5ce8813f3a83a72b681a4d434b2, 0x11cb49ac2ee1f9bed8a008b8327e1e, 0xf3362524f1224e48827b34a62f6ace, 0x3498a2944e32a3798fe9da684b32ae, 0xc346c33528bcdf7a06805126a29402, 0x6ac93f2fa68f270ec73674eae24380, 0x222c72de080496533ceeb8af827910, 0xc22889b311a53203278b942ca67100, 0x93d75567f7fe9ee7ca9871a0cb09f9, 0x049dabd976a9574847b1614f6b739c, 0xdc66b621dbae623df9b657b52fa1b0, 0xf37e82cc1eced382e11fc32e673f67, 0xe50545eb9027f1144a0ba7bbb0c886, 0xb6193409539c515d3c55a45c5734b1, 0x4b\n    ]\n    );\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0xc6a1c5e80ce354c6b00ccf20cf3a1d, 0x178d135f925a03eceb25f79bab56ee, 0x13ab3d6d8a5c5586752b5a3bc74ec3, 0x3d13b47b152367e3e2fc014d03d19f, 0xe89a7278a2945b4a672011691db30f, 0x5b4c1b061378143629dbb29dea1e4, 0x26a48b6f4e8df1472fd4fc12b17c18, 0xc7c92ead0ce810520cf3a8267254c1, 0x806b8cdba93909e9d9a71ee1bcdac2, 0x703ef80f8eb703b84c201366dff1c7, 0x7361034bb2c4c081aad8b1bcca83de, 0xb23c7e1109e65e6d08fa72cc862008, 0x750bc927874455782cd2d6fd5a51f6, 0xf0b83665fbf8cb5cf31cee9f89848e, 0x20d447b08953c7ce3330197938a8ae, 0x11a08bb5a2241c6a2a69f930d8b28b, 0xef5bca8dd582570a44705cb123d09e, 0xb7\n    ],\n        [\n        0xbc93ee57c1c8adc53f0a995a6221ca, 0x2a9b43587534b20dd85a5233329f10, 0xc587fd488f64eed02adc1f462f7448, 0xf1484d37676bb0e800996757382522, 0xc2126c48221aa61c9f52c6b918bab3, 0x8660c861dd52ed958beaf6c6c2cff0, 0x5edd9dc4f02a000f350948c70bdf94, 0x6f3b9603149272e9b232a379a017bb, 0x950fd85cffbdf4476b1cb66c1f63d6, 0xee459417b1a56b6f7ef3b89e385ac, 0x48daeef6d1a055f3746ab71058e137, 0x3cbc0ba96d541feee92dd27f9d0306, 0x6a2a42384cc388fa113ee80317e0a0, 0x43b4f89c508a42d309f295c0d9f3a5, 0x8d8c28b05f71b962b40ea906ff407f, 0x390a7989eb9cecc5827cb00e1ca693, 0x4cbf158eabf7e96ef7f2586d0ce613, 0x164\n    ]\n    );\n\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x19772b9af8a031170a7844ce4f3d7c, 0x4808e817258f57805a7326f70bcd74, 0xca8f3f98e374d52100115bfa645a7d, 0x49547189edff3b683fee267e717b7f, 0x96f263b47e96925f3b5898a7389ceb, 0x4cc50a893da91d0e085fc6656b30bc, 0x67e84ff92d88c0ad2c17ad2701309e, 0x095326818578173289665fcd9ad788, 0x775c6e85b745065db9411b9d579763, 0xad0f20c8a5265dfca4080ca877a2b8, 0xbfd199372f1680b3bc583a08bd8ba9, 0x663476ca3e5ede3e5976887db2c4e5, 0x531192309d0d49fed47c0216c27f9e, 0x37d26d31c86b951ca1c17b517063b7, 0x3cdb362ed5dfd06568eb9a9bbb6a91, 0x14520b9c23f583314729a9d858bca9, 0x5e0505067ada1026721d45997bf2c4, 0x3e\n    ]\n    );\n\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 3));\n}\n"},"376":{"path":"/home/jpag/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/runtime_bignum.nr","source":"use dep::std;\nuse crate::utils::u60_representation::U60Repr;\nuse crate::utils::split_bits;\nuse crate::BigNum;\n/**\n * @brief runtime_bignum::BigNumTrait defines methods available to BigNum *if* the modulus is not known at compile time.\n *        e.g. RSA where the modulus is a witness value as it changes for every RSA signature\n *        tee `lib.nr` for a trait definition where the modulus is known at compile time\n **/\ntrait BigNumTrait {\n    fn new() -> Self;\n    fn one() -> Self;\n    fn from(limbs: [Field]) -> Self;\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self;\n    fn to_le_bytes<let NBytes: u32>(val: Self) -> [u8; NBytes];\n    fn get(self) -> [Field];\n    fn get_limb(self, idx: u64) -> Field;\n    fn set_limb(&mut self, idx: u32, value: Field);\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n    fn validate_in_range(self);\n    fn validate_quotient_in_range(self);\n    fn __is_zero(self) -> bool;\n    fn __eq(self, rhs: Self) -> bool;\n}\n\n/**\n * @brief BigNumInstanceTrait defines methods available to a runtime BigNumInstance.\n *        BigNumInstance wraps the modulus parameter (as well as a Barret reduction parameter),\n *        which is required for the majority of BigNum operations\n **/\ntrait BigNumInstanceTrait<BN> where BN: BigNumTrait {\n    fn modulus(self) -> BN;\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BN;\n    fn eq(self, lhs: BN, rhs: BN) -> bool;\n    fn __neg(self, val: BN) -> BN;\n    fn __add(self, lhs: BN, rhs: BN) -> BN;\n    fn __sub(self, lhs: BN, rhs: BN) -> BN;\n    fn __mul(self, lhs: BN, rhs: BN) -> BN;\n    fn __div(self, lhs: BN, rhs: BN) -> BN;\n    fn __batch_invert<let M: u32>(self, x: [BN; M]) -> [BN; M];\n    fn __udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn __invmod(self, val: BN) -> BN;\n    fn __pow(self, val: BN, exponent: BN) -> BN;\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BN, BN);\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    );\n\n    fn validate_in_field(self, val: BN);\n    fn validate_gt(self, lhs: BN, rhs: BN);\n    fn assert_is_not_equal(self, lhs: BN, rhs: BN);\n    fn neg(self, val: BN) -> BN;\n    fn add(self, lhs: BN, rhs: BN) -> BN;\n    fn sub(self, lhs: BN, rhs: BN) -> BN;\n    fn mul(self, lhs: BN, rhs: BN) -> BN;\n    fn div(self, lhs: BN, rhs: BN) -> BN;\n    fn udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn udiv(self, numerator: BN, divisor: BN) -> BN;\n    fn umod(self, numerator: BN, divisor: BN) -> BN;\n\n}\n\n/**\n * @brief BigNumParamsTrait defines a \"field\" with which to parametrise BigNum.\n * @description The \"field\" does not need to be prime, any value *should* work (TODO: test!)\n**/\ntrait BigNumParamsTrait<let N: u32> {\n    /**\n     * @brief modulus_bits = log2(modulus) rounded up\n     **/\n    fn modulus_bits() -> u32;\n\n    fn has_multiplicative_inverse() -> bool { true }\n}\n\nstruct  BigNumInstance<let N: u32, Params> {\n    \n    /**\n     * @brief modulus: all BigNum operations are evaluated modulo this value\n     **/\n    modulus: [Field; N],\n\n    /**\n     * @brief modulus but represented in a U60Repr form\n     **/\n    modulus_u60: U60Repr<N, 2>,\n    modulus_u60_x4: U60Repr<N, 4>,\n\n    // /**\n    //  * @brief double_modulus: used when performing negations and subtractions\n    //  **/\n    double_modulus: [Field; N],\n    // /**\n    //  * @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    //  **/\n    redc_param: [Field; N],\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> {\n    // some strange circular dependency problem means we need to define `new` as a member of BigNumTrait as well as a definition outside of the trait\n    // (delete this method to see. BigNumInstance methods that use BigNum::new() error out, and I can't find a way of declaring BigNum to satisfy BigNumTrait as part of the BigNumInstance definition because BigNumInstance has no contextual knowledge of the BigNum type...)\n    fn new() -> Self {\n        BigNum { limbs: [0; N] }\n    }\n    fn one() -> BigNum<N, Params> {\n        let mut result: Self = BigNum { limbs: [0; N] };\n        result.limbs[0] = 1;\n        result\n    }\n}\n\nimpl<let N: u32, Params> BigNumTrait for BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn new() -> Self {\n        BigNum::new()\n    }\n    fn one() -> Self {\n        BigNum::one()\n    }\n\n    fn from(limbs: [Field]) -> Self {\n        BigNum { limbs: limbs.as_array() }\n    }\n\n    /**\n     * @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n     * @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n     *               is precisely large enough to cover Params::modulus_bits()\n     * @param x: input byte array\n     **/\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> BigNum<N, Params> {\n        let num_bits = NBytes * 8;\n        let modulus_bits = Params::modulus_bits();\n        assert(num_bits >= modulus_bits);\n        assert(num_bits - modulus_bits < 8);\n        let mut result = BigNum::new();\n\n        let excess_bytes = N * 15 - NBytes;\n        let final_limb_bytes = 15 - excess_bytes;\n        let mut limb: Field = 0;\n        let mut k = 0;\n        for _j in 0..final_limb_bytes {\n            limb *= 256;\n            limb += x[k] as Field;\n            k += 1;\n        }\n        result.limbs[N - 1] = limb;\n\n        for i in 1..N {\n            let mut limb: Field = 0;\n            for _j in 0..15 {\n                limb *= 256;\n                limb += x[k] as Field;\n                k += 1;\n            }\n            result.limbs[N - i - 1] = limb;\n        }\n\n        // max_bits_in_most_significant_byte should be known at comptime. if not...messy!\n        let mut max_bits_in_most_significant_byte = 8 - (num_bits - modulus_bits);\n\n        let most_significant_byte: Field = x[0] as Field;\n\n        most_significant_byte.assert_max_bit_size(max_bits_in_most_significant_byte as u32);\n        result\n    }\n\n    fn to_le_bytes<let NBytes: u32>(val: BigNum<N, Params>) -> [u8; NBytes] {\n        let nbytes = (Params::modulus_bits() / 8) + (Params::modulus_bits() % 8 != 0) as u32;\n        assert(nbytes <= NBytes);\n\n        let mut result: [u8; NBytes] = [0; NBytes];\n        for i in 0..N - 1 {\n            let limb_bytes: [u8; 15] = val.limbs[i].to_le_bytes();\n            for j in 0..15 {\n                result[i * 15 + j] = limb_bytes[j];\n            }\n        }\n        let last_limb_bytes: [u8; 15] = val.limbs[N - 1].to_le_bytes();\n        let num_last_bytes = (NBytes - (N - 1) * 15);\n        for i in 0..num_last_bytes {\n            result[(N-1) * 15 + i] = last_limb_bytes[i];\n        }\n        result\n    }\n\n    fn get(self) -> [Field] {\n        self.limbs\n    }\n    fn get_limb(self, idx: u64) -> Field {\n        self.limbs[idx]\n    }\n    fn set_limb(&mut self, idx: u32, value: Field) {\n        self.limbs[idx] = value;\n    }\n\n    /**\n     * @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n     * @description should be cheaper than using an IF statement (TODO: check!)\n     **/\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let mut result: Self = lhs;\n        for i in 0..N {\n            result.limbs[i] = (lhs.limbs[i] - rhs.limbs[i]) * predicate as Field + rhs.limbs[i];\n        }\n        result\n    }\n\n    /**\n     * @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n     **/\n    fn validate_in_range(self) {\n        for i in 0..(N - 1) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120);\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    /**\n     * @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n     * @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n     *              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n     *              Why is this?\n     *              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n     *                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n     *                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n     *              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n     *\n     *              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n     *              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n     **/\n    fn validate_quotient_in_range(self) {\n        for i in 0..(N) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        // Note: replace magic number 6 with definition\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120) + 6;\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    fn __is_zero(self) -> bool {\n        self.__is_zero_impl()\n    }\n\n    fn __eq(self, rhs: Self) -> bool {\n        self.__eq_impl(rhs)\n    }\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn from_array(limbs: [Field; N]) -> BigNum<N, Params> {\n        BigNum { limbs }\n    }\n\n    unconstrained fn __is_zero_impl(self) -> bool {\n        let mut result: bool = true;\n        for i in 0..N {\n            result = result & (self.limbs[i] == 0);\n        }\n        result\n    }\n\n    unconstrained fn __eq_impl(lhs: Self, rhs: Self) -> bool {\n        lhs.limbs == rhs.limbs\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstanceTrait<BigNum<N, Params>> for BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn modulus(self) -> BigNum<N, Params> {\n        BigNum { limbs: self.modulus }\n    }\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        self.__derive_from_seed_impl(seed)\n    }\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ### NOTE: these functions call unconstrained internal implementations because trait impl modifiers are not supported \n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn __neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__neg_impl(val)\n    }\n\n    fn __add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add_impl(lhs, rhs)\n    }\n\n    fn __sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__sub_impl(lhs, rhs)\n    }\n\n    fn __mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__mul_impl(lhs, rhs)\n    }\n\n    fn __div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__div_impl(lhs, rhs)\n    }\n\n    fn __batch_invert<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        self.batch_invert_impl(x)\n    }\n\n    fn __invmod(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__invmod_impl(val)\n    }\n\n    fn __pow(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__pow_impl(val, exponent)\n    }\n\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__compute_quadratic_expression_impl(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        )\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    /**\n     * @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n     * @description The expression is of the form (when evaluated as an integer relation):\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * Note: this method requires the remainder term of the expression to be ZERO\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The expensive parts of this algorithm are the following:\n     *      1. evaluating the limb products required to compute `lhs * rhs`\n     *      2. applying range constraints to validate the result is 0\n     *\n     * Range constraints are needed for the following reason:\n     * When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n     * Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n     * Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n     * To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n     * (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n     * To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n     * We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n     * TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n     * I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n     * TODO: explain why we apply a 126-bit range check, this feels like a magic number\n     * (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n     * TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n     * \n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) {\n        // use an unconstrained function to compute the value of the quotient\n        let (quotient, _, borrow_flags): (BigNum<N, Params>, BigNum<N, Params>, [Field; 2 * N]) = unsafe {\n            self.__compute_quadratic_expression_with_borrow_flags(\n                lhs_terms,\n                lhs_flags,\n                rhs_terms,\n                rhs_flags,\n                linear_terms,\n                linear_flags\n            )\n        };\n        // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n        // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n        quotient.validate_quotient_in_range();\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        // (should be a compile-time check...unconstrained function?)\n\n        // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n        let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t4: [Field; N] = [0; N];\n\n        // TODO: this is super nasty as it requires a multiplication\n        let double_modulus: [Field; N] = self.double_modulus;\n        for k in 0..NUM_PRODUCTS {\n            for i in 0..N {\n                for j in 0..LHS_N {\n                    // note: if is_negative is not known at comptime this is very expensive\n                    if (lhs_flags[k][j]) {\n                        t0[k][i] -= lhs_terms[k][j].limbs[i];\n                        t0[k][i] += double_modulus[i];\n                    } else {\n                        t0[k][i] += lhs_terms[k][j].limbs[i];\n                    }\n                }\n                for j in 0..RHS_N {\n                    if (rhs_flags[k][j]) {\n                        t1[k][i] -= rhs_terms[k][j].limbs[i];\n                        t1[k][i] += double_modulus[i];\n                    } else {\n                        t1[k][i] += rhs_terms[k][j].limbs[i];\n                    }\n                }\n            }\n        }\n        for i in 0..N {\n            for j in 0..ADD_N {\n                if (linear_flags[j]) {\n                    t4[i] -= linear_terms[j].limbs[i];\n                    t4[i] += double_modulus[i];\n                } else {\n                    t4[i] += linear_terms[j].limbs[i];\n                }\n            }\n        }\n\n        // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n        // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n        // so that we can ensure that no limbs will underflow for an honest Prover\n        let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n        // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n        // TODO: this is super nasty as it requires a multiplication\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    if k == 0 {\n                        let new_term = t0[k][i] * t1[k][j] - quotient.limbs[i] * self.modulus[j];\n                        std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                        product_limbs[i + j] += new_term;\n                    } else {\n                        product_limbs[i + j] += t0[k][i] * t1[k][j];\n                    }\n                }\n                if (NUM_PRODUCTS == 0) {\n                    product_limbs[i + j] -= quotient.limbs[i] * self.modulus[j];\n                }\n            }\n            product_limbs[i] += t4[i];\n        }\n\n        // each limb product represents the sum of 120-bit products.\n        // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n        // where no more than 64 limb products are summed together.\n        // TODO: check in unconstrained function that this condition is satisfied\n        // TODO: define trade-offs regarding the value of borrow_shift\n        // (the larger the value, the greater the range check that is required on product_limbs)\n        // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n        // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n\n        // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n        //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n        // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n        borrow_flags[0].assert_max_bit_size(1);\n        product_limbs[0] += borrow_flags[0] * borrow_shift;\n        for i in 1..(N + N - 2) {\n            borrow_flags[i].assert_max_bit_size(1);\n            product_limbs[i] += \n                (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n        }\n        product_limbs[N + N - 2] -= borrow_flags[N + N - 3] * borrow_carry;\n\n        // Final step: Validate `product_limbs` represents the integer value `0`\n        // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n        // i.e. we need to do the following for each limb `i`:\n        //      1. validate the limb's low-120 bits equals zero\n        //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n        //      3. add the carry into limb `i+1`\n        // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n        // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n        // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n        //  where k is the number of bits in the prime field)\n        // We then add the result into the next limb and repeat.\n        let hi_shift: Field = 0x1000000000000000000000000000000;\n        let hi_downshift: Field = 1 / hi_shift;\n        for i in 0..N + N - 2 {\n            product_limbs[i] *= hi_downshift;\n            std::as_witness(product_limbs[i]);\n            product_limbs[i].assert_max_bit_size(126); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n            product_limbs[i + 1] += product_limbs[i];\n        }\n        // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n        assert(product_limbs[N + N - 2] == 0);\n    }\n\n    fn validate_in_field(self, val: BigNum<N, Params>) {\n        // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n        let mut p_minus_self: [Field; N] = [0; N];\n        let modulus: [Field; N] = self.modulus;\n        for i in 0..N {\n            p_minus_self[i] = modulus[i] - val.limbs[i];\n        }\n        let borrow_flags = unsafe {\n            self.__validate_in_field_compute_borrow_flags(val)\n        };\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        p_minus_self[0] += borrow_flags[0] as Field * two_pow_120;\n        for i in 1..N - 1 {\n            p_minus_self[i] += (borrow_flags[i] as Field * two_pow_120 - borrow_flags[i-1] as Field);\n        }\n        p_minus_self[N - 1] -= borrow_flags[N - 2] as Field;\n        let mut compare = val;\n        compare.limbs = p_minus_self;\n        compare.validate_in_range();\n    }\n\n    /**\n     * @brief Validate self != other\n     * @details If A == B, then A == B mod N.\n     *          We can efficiently evaluate A == B mod N where N = circuit modulus\n     *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n     *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n     *          (todo: compute how tiny)\n     **/\n    fn assert_is_not_equal(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        let mut l: Field = 0;\n        let mut r: Field = 0;\n        let mut modulus_mod_n: Field = 0;\n        let mut two_pow_120: Field = 0x1000000000000000000000000000000;\n        let modulus = self.modulus;\n        for i in 0..N {\n            l *= two_pow_120;\n            r *= two_pow_120;\n            modulus_mod_n *= two_pow_120;\n            l += lhs.limbs[N - i - 1];\n            r += rhs.limbs[N - i - 1] ;\n            modulus_mod_n += modulus[N - i - 1];\n        }\n\n        // lhs can be either X mod N or P + X mod N\n        // rhs can be either Y mod N or P + Y mod N\n        // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n        let mut diff = l - r;\n        let mut target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n        assert(target != 0, \"asssert_is_not_equal fail\");\n    }\n\n    fn eq(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> bool {\n        let diff = self.sub(lhs, rhs);\n        // if self == other, possible values of `diff` will be `p` or `0`\n        // (the subtract operator constrains diff to be < ceil(log(p)))\n        // TODO: can do this more efficiently via witngen in unconstrained functions?\n        let mut is_equal_modulus: bool = true;\n        let mut is_equal_zero: bool = true;\n        for i in 0..N {\n            is_equal_modulus = is_equal_modulus & (diff.limbs[i] == self.modulus[i]);\n            is_equal_zero = is_equal_zero & (diff.limbs[i] == 0);\n        }\n        is_equal_modulus | is_equal_zero\n    }\n\n    fn neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe {\n            self.__neg_with_flags(val)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let result_limb = modulus[0] - val.limbs[0] - result.limbs[0] + (borrow_flags[0] as Field * borrow_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] - val.limbs[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + (borrow_flags[i] as Field * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val.limbs[N - 1] - result.limbs[N - 1] - borrow_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    fn add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) = unsafe {\n            self.__add_with_flags(lhs, rhs)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut subtrahend: [Field; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let result_limb = lhs.limbs[0] + rhs.limbs[0] - subtrahend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] + rhs.limbs[i]\n                - subtrahend[i]\n                - result.limbs[i]\n                - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] + rhs.limbs[N - 1]\n            - subtrahend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    // validate that lhs - rhs does not underflow i.e. lhs > rhs\n    fn validate_gt(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags) = unsafe {\n            self.__validate_gt_remainder(lhs, rhs)\n        };\n\n        result.validate_in_range();\n\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0] - 1\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n    }\n\n    fn sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) = unsafe {\n            self.__sub_with_flags(lhs, rhs)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let result = self.__mul(lhs, rhs);\n        self.evaluate_quadratic_expression([[lhs]], [[false]], [[rhs]], [[false]], [result], [true]);\n        result\n    }\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        assert(\n            Params::has_multiplicative_inverse(), \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\"\n        );\n        let result = self.__div(lhs, rhs);\n        self.evaluate_quadratic_expression([[result]], [[false]], [[rhs]], [[false]], [lhs], [true]);\n        result\n    }\n\n    /**\n     * @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn __udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__udiv_mod_impl(numerator, divisor)\n    }\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let (quotient, remainder) = BigNumInstance::__udiv_mod_impl(self, numerator, divisor);\n\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        self.evaluate_quadratic_expression(\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false]\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        self.validate_gt(divisor, remainder);\n        (quotient, remainder)\n    }\n\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. return param is floor(numerator / divisor)\n     **/\n    fn udiv(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).0\n    }\n\n    /**\n     * @brief udiv_mod performs integer modular reduction\n     *\n     * i.e. 1. numerator % divisor = return value\n     **/\n    fn umod(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).1\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C  O  N  S  T  R  U  C  T  O  R  S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn new(modulus: [Field; N], redc_param: [Field; N]) -> Self {\n        Self {\n            redc_param,\n            modulus,\n            modulus_u60: U60Repr::from(modulus),\n            modulus_u60_x4: U60Repr::from(modulus),\n            double_modulus: get_double_modulus(modulus)\n        }\n    }\n\n    unconstrained fn __derive_from_seed_impl<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        let mut rolling_seed = seed;\n\n        let mut to_reduce: [Field; 2 * N] = [0; 2 * N];\n\n        let mut double_modulus_bits = Params::modulus_bits() * 2;\n        let mut double_modulus_bytes = (double_modulus_bits) / 8 + (double_modulus_bits % 8 != 0) as u32;\n\n        let mut last_limb_bytes = double_modulus_bytes % 15;\n        if (last_limb_bytes == 0) {\n            last_limb_bytes = 15;\n        }\n        let mut last_limb_bits = double_modulus_bits % 8;\n        if (last_limb_bits == 0) {\n            last_limb_bits = 8;\n        }\n\n        for i in 0..(N - 1) {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut lo: Field = 0;\n            let mut hi: Field = 0;\n            for j in 0..15 {\n                hi *= 256;\n                lo *= 256;\n\n                if (i < 2 * N - 2) {\n                    lo += hash[j + 15] as Field;\n                    hi += hash[j] as Field;\n                }\n            }\n            to_reduce[2 * i] = lo;\n            to_reduce[2 * i + 1] = hi;\n            rolling_seed[0] += 1;\n        }\n\n        {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut hi: Field = 0;\n            for j in 0..(last_limb_bytes - 1) {\n                hi *= 256;\n                hi += hash[j] as Field;\n            }\n            hi *= 256;\n            let last_byte = hash[last_limb_bytes - 1];\n            let mask = (1 as u64 << (last_limb_bits) as u8) - 1;\n            let last_bits = last_byte as u64 & mask;\n            hi += last_bits as Field;\n            to_reduce[2 * N - 2] = hi;\n        }\n\n        let (_, remainder) = __barrett_reduction(\n            to_reduce,\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n        let mut result = BigNum::new();\n        result.limbs = remainder;\n        result\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    unconstrained fn __validate_in_field_compute_borrow_flags(self: Self, val: BigNum<N, Params>) -> [bool; N] {\n        let mut flags: [bool; N] = [false; N];\n        let modulus: [Field; N] = self.modulus;\n        flags[0] = modulus[0].lt(val.limbs[0]);\n        for i in 1..N - 1 {\n            flags[i] = modulus[i].lt(val.limbs[i] + flags[i - 1] as Field);\n        }\n        flags\n    }\n\n    unconstrained fn __pow_impl(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x: U60Repr<N, 2> = U60Repr::from(exponent.limbs);\n\n        let num_bits = Params::modulus_bits() + 1;\n\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n\n        for i in 0..num_bits {\n            accumulator = self.__mul(accumulator, accumulator);\n            if x.get_bit(num_bits - i - 1) {\n                accumulator = self.__mul(accumulator, val);\n            }\n        }\n        accumulator\n    }\n\n    unconstrained fn __mul_with_quotient(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut mul: [Field; 2 * N] = [0; 2 * N];\n        for i in 0..N {\n            for j in 0..N {\n                mul[i + j] += lhs.limbs[i] * rhs.limbs[j];\n            }\n        }\n        let (q, r) = __barrett_reduction(\n            split_bits::__normalize_limbs(mul, 2 * N),\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut quotient = BigNum::from_array(q);\n        let mut remainder = BigNum::from_array(r);\n        (quotient, remainder)\n    }\n\n    unconstrained fn __mul_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let (_, b) = self.__mul_with_quotient(lhs, rhs);\n        b\n    }\n\n    unconstrained fn __add_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let y_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let mut z_u60 = x_u60 + y_u60;\n\n        if z_u60.gte(self.modulus_u60) {\n            z_u60 = z_u60 - self.modulus_u60;\n        }\n        let mut result = BigNum::from_array(U60Repr::into(z_u60));\n        result\n    }\n\n    /**\n     * @brief given an input `x`, compute `2p - x` (unconstrained)\n     *\n     * @description we subtract the input from double the modulus, because all constrained BigNum operations\n     *              only guarantee that the output is in the range [0, ceil(log2(p))].\n     *              I.E. the input may be larger than the modulus `p`.\n     *              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n     *              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n     *              because such a check is expensive and usually unneccesary.\n     */\n    unconstrained fn __neg_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result = BigNum::from_array(U60Repr::into(self.modulus_u60 - x_u60));\n        result\n    }\n\n    unconstrained fn __add_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n        let add_u60 = a_u60 + b_u60;\n\n        let overflow = add_u60.gte(self.modulus_u60);\n\n        let mut subtrahend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        if overflow {\n            subtrahend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + b_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((subtrahend_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - subtrahend_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                let idx = (i - 1) / 2;\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[idx] = carry as bool;\n                borrow_flags[idx] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n\n        (result, carry_flags, borrow_flags, overflow)\n    }\n\n    unconstrained fn __validate_gt_remainder(\n        _: Self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N]) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let mut b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60);\n        b_u60 += U60Repr::one();\n        assert(underflow == false, \"BigNum::validate_gt check fails\");\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((b_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - b_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[i/2] = carry as bool;\n                borrow_flags[i/2] = borrow as bool;\n            }\n        }\n\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags)\n    }\n\n    unconstrained fn __sub_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60 + U60Repr::one());\n\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        if underflow {\n            addend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((b_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - b_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[i/2] = carry as bool;\n                borrow_flags[i/2] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags, underflow)\n    }\n\n    unconstrained fn __neg_with_flags(self, val: BigNum<N, Params>) -> (BigNum<N, Params>, [bool; N]) {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        let mut borrow_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            borrow = ((x_u60.limbs[i] + borrow_in) > self.modulus_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.modulus_u60.limbs[i] - x_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n            if ((i & 1) == 1) {\n                borrow_flags[i / 2] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, borrow_flags)\n    }\n\n    /**\n     * @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n     * @description see `__neg` for why we use 2p instead of p\n     **/\n    unconstrained fn __sub_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add(lhs, self.__neg(rhs))\n    }\n\n    unconstrained fn __invmod_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let one: BigNum<N, Params> = BigNum::one();\n        let one_u60: U60Repr<N, 2> = U60Repr::from(one.limbs);\n        let exponent = self.modulus_u60.sub(one_u60.add(one_u60));\n        let mut result = BigNum::from_array(U60Repr::into(exponent));\n        self.__pow(val, result)\n    }\n\n    unconstrained fn batch_invert_impl<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>; M] = [BigNum::new(); M];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn batch_invert_slice_impl(self, x: [BigNum<N, Params>]) -> [BigNum<N, Params>] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>] = [BigNum::new()];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n            result = result.push_back(BigNum::new());\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn __div_impl(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        let t0 = self.__invmod(divisor);\n        self.__mul(numerator, t0)\n    }\n\n    /**\n     * @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n     **/\n    // NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n    // To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n    // We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n    // Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n    // Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\n    unconstrained fn __add_linear_expression<let M: u32>(\n        self,\n        x: [BigNum<N, Params>; M],\n        flags: [bool; M]\n    ) -> ([Field; N]) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut sum: [Field; N] = [0; N];\n        // TODO: ugly! Will fail if input array is empty\n        let modulus2: [Field;N] = self.double_modulus;\n        for i in 0..M {\n            if (flags[i]) {\n                for j in 0..N {\n                    sum[j] = sum[j] + modulus2[j] - x[i].limbs[j];\n                    assert(x[i].limbs[j].lt(modulus2[j]));\n                }\n            } else {\n                for j in 0..N {\n                    sum[j] = sum[j] + x[i].limbs[j];\n                }\n            }\n        }\n        // problem if we normalize when used in computing quotient\n        sum\n    }\n\n    /**\n     * @brief computes the limb products of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_product<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> [Field; 2 * N] {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut lhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut rhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut add: [Field; N] = [0; N];\n\n        for i in 0..NUM_PRODUCTS {\n            lhs[i] = self.__add_linear_expression(lhs_terms[i], lhs_flags[i]);\n            rhs[i] = self.__add_linear_expression(rhs_terms[i], rhs_flags[i]);\n        }\n\n        let add: [Field; N] = self.__add_linear_expression(linear_terms, linear_flags);\n\n        let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    mulout[i + j] += (lhs[k][i] * rhs[k][j]);\n                }\n            }\n            mulout[i] += add[i];\n        }\n        mulout\n    }\n\n    /**\n     * @brief computes the quotient/remainder of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_impl<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mulout = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n        // TODO: ugly! Will fail if input slice is empty\n        let k  = Params::modulus_bits();\n\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            k,\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r)\n    }\n\n    /**\n     * @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n     * @description The expression is of the form:\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n     * For example, when computing the product a * b - q * p = 0, it is possible that:\n     *      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n     *      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n     * In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n     * In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n     *\n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    unconstrained fn __compute_quadratic_expression_with_borrow_flags<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>, [Field; 2 * N]) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n\n        let mut mulout_p = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n        let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n        let modulus: [Field; N] = self.modulus;\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            Params::modulus_bits(),\n            modulus,\n            self.modulus_u60_x4\n        );\n        assert(remainder == [0; N]);\n\n        for i in 0..N {\n            for j in 0..N {\n                mulout_n[i + j] += quotient[i] * modulus[j];\n            }\n        }\n\n        // compute borrow flags from mulout_p and mulout_n\n        let mut borrow_flags: [Field; 2 * N] = [0; 2 * N];\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        let downshift: Field = 1 / two_pow_120;\n\n        // determine whether we need to borrow from more significant limbs.\n        // initial limb is \"simple\" comparison operation\n        // TODO: check how expensive `lt` operator is w.r.t. witness generation\n        borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n        // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n        // and there is nothing to borrow against for the final limb.\n        let mut hi_bits = (mulout_p[0] - mulout_n[0] + (borrow_flags[0] * borrow_shift)) * downshift;\n        for i in 1..(N + N - 2) {\n            // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n            // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n            //     * downshift;\n            mulout_p[i] += hi_bits;\n\n            // determine whether negative limb values are greater than positive limb values\n            let underflow: Field = mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n            borrow_flags[i] = underflow;\n\n            hi_bits = (mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)) * downshift;\n        }\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r, borrow_flags)\n    }\n\n    unconstrained fn __udiv_mod_impl(\n        _: Self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut quotient_u60: U60Repr<N, 2> = U60Repr::from([0; N]);\n        let mut remainder_u60: U60Repr<N, 2> = U60Repr::from(numerator.limbs);\n\n        let mut divisor_u60: U60Repr<N, 2> = U60Repr::from(divisor.limbs);\n        let b = divisor_u60;\n\n        let mut bit_difference = remainder_u60.get_msb() - divisor_u60.get_msb();\n\n        let mut accumulator_u60: U60Repr<N, 2> = U60Repr::one();\n        divisor_u60 = divisor_u60.shl(bit_difference);\n        accumulator_u60 = accumulator_u60.shl(bit_difference);\n\n        if (divisor_u60.gte(remainder_u60 + U60Repr::one())) {\n            divisor_u60.shr1();\n            accumulator_u60.shr1();\n        }\n        for _ in 0..(N * 120) {\n            if (remainder_u60.gte(b) == false) {\n                break;\n            }\n\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (remainder_u60.gte(divisor_u60)) {\n                remainder_u60 -= divisor_u60;\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient_u60 = quotient_u60 + accumulator_u60;\n            }\n            divisor_u60.shr1(); // >>= 1;\n            accumulator_u60.shr1(); //  >>= 1;\n        }\n\n        (\n            BigNum::from_array(U60Repr::into(quotient_u60)), BigNum::from_array(U60Repr::into(remainder_u60))\n        )\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [Field; N]) -> [Field; N] {\n    let TWO_POW_120: Field = 0x1000000000000000000000000000000;\n    let m: U60Repr<N, 2> = U60Repr::from(modulus);\n    let mut result: [Field; N] = U60Repr::into(m + m);\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n\nunconstrained fn __barrett_reduction<let N: u32>(\n    x: [Field; 2 * N],\n    redc_param: [Field; N],\n    k: u32,\n    modulus: [Field; N],\n    modulus_u60: U60Repr<N, 4>\n) -> ([Field; N], [Field; N]) {\n    let mut mulout: [Field; 3 * N]  = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout[i + j] += x[i] * redc_param[j];\n        }\n    }\n    mulout = split_bits::__normalize_limbs(mulout, 3 * N - 1);\n    let mulout_u60: U60Repr<N, 6> = U60Repr::new(mulout);\n    let mut quotient_u60 = mulout_u60.shr((k + k));\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = quotient_u60.into_field_array();\n    let mut partial_quotient: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..2 * N {\n        partial_quotient[i] = partial_quotient_full[i];\n    }\n    // quotient_mul_modulus can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus: [Field; 2 * N]  = [0; 2 * N];\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N]  = [0; 2 * N];\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus[i + j] += partial_quotient[i] * modulus[j];\n        }\n    }\n\n    for i in 0..(N + N) {\n        let (lo, hi) = split_bits::split_120_bits(quotient_mul_modulus[i]);\n        quotient_mul_modulus_normalized[i] = lo;\n        // TODO: what is faster, leaving this if statement in or out?\n        // (array is size-1 too large so we can tolerate adding 0 into max element)\n        if (i + 1 < N + N) {\n            quotient_mul_modulus[i + 1] += hi;\n        }\n    }\n    let quotient_mul_modulus_u60: U60Repr<N, 4> = U60Repr::new(quotient_mul_modulus_normalized);\n\n    let x_u60 : U60Repr<N, 4> = U60Repr::new(x);\n    let mut remainder_u60 = x_u60 - quotient_mul_modulus_u60;\n\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    } else {}\n\n    let q: [Field; N] = U60Repr::into(quotient_u60);\n    let r: [Field; N] = U60Repr::into(remainder_u60);\n\n    (q, r)\n}\n"},"408":{"path":"/home/jpag/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/utils/split_bits.nr","source":"\n// Decomposes a single field into two 120 bit fields and a carry\nunconstrained pub fn split_120_bits(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let offsets: [Field; 17] = [\n        1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000, 0x10000000000000000, 0x1000000000000000000, 0x100000000000000000000, 0x10000000000000000000000, 0x1000000000000000000000000, 0x100000000000000000000000000, 0x10000000000000000000000000000, 0x1000000000000000000000000000000, 0x100000000000000000000000000000000\n    ];\n\n    for i in 0..15 {\n        low += (x_bytes[i] as Field) * offsets[i];\n        high += (x_bytes[i + 15] as Field) * offsets[i];\n    }\n    high += (x_bytes[30] as Field) * offsets[15];\n    high += (x_bytes[31] as Field) * offsets[16];\n    // TDOO: investigate why this is triggered in BigCurve crate? it shouldn't be?\n    //   assert(x_bytes[31] == 0);\n    (low, high)\n}\n\n/**\n * @brief Decomposes a single field into two 60 bit fields\n *\n * @description Expects the input limb to be in the range [0, ..., 2^{120 - 1}]\n **/\nunconstrained pub fn split_60_bits(x: Field) -> (u64, u64) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: u64 = 0;\n    let mut high: u64 = 0;\n\n    let offsets: [u64; 8] = [1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000];\n    for i in 0..8 {\n        low += (x_bytes[i] as u64) * offsets[i];\n        high += (x_bytes[i + 8] as u64) * offsets[i];\n    }\n    let t1 = low >> 60;\n    let mask = ((1 as u64) << 60 as u8) - 1;\n    low = low & mask;\n    high = (high << 4) | t1;\n    (low, high)\n}\n\nunconstrained pub(crate) fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32\n) -> [Field; N] {\n    let mut normalized: [Field; N] = [0; N];\n    let mut inp: _ = input;\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(inp[i]);\n\n        normalized[i]= lo;\n        inp[i + 1] +=  hi;\n    }\n    {\n        let (lo, hi) = split_120_bits(inp[range - 1]);\n        normalized[range - 1]= lo;\n        assert(hi == 0);\n    }\n    normalized\n}\n"},"409":{"path":"/home/jpag/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/utils/u60_representation.nr","source":"use crate::utils::split_bits;\nuse crate::utils::msb::get_msb64;\n\n/**\n * @brief U60Repr represents a BigNum element as a sequence of 60-bit unsigned integers.\n *\n * @description: used in unconstrained functions when computing witness values.\n * It is helpful to use u60 types when evaluating addition operations that can overflow the field modulus,\n * as well as when performing bit shifts.\n */\nstruct U60Repr<let N: u32, let NumSegments: u32> {\n    limbs: [u64; N * NumSegments]\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Add for U60Repr<N, NumSegments> {\n    fn add(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut carry: u64 = 0;\n        for i in 0..N * NumSegments {\n            let mut add: u64 = self.limbs[i] + b.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            result.limbs[i] = add;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Sub for U60Repr<N, NumSegments> {\n    fn sub(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        for i in 0..N * NumSegments {\n            borrow = ((b.limbs[i] + borrow_in) > self.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.limbs[i] - b.limbs[i] - borrow_in;\n            result.limbs[i] = sub;\n            borrow_in = borrow;\n        }\n\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::From<[Field; N]> for U60Repr<N, NumSegments> {\n    fn from(input: [Field; N]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N) {\n            let (lo, hi) = unsafe {\n                split_bits::split_60_bits(input[i])\n            };\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::Into<[Field; N]> for U60Repr<N, NumSegments> {\n    fn into(x: U60Repr<N, NumSegments>) -> [Field; N] {\n        let mut result: [Field; N] = [0; N];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..N {\n            result[i] = x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::cmp::Eq for U60Repr<N, NumSegments> {\n    fn eq(self, other: Self) -> bool {\n        self.limbs == other.limbs\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> U60Repr<N, NumSegments> {\n\n    unconstrained fn new<let NumFieldSegments: u32>(x: [Field; N * NumFieldSegments]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N * NumFieldSegments) {\n            let (lo, hi) = split_bits::split_60_bits(x[i]);\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n\n    unconstrained fn one() -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        result.limbs[0] = 1;\n        result\n    }\n\n    unconstrained fn into_field_array(x: U60Repr<N, NumSegments>) -> [Field; N * NumSegments / 2] {\n        let mut result: [Field; N * NumSegments / 2] = [0; N * NumSegments / 2];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..(N * NumSegments / 2) {\n            result[i]= x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n\n    unconstrained fn gte(self, b: Self) -> bool {\n        let mut result = false;\n        let mut early_exit = false;\n        for i in 0..(N * NumSegments) {\n            if (b.limbs[(N * NumSegments) - 1 - i] < self.limbs[((N * NumSegments) - 1 - i)]) {\n                result = true;\n                early_exit = true;\n                break;\n            } else if (b.limbs[(N * NumSegments) - 1 - i] != self.limbs[((N * NumSegments) - 1 - i)]) {\n                result = false;\n                early_exit = true;\n                break;\n            }\n        }\n        if (early_exit == false) {\n            result = (self.limbs[0] == b.limbs[0]);\n        }\n        result\n    }\n\n    fn get_bit(self, bit: u32) -> bool {\n        let segment_index = bit / 60;\n        let uint_index = bit % 60;\n\n        let limb: u64 = self.limbs[segment_index];\n        let value = (limb >> uint_index as u8) & 1;\n        value == 1\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = shift % 60;\n        let remainder_shift = 60 - limb_shift;\n        let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        result.limbs[0] = (self.limbs[0 + num_shifted_limbs] >> limb_shift as u8);\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i + num_shifted_limbs];\n            result.limbs[i] = (value >> limb_shift as u8);\n            let remainder: u64 = (value << remainder_shift as u8) & mask;\n            result.limbs[i - 1] = result.limbs[i - 1] + remainder;\n        }\n        result\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr1(&mut self) {\n        let value = self.limbs[NumSegments * N - 1];\n        self.limbs[NumSegments * N - 1] = value >> 1;\n\n        let mut remainder = (value & 1) << 59;\n\n        for i in 0..N * NumSegments {\n            let value = self.limbs[N * NumSegments - 1 - i];\n            self.limbs[N * NumSegments - 1 - i] = (value >> 1) + remainder;\n            remainder = (value << 59) & 0x800000000000000;\n        }\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shl(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; NumSegments * N] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = (shift % 60) as u8;\n        let remainder_shift: u8 = 60 - limb_shift as u8;\n\n        // 83\n        // limb shift = 1\n        // inside shift = 19 bits to the left\n        // meaning we have 19 carry bits and 41 remainder bits\n        let mask: u64 = (1 as u64 << 60) - 1;\n        //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        let value = self.limbs[0];\n\n        let mut remainder = (value >> remainder_shift);\n        result.limbs[num_shifted_limbs] = (value << (limb_shift as u8)) & mask;\n\n        // shift 84. num shifted = 1\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i];\n            let upshift = ((value << (limb_shift as u8)) + remainder) & mask;\n            result.limbs[i + num_shifted_limbs] = upshift;\n            remainder = (value >> remainder_shift);\n            // let remainder: u64 = (self.limbs.get(i + num_shifted_limbs as u64) << remainder_shift as u8) & mask;\n            // result.limbs.set(i - 1, result.limbs.get(i - 1) + remainder);\n        }\n        result\n    }\n\n    fn increment(&mut self) {\n        let mut carry: u64 = 0;\n\n        let mut add: u64 = self.limbs[0] + 1;\n        carry = add >> 60;\n        add = add - (carry << 60);\n        self.limbs[0] = add;\n\n        for i in 1..NumSegments * N {\n            let mut add: u64 = self.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            self.limbs[i] = add;\n        }\n    }\n\n    unconstrained  fn get_msb(val: Self) -> u32 {\n        let mut count = 0;\n        for i in 0..N * NumSegments {\n            let v = val.limbs[((N * NumSegments) - 1 - i)];\n            if (v > 0) {\n                count = 60 * ((N * NumSegments) - 1 - i) + get_msb64(v);\n                break;\n            }\n        }\n        count\n    }\n}\n"},"58":{"path":"std/option.nr","source":"use crate::hash::{Hash, Hasher};\nuse crate::cmp::{Ordering, Ord, Eq};\nuse crate::default::Default;\n\npub struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::mem::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some { self._value } else { default }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// Asserts `self.is_some()` with a provided custom message and returns the contained `Some` value\n    fn expect<let N: u32, MessageTypes>(self, message: fmtstr<N, MessageTypes>) -> T {\n        assert(self.is_some(), message);\n        self._value\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some { self } else { other }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some { self } else { default() }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some { Option::none() } else { self }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n\nimpl<T> Default for Option<T> {\n    fn default() -> Self {\n        Option::none()\n    }\n}\n\nimpl<T> Eq for Option<T> where T: Eq {\n    fn eq(self, other: Self) -> bool {\n        if self._is_some == other._is_some {\n            if self._is_some {\n                self._value == other._value\n            } else {\n                true\n            }\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T> Hash for Option<T> where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self._is_some.hash(state);\n        if self._is_some {\n            self._value.hash(state);\n        }\n    }\n}\n\n// For this impl we're declaring Option::none < Option::some\nimpl<T> Ord for Option<T> where T: Ord {\n    fn cmp(self, other: Self) -> Ordering {\n        if self._is_some {\n            if other._is_some {\n                self._value.cmp(other._value)\n            } else {\n                Ordering::greater()\n            }\n        } else if other._is_some {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n"},"59":{"path":"std/panic.nr","source":"pub fn panic<T, U, let N: u32>(message: fmtstr<N, T>) -> U {\n    assert(false, message);\n    crate::mem::zeroed()\n}\n"},"6":{"path":"std/cmp.nr","source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(s, quote { Eq }, signature, for_each_field, quote { & }, body)\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N] where T: Eq {\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T] where T: Eq {\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B) where A: Eq, B: Eq {\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C) where A: Eq, B: Eq, C: Eq {\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D) where A: Eq, B: Eq, C: Eq, D: Eq {\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E) where A: Eq, B: Eq, C: Eq, D: Eq, E: Eq {\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B) where A: Ord, B: Ord {\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C) where A: Ord, B: Ord, C: Ord {\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D) where A: Ord, B: Ord, C: Ord, D: Ord {\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E) where A: Ord, B: Ord, C: Ord, D: Ord, E: Ord {\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v1 } else { v2 }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v2 } else { v1 }\n}\n\nmod cmp_tests {\n    use crate::cmp::{min, max};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n"},"65":{"path":"std/slice.nr","source":"use crate::append::Append;\n\nimpl<T> [T] {\n    /// Returns the length of the slice.\n    #[builtin(array_len)]\n    pub fn len(self) -> u32 {}\n\n    /// Push a new element to the end of the slice, returning a\n    /// new slice with a length one greater than the\n    /// original unmodified slice.\n    #[builtin(slice_push_back)]\n    pub fn push_back(self, elem: T) -> Self {}\n\n    /// Push a new element to the front of the slice, returning a\n    /// new slice with a length one greater than the \n    /// original unmodified slice. \n    #[builtin(slice_push_front)]\n    pub fn push_front(self, elem: T) -> Self {}\n\n    /// Remove the last element of the slice, returning the\n    /// popped slice and the element in a tuple\n    #[builtin(slice_pop_back)]\n    pub fn pop_back(self) -> (Self, T) {}\n\n    /// Remove the first element of the slice, returning the\n    /// element and the popped slice in a tuple\n    #[builtin(slice_pop_front)]\n    pub fn pop_front(self) -> (T, Self) {}\n\n    /// Insert an element at a specified index, shifting all elements \n    /// after it to the right\n    #[builtin(slice_insert)]\n    pub fn insert(self, index: u32, elem: T) -> Self {}\n\n    /// Remove an element at a specified index, shifting all elements\n    /// after it to the left, returning the altered slice and \n    /// the removed element\n    #[builtin(slice_remove)]\n    pub fn remove(self, index: u32) -> (Self, T) {}\n\n    /// Append each element of the `other` slice to the end of `self`.\n    /// This returns a new slice and leaves both input slices unchanged.\n    pub fn append(mut self, other: Self) -> Self {\n        for elem in other {\n            self = self.push_back(elem);\n        }\n        self\n    }\n\n    pub fn as_array<let N: u32>(self) -> [T; N] {\n        assert(self.len() == N);\n\n        let mut array = [crate::mem::zeroed(); N];\n        for i in 0..N {\n            array[i] = self[i];\n        }\n        array\n    }\n\n    // Apply a function to each element of the slice, returning a new slice\n    // containing the mapped elements.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> [U] {\n        let mut ret = &[];\n        for elem in self {\n            ret = ret.push_back(f(elem));\n        }\n        ret\n    }\n\n    // Apply a function to each element of the slice and an accumulator value,\n    // returning the final accumulated value. This function is also sometimes\n    // called `foldl`, `fold_left`, `reduce`, or `inject`.\n    pub fn fold<U, Env>(self, mut accumulator: U, f: fn[Env](U, T) -> U) -> U {\n        for elem in self {\n            accumulator = f(accumulator, elem);\n        }\n        accumulator\n    }\n\n    // Apply a function to each element of the slice and an accumulator value,\n    // returning the final accumulated value. Unlike fold, reduce uses the first\n    // element of the given slice as its starting accumulator value.\n    pub fn reduce<Env>(self, f: fn[Env](T, T) -> T) -> T {\n        let mut accumulator = self[0];\n        for i in 1..self.len() {\n            accumulator = f(accumulator, self[i]);\n        }\n        accumulator\n    }\n\n    // Returns a new slice containing only elements for which the given predicate\n    // returns true.\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        let mut ret = &[];\n        for elem in self {\n            if predicate(elem) {\n                ret = ret.push_back(elem);\n            }\n        }\n        ret\n    }\n\n    // Flatten each element in the slice into one value, separated by `separator`.\n    pub fn join(self, separator: T) -> T where T: Append {\n        let mut ret = T::empty();\n\n        if self.len() != 0 {\n            ret = self[0];\n\n            for i in 1..self.len() {\n                ret = ret.append(separator).append(self[i]);\n            }\n        }\n\n        ret\n    }\n\n    // Returns true if all elements in the slice satisfy the predicate\n    pub fn all<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = true;\n        for elem in self {\n            ret &= predicate(elem);\n        }\n        ret\n    }\n\n    // Returns true if any element in the slice satisfies the predicate\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        for elem in self {\n            ret |= predicate(elem);\n        }\n        ret\n    }\n}\n"},"68":{"path":"std/uint128.nr","source":"use crate::ops::{Add, Sub, Mul, Div, Rem, Not, BitOr, BitAnd, BitXor, Shl, Shr};\nuse crate::cmp::{Eq, Ord, Ordering};\n\nglobal pow64 : Field = 18446744073709551616; //2^64;\nglobal pow63 : Field = 9223372036854775808; // 2^63;\npub struct U128 {\n    lo: Field,\n    hi: Field,\n}\n\nimpl U128 {\n\n    pub fn from_u64s_le(lo: u64, hi: u64) -> U128 {\n        // in order to handle multiplication, we need to represent the product of two u64 without overflow\n        assert(crate::field::modulus_num_bits() as u32 > 128);\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    pub fn from_u64s_be(hi: u64, lo: u64) -> U128 {\n        U128::from_u64s_le(lo, hi)\n    }\n\n    pub fn zero() -> U128 {\n        U128 { lo: 0, hi: 0 }\n    }\n\n    pub fn one() -> U128 {\n        U128 { lo: 1, hi: 0 }\n    }\n    pub fn from_le_bytes(bytes: [u8; 16]) -> U128 {\n        let mut lo = 0;\n        let mut base = 1;\n        for i in 0..8 {\n            lo += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        let mut hi = 0;\n        base = 1;\n        for i in 8..16 {\n            hi += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        U128 { lo, hi }\n    }\n\n    pub fn to_be_bytes(self: Self) -> [u8; 16] {\n        let lo: [u8; 8] = self.lo.to_be_bytes();\n        let hi: [u8; 8] = self.hi.to_be_bytes();\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = hi[i];\n            bytes[i+8] = lo[i];\n        }\n        bytes\n    }\n\n    pub fn to_le_bytes(self: Self) -> [u8; 16] {\n        let lo: [u8; 8] = self.lo.to_le_bytes();\n        let hi: [u8; 8] = self.hi.to_le_bytes();\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = lo[i];\n            bytes[i+8] = hi[i];\n        }\n        bytes\n    }\n\n    pub fn from_hex<let N: u32>(hex: str<N>) -> U128 {\n        let N = N as u32;\n        let bytes = hex.as_bytes();\n        // string must starts with \"0x\"\n        assert((bytes[0] == 48) & (bytes[1] == 120), \"Invalid hexadecimal string\");\n        assert(N < 35, \"Input does not fit into a U128\");\n\n        let mut lo = 0;\n        let mut hi = 0;\n        let mut base = 1;\n        if N <= 18 {\n            for i in 0..N - 2 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n        } else {\n            for i in 0..16 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n            base = 1;\n            for i in 17..N - 1 {\n                hi += U128::decode_ascii(bytes[N-i])*base;\n                base = base*16;\n            }\n        }\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    unconstrained fn uconstrained_check_is_upper_ascii(ascii: u8) -> bool {\n        ((ascii >= 65) & (ascii <= 90)) // Between 'A' and 'Z'\n    }\n\n    pub(crate) fn decode_ascii(ascii: u8) -> Field {\n        (if ascii < 58 {\n            ascii - 48\n        } else {\n            let ascii = ascii + 32 * (unsafe {\n                        U128::uconstrained_check_is_upper_ascii(ascii) as u8\n                    });\n            assert(ascii >= 97); // enforce >= 'a'\n            assert(ascii <= 102); // enforce <= 'f'\n            ascii - 87\n        }) as Field\n    }\n\n    // TODO: Replace with a faster version. \n    // A circuit that uses this function can be slow to compute\n    // (we're doing up to 127 calls to compute the quotient)\n    unconstrained fn unconstrained_div(self: Self, b: U128) -> (U128, U128) {\n        if b == U128::zero() {\n            // Return 0,0 to avoid eternal loop\n            (U128::zero(), U128::zero())\n        } else if self < b {\n            (U128::zero(), self)\n        } else if self == b {\n            (U128::one(), U128::zero())\n        } else {\n            let (q,r) = if b.hi as u64 >= pow63 as u64 {\n                // The result of multiplication by 2 would overflow\n                (U128::zero(), self)\n            } else {\n                self.unconstrained_div(b * U128::from_u64s_le(2, 0))\n            };\n            let q_mul_2 = q * U128::from_u64s_le(2, 0);\n            if r < b {\n                (q_mul_2, r)\n            } else {\n                (q_mul_2 + U128::one(), r - b)\n            }\n        }\n    }\n\n    pub fn from_integer<T>(i: T) -> U128 {\n        let f = crate::as_field(i);\n        // Reject values which would overflow a u128\n        f.assert_max_bit_size(128);\n        let lo = f as u64 as Field;\n        let hi = (f - lo) / pow64;\n        U128 { lo, hi }\n    }\n\n    pub fn to_integer<T>(self) -> T {\n        crate::from_field(self.lo + self.hi * pow64)\n    }\n\n    fn wrapping_mul(self: Self, b: U128) -> U128 {\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = self.lo * b.hi + self.hi * b.lo + carry;\n        let hi = high as u64 as Field;\n        U128 { lo, hi }\n    }\n}\n\nimpl Add for U128 {\n    fn add(self: Self, b: U128) -> U128 {\n        let low = self.lo + b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = self.hi + b.hi + carry;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to add with overflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Sub for U128 {\n    fn sub(self: Self, b: U128) -> U128 {\n        let low = pow64 + self.lo - b.lo;\n        let lo = low as u64 as Field;\n        let borrow = (low == lo) as Field;\n        let high = self.hi - b.hi - borrow;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to subtract with underflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Mul for U128 {\n    fn mul(self: Self, b: U128) -> U128 {\n        assert(self.hi * b.hi == 0, \"attempt to multiply with overflow\");\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = if crate::field::modulus_num_bits() as u32 > 196 {\n            (self.lo + self.hi) * (b.lo + b.hi) - low + carry\n        } else {\n            self.lo * b.hi + self.hi * b.lo + carry\n        };\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to multiply with overflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Div for U128 {\n    fn div(self: Self, b: U128) -> U128 {\n        unsafe {\n            let (q,r) = self.unconstrained_div(b);\n            let a = b * q + r;\n            assert_eq(self, a);\n            assert(r < b);\n            q\n        }\n    }\n}\n\nimpl Rem for U128 {\n    fn rem(self: Self, b: U128) -> U128 {\n        unsafe {\n            let (q,r) = self.unconstrained_div(b);\n            let a = b * q + r;\n            assert_eq(self, a);\n            assert(r < b);\n\n            r\n        }\n    }\n}\n\nimpl Eq for U128 {\n    fn eq(self: Self, b: U128) -> bool {\n        (self.lo == b.lo) & (self.hi == b.hi)\n    }\n}\n\nimpl Ord for U128 {\n    fn cmp(self, other: Self) -> Ordering {\n        let hi_ordering = (self.hi as u64).cmp((other.hi as u64));\n        let lo_ordering = (self.lo as u64).cmp((other.lo as u64));\n\n        if hi_ordering == Ordering::equal() {\n            lo_ordering\n        } else {\n            hi_ordering\n        }\n    }\n}\n\nimpl Not for U128 {\n    fn not(self) -> U128 {\n        U128 { lo: (!(self.lo as u64)) as Field, hi: (!(self.hi as u64)) as Field }\n    }\n}\n\nimpl BitOr for U128 {\n    fn bitor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) | (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) | (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitAnd for U128 {\n    fn bitand(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) & (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) & (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitXor for U128 {\n    fn bitxor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) ^ (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) ^ (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl Shl for U128 {\n    fn shl(self, other: u8) -> U128 {\n        assert(other < 128, \"attempt to shift left with overflow\");\n        let exp_bits: [u1; 7] = (other as Field).to_be_bits();\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            let bit = exp_bits[7 - i] as Field;\n            y = bit * (r * y) + (1 - bit) * y;\n            r *= r;\n        }\n        self.wrapping_mul(U128::from_integer(y))\n    }\n}\n\nimpl Shr for U128 {\n    fn shr(self, other: u8) -> U128 {\n        assert(other < 128, \"attempt to shift right with overflow\");\n        let exp_bits: [u1; 7] = (other as Field).to_be_bits();\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            let bit = exp_bits[7 - i] as Field;\n            y = bit * (r * y) + (1 - bit) * y;\n            r *= r;\n        }\n        self / U128::from_integer(y)\n    }\n}\n\nmod tests {\n    use crate::uint128::{U128, pow64, pow63};\n\n    #[test]\n    fn test_not(lo: u64, hi: u64) {\n        let num = U128::from_u64s_le(lo, hi);\n        let not_num = num.not();\n\n        assert_eq(not_num.hi, (hi.not() as Field));\n        assert_eq(not_num.lo, (lo.not() as Field));\n\n        let not_not_num = not_num.not();\n        assert_eq(num, not_not_num);\n    }\n    #[test]\n    fn test_construction() {\n        // Check little-endian u64 is inversed with big-endian u64 construction\n        let a = U128::from_u64s_le(2, 1);\n        let b = U128::from_u64s_be(1, 2);\n        assert_eq(a, b);\n        // Check byte construction is equivalent\n        let c = U128::from_le_bytes([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n        let d = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        assert_eq(c, d);\n    }\n    #[test]\n    fn test_byte_decomposition() {\n        let a = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        // Get big-endian and little-endian byte decompostions\n        let le_bytes_a= a.to_le_bytes();\n        let be_bytes_a= a.to_be_bytes();\n\n        // Check equivalence\n        for i in 0..16 {\n            assert_eq(le_bytes_a[i], be_bytes_a[15 - i]);\n        }\n        // Reconstruct U128 from byte decomposition\n        let b= U128::from_le_bytes(le_bytes_a);\n        // Check that it's the same element\n        assert_eq(a, b);\n    }\n    #[test]\n    fn test_hex_constuction() {\n        let a = U128::from_u64s_le(0x1, 0x2);\n        let b = U128::from_hex(\"0x20000000000000001\");\n        assert_eq(a, b);\n\n        let c= U128::from_hex(\"0xffffffffffffffffffffffffffffffff\");\n        let d= U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff);\n        assert_eq(c, d);\n\n        let e= U128::from_hex(\"0x00000000000000000000000000000000\");\n        let f= U128::from_u64s_le(0, 0);\n        assert_eq(e, f);\n    }\n\n    // Ascii decode tests\n\n    #[test]\n    fn test_ascii_decode_correct_range() {\n        // '0'..'9' range\n        for i in 0..10 {\n            let decoded= U128::decode_ascii(48 + i);\n            assert_eq(decoded, i as Field);\n        }\n        // 'A'..'F' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(65 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n        // 'a'..'f' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(97 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_0() {\n        crate::println(U128::decode_ascii(0));\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_1() {\n        crate::println(U128::decode_ascii(47));\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_0() {\n        let _ = U128::decode_ascii(58);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_1() {\n        let _ = U128::decode_ascii(64);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_0() {\n        let _ = U128::decode_ascii(71);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_1() {\n        let _ = U128::decode_ascii(96);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_greater_than_102_fails() {\n        let _ = U128::decode_ascii(103);\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_regression() {\n        // This code will actually fail because of ascii_decode,\n        // but in the past it was possible to create a value > (1<<128)\n        let a = U128::from_hex(\"0x~fffffffffffffffffffffffffffffff\");\n        let b:Field= a.to_integer();\n        let c: [u8; 17]= b.to_le_bytes();\n        assert(c[16] != 0);\n    }\n\n    #[test]\n    fn test_unconstrained_div() {\n        // Test the potential overflow case\n        let a= U128::from_u64s_le(0x0, 0xffffffffffffffff);\n        let b= U128::from_u64s_le(0x0, 0xfffffffffffffffe);\n        let c= U128::one();\n        let d= U128::from_u64s_le(0x0, 0x1);\n        unsafe {\n            let (q,r) = a.unconstrained_div(b);\n            assert_eq(q, c);\n            assert_eq(r, d);\n        }\n\n        let a = U128::from_u64s_le(2, 0);\n        let b = U128::one();\n        // Check the case where a is a multiple of b\n        unsafe {\n            let (c, d) = a.unconstrained_div(b);\n            assert_eq((c, d), (a, U128::zero()));\n        }\n\n        // Check where b is a multiple of a\n        unsafe {\n            let (c,d) = b.unconstrained_div(a);\n            assert_eq((c, d), (U128::zero(), b));\n        }\n\n        // Dividing by zero returns 0,0\n        let a = U128::from_u64s_le(0x1, 0x0);\n        let b = U128::zero();\n        unsafe {\n            let (c, d)= a.unconstrained_div(b);\n            assert_eq((c, d), (U128::zero(), U128::zero()));\n        }\n        // Dividing 1<<127 by 1<<127 (special case)\n        let a = U128::from_u64s_le(0x0, pow63 as u64);\n        let b = U128::from_u64s_le(0x0, pow63 as u64);\n        unsafe {\n            let (c, d) = a.unconstrained_div(b);\n            assert_eq((c, d), (U128::one(), U128::zero()));\n        }\n    }\n\n    #[test]\n    fn integer_conversions() {\n        // Maximum\n        let start:Field = 0xffffffffffffffffffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Minimum\n        let start:Field = 0x0;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Low limb\n        let start:Field = 0xffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // High limb\n        let start:Field = 0xffffffffffffffff0000000000000000;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn integer_conversions_fuzz(lo: u64, hi: u64) {\n        let start: Field = (lo as Field) + pow64 * (hi as Field);\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn test_wrapping_mul() {\n        // 1*0==0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::one()));\n\n        // 0*1==0\n        assert_eq(U128::zero(), U128::one().wrapping_mul(U128::zero()));\n\n        // 1*1==1\n        assert_eq(U128::one(), U128::one().wrapping_mul(U128::one()));\n\n        // 0 * ( 1 << 64 ) ==  0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * 0 == 0\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::zero()));\n\n        // 1 * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::from_u64s_le(0, 1).wrapping_mul(U128::one()));\n\n        // ( 1 << 64 ) * 1 == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::one().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::from_u64s_le(0, 1)));\n        // -1 * -1 == 1\n        assert_eq(\n            U128::one(), U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff).wrapping_mul(U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff))\n        );\n    }\n}\n"},"7":{"path":"std/collections/bounded_vec.nr","source":"use crate::{cmp::Eq, convert::From};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n/// \n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n/// \n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n/// \n/// Example:\n/// \n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a \n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    /// \n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    /// \n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    /// \n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure. \n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    /// \n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    /// \n    /// Panics if the new length of the vector will be greater than the max length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// \n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    /// \n    /// v.push(100);\n    /// assert(v.len() == 1);\n    /// \n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    /// \n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    /// \n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    /// \n    /// Note that uninitialized elements may be zeroed out!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    /// \n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    /// \n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    /// \n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input. \n    /// The maximum length of the vector is determined based on the type signature.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    /// \n    /// Panics if the vector is empty.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// let two = v.pop();\n    /// let one = v.pop();\n    /// \n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    /// \n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.  \n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    /// \n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n        for i in 0..MaxLen {\n            if i < self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        }\n        ret\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen> where T: Eq {\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n\n        (self.len == other.len) & (self.storage == other.storage)\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2)  as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.storage()[2], 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n            assert_eq(bounded_vec.storage()[2], 3);\n        }\n\n        #[test(should_fail_with=\"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n}\n"},"71":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/contracts/z_imburse_escrow/src/main.nr","source":"use dep::aztec::macros::aztec;\n\nmod constants;\nmod types;\n\n#[aztec]\ncontract ZImburseEscrow {\n    use dep::aztec::prelude::{AztecAddress, PrivateImmutable, PrivateSet, SharedImmutable, Map};\n    use dep::aztec::encrypted_logs::encrypted_note_emission::{encode_and_encrypt_note, encode_and_encrypt_note_unconstrained};\n    use dep::aztec::macros::{storage::storage, functions::{private, public, internal, view, initializer}};\n    use dep::aztec::keys::getters::get_public_keys;\n    use dep::aztec::note::note_getter_options::NoteGetterOptions;\n    use dep::aztec::oracle::random::random;\n    use dep::aztec::utils::comparison::Comparator;\n    \n    use dep::token::Token;\n    use dep::address_note::address_note::AddressNote;\n    use dep::zimburse_verifiers::{\n        constants::{MAX_LINODE_EMAIL_BODY_LENGTH, MAX_LINODE_EMAIL_HEADER_LENGTH},\n        linode::verify_linode_billing_receipt,\n        zkemail::KEY_LIMBS_2048\n    };\n    use dep::z_imburse_dkim_registry::{ZImburseDkimRegistry, receipt_verifier_id};\n\n    use crate::types::{\n        escrow_definition::{EscrowDefinition, TITLE_LENGTH},\n        recurring_entitlement_note::RecurringEntitlementNote,\n        entitlement_receipt_note::EntitlementReceiptNote\n    };\n    \n\n    #[storage]\n    struct Storage<Context> {\n        definition: SharedImmutable<EscrowDefinition, Context>,\n        recurring_entitlements: Map<AztecAddress, PrivateSet<RecurringEntitlementNote, Context>, Context>,\n        entitlement_receipts: PrivateSet<EntitlementReceiptNote, Context>,\n        entitlement_nullifiers: Map<Field, SharedImmutable<bool, Context>, Context>\n    }\n\n\n    /**\n     * Initialize the Z-Imburse contract by setting the owner and USDC token.\n     *\n     * @param registry The address of the Z-Imburse contract registry\n     * @param usdc_token The address of the USDC token\n     * @param title The title of the contract as a string of max length 60\n     */\n    #[public]\n    #[initializer]\n    fn constructor(\n        dkimRegistry: AztecAddress,\n        escrowRegistry: AztecAddress,\n        usdc_token: AztecAddress,\n        title: str<TITLE_LENGTH>\n    ) {\n        let definition = EscrowDefinition::new(\n            dkimRegistry,\n            escrowRegistry,\n            context.msg_sender(),\n            usdc_token,\n            title\n        );\n        storage.definition.initialize(definition);\n    }\n\n\n    #[private]\n    fn give_recurring_entitlement(to: AztecAddress, amount: Field, verifier_id: u8) {\n        // todo: check receipts to see if there is an existing entitlement for this verifier & recipient (only on recurring)\n        // let options = NoteGetterOptions::new()\n        //     .set_limit(1)\n        //     .select(EntitlementNoteReceipt::properties().verifier_id, Comparators.EQ, receipt_verifier_id::LINODE);\n        //     .select(EntitlementNoteReceipt::properties().owner, Comparators.EQ, to);\n        // let notes = storage.entitlement_receipts.pop_notes(options);\n        // assert(notes.len() == 0, \"Entitlement already exists for this verifier and recipient\");\n\n        // get nullifying keys for admin and recipient\n        let recipient_keys = get_public_keys(to);\n        let admin_keys = get_public_keys(context.msg_sender());\n        // create random value here since shared in both notes\n        let blinding_factor = unsafe { random() };\n        // create entitlement note for recipient to spend\n        let amount = U128::from_integer(amount);\n        let mut entitlement = RecurringEntitlementNote::new(\n            to,\n            recipient_keys.npk_m.hash(),\n            admin_keys.npk_m.hash(),\n            verifier_id,\n            amount,\n            blinding_factor\n        );\n        storage.recurring_entitlements.at(to).insert(&mut entitlement).emit(\n            encode_and_encrypt_note(&mut context, admin_keys.ovpk_m, recipient_keys.ivpk_m, to)\n        );\n        // create entitlement receipt for admin to keep track of & potentially nullify\n        let mut receipt = EntitlementReceiptNote::new(\n            to,\n            admin_keys.npk_m.hash(),\n            verifier_id,\n            amount,\n            blinding_factor\n        );\n        storage.entitlement_receipts.insert(&mut receipt).emit(\n            encode_and_encrypt_note_unconstrained(&mut context, admin_keys.ovpk_m, admin_keys.ivpk_m, context.msg_sender())\n        );\n    }\n\n    #[private]\n    fn redeem_linode_entitlement(\n        // email inputs\n        body: [u8; MAX_LINODE_EMAIL_BODY_LENGTH],\n        body_hash_index: u32,\n        body_length: u32,\n        header: [u8; MAX_LINODE_EMAIL_HEADER_LENGTH],\n        header_length: u32,\n        pubkey: [Field; KEY_LIMBS_2048],\n        pubkey_redc: [Field; KEY_LIMBS_2048],\n        signature: [Field; KEY_LIMBS_2048],\n        from_index: u32,\n        subject_index: u32,\n        amount_index: u32,\n        amount_length: u32,\n        date_index: u32,\n        receipt_id_length: u32,\n        // claim hash\n        claim_secret_hash: Field,\n    ) {\n        // retrieve a Linode hosting entitlement\n        let notes = storage.recurring_entitlements.at(context.msg_sender()).pop_notes(\n            NoteGetterOptions::new()\n                // .select(RecurringEntitlementNote::properties().verifier_id, Comparator.EQ, receipt_verifier_id::LINODE)\n                .set_limit(1)\n        );\n        assert(notes.len() == 1, \"No entitlements to redeem\");\n        let note = notes.get_unchecked(0);\n        assert(note.owner == context.msg_sender(), \"Entitlement does not belong to the sender\");\n\n        // check that the revocation nullifier has not been emitted\n        let revocation_nullifier = note.compute_revocation_nullifier();\n        let revocation_nullifier_exists = storage.entitlement_nullifiers.at(revocation_nullifier).read_private();\n        assert(!revocation_nullifier_exists, \"Entitlement has been revoked\");\n\n        // verify linode billing receipt and extract amount, date, keyhash\n        // todo: create a new function with pop_capsule to handle custom logic & inputs per email\n        let linode_receipt_result = verify_linode_billing_receipt(\n            body, body_hash_index, body_length, header, header_length, pubkey, pubkey_redc, signature, from_index, subject_index, amount_index, amount_length, date_index, receipt_id_length\n        );\n        let dkim_key_hash = linode_receipt_result[0];\n        let unix_month = linode_receipt_result[1]; // month and year\n        // billed amount returns 2 decimals, so multiply billed_amount by 10,000\n        let billed_amount = U128::from_integer(linode_receipt_result[2] * 10000);\n\n        // check the dkim key hash matches the linode verifier id\n        let registry = storage.definition.read_private().dkimRegistry;\n        let verifier_id = ZImburseDkimRegistry::at(registry).check_dkim_key_hash_private(dkim_key_hash).view(&mut context);\n        assert(verifier_id == receipt_verifier_id::LINODE, \"DKIM key is not registered for Linode\");\n\n        // check that this entitlement has not been emitted for this month\n        // constrained to use the year/month unix timestamp computed by email verifier\n        let recurring_nullifier = note.compute_recurring_nullifier(unix_month);\n        let recurring_nullifier_exists = storage.entitlement_nullifiers.at(recurring_nullifier).read_private();\n        assert(!recurring_nullifier_exists, \"Entitlement has already been redeemed for this month\");\n        // enque emission of the nullifier too\n        ZImburseEscrow::at(context.this_address()).emit_entitlement_nullifier(recurring_nullifier).enqueue(&mut context);\n\n        // determine the amount to reimburse\n        let amount_to_reimburse = if note.max_value >= billed_amount {\n            billed_amount\n        } else {\n            note.max_value\n        };\n\n        // release funds from escrow by shielding in public\n        // todo: do we need a private event? or is it sufficient to instantly claim?\n        // worry would be waiting/ disconnection\n        let token_address = storage.definition.read_private().usdc;\n        Token::at(token_address).shield(context.this_address(), amount_to_reimburse.to_field(), claim_secret_hash, 0).enqueue(&mut context);\n    }\n\n    /**\n     * Emit a nullifier from the private context for any reason (using spot, recurring, or revocation)\n     * \n     * @param nullifier - the nullifier to emit\n     */\n    #[public]\n    #[internal]\n    pub fn emit_entitlement_nullifier(nullifier: Field) {\n        storage.entitlement_nullifiers.at(nullifier).initialize(true);\n        // todo: emit event on nullifier?\n    }\n\n    /**\n     * Get the title of the Z-Imburse escrow\n     */\n    #[public]\n    #[view]\n    pub fn get_title() -> [u8; TITLE_LENGTH]{\n        storage.definition.read_public().title_as_string()\n    }\n\n\n    /**\n     * Privately get the admin of the ZImburse escrow contract\n     *\n     * @return the admin of the ZImburse escrow contract\n     */\n    #[private]\n    #[view]\n    pub fn get_admin_private() -> AztecAddress {\n        storage.definition.read_private().admin\n    }\n\n}\n\n"},"72":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/contracts/z_imburse_escrow/src/types/entitlement_receipt_note.nr","source":"use dep::aztec::protocol_types::{\n    address::AztecAddress,\n    traits::{Serialize, Deserialize},\n    constants::GENERATOR_INDEX__NOTE_NULLIFIER,\n    hash::{poseidon2_hash_with_separator, poseidon2_hash_bytes},\n    utils::field::field_from_bytes\n};\nuse dep::aztec::note::utils::compute_note_hash_for_nullify;\nuse dep::aztec::oracle::random::random;\nuse dep::aztec::macros::notes::note_custom_interface;\nuse dep::aztec::prelude::{NoteHeader, NullifiableNote, NoteInterface, PrivateContext};\nuse dep::aztec::keys::getters::{get_public_keys, get_nsk_app};\nuse dep::aztec::generators::{Ga1, Ga2, Ga3, Ga4, G_slot};\nuse dep::compressed_string::CompressedString;\nuse std::embedded_curve_ops::multi_scalar_mul;\nuse std::hash::from_field_unsafe;\n\n// serializes verifier_id and max_value into one field element\nglobal ENTITLEMENT_RECEIPT_NOTE_LENGTH: u32 = 4;\n\n#[note_custom_interface]\npub struct EntitlementReceiptNote {\n    // the user that is allowed to use this entitlement\n    recipient: AztecAddress,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    // the type of receipt verifier that this entitlement can be used for\n    verifier_id: u8,\n    // the maximum value that can be withdrawn from the escrow using this entitlement\n    max_value: U128,\n    // blinding factor for the note\n    randomness: Field,\n}\n\nimpl NoteInterface<ENTITLEMENT_RECEIPT_NOTE_LENGTH> for EntitlementReceiptNote {\n    \n    fn serialize_content(self) -> [Field; ENTITLEMENT_RECEIPT_NOTE_LENGTH] {\n        // serialize max_value and verifier_id together\n        let max_value_bytes: [u8; 16] = self.max_value.to_le_bytes();\n        let mut packed_bytes: [u8; 17] = [0; 17];\n        for i in 0..16 {\n            packed_bytes[i] = max_value_bytes[i];\n        };\n        packed_bytes[16] = self.verifier_id;\n        let packed_verifier_and_max_value = field_from_bytes(packed_bytes, true);\n        // return serialized content\n        [\n            self.recipient.to_field(),\n            self.npk_m_hash,\n            packed_verifier_and_max_value,\n            self.randomness\n        ]\n    }\n\n    fn deserialize_content(serialized_note: [Field; ENTITLEMENT_RECEIPT_NOTE_LENGTH]) -> EntitlementReceiptNote {\n        // unpack verifier_id and max_value\n        let packed_verifier_and_max_value = serialized_note[2];\n        let packed_bytes: [u8; 17] = packed_verifier_and_max_value.to_be_bytes();\n        let verifier_id = packed_bytes[16];\n        let mut max_value_bytes: [u8; 16] = [0; 16];\n        for i in 0..16 {\n            max_value_bytes[i] = packed_bytes[i];\n        }\n        let max_value = U128::from_le_bytes(max_value_bytes);\n        // return deserialized note\n        EntitlementReceiptNote {\n            recipient: AztecAddress::from_field(serialized_note[0]),\n            npk_m_hash: serialized_note[1],\n            verifier_id,\n            max_value,\n            randomness: serialized_note[3],\n            header: NoteHeader::empty()\n        }\n    }\n\n    fn to_be_bytes(self, storage_slot: Field) -> [u8; ENTITLEMENT_RECEIPT_NOTE_LENGTH * 32 + 64] {\n        let serialized_note = self.serialize_content();\n        let mut buffer: [u8; ENTITLEMENT_RECEIPT_NOTE_LENGTH * 32 + 64] = [0; ENTITLEMENT_RECEIPT_NOTE_LENGTH * 32 + 64];\n        let storage_slot_bytes: [u8; 32] = storage_slot.to_be_bytes();\n        let note_type_id_bytes: [u8; 32] = EntitlementReceiptNote::get_note_type_id().to_be_bytes();\n        for i in 0..32 {\n            buffer[i] = storage_slot_bytes[i];\n            buffer[32 + i] = note_type_id_bytes[i];\n        }\n        for i in 0..serialized_note.len() {\n            let bytes: [u8; 32] = serialized_note[i].to_be_bytes();\n            for j in 0..32 {\n                buffer[64 + i * 32 + j] = bytes[j];\n            }\n        }\n        buffer\n    }\n\n    fn get_note_type_id() -> Field { \n        comptime {\n            let bytes = \"EntitlementReceiptNote\".as_bytes();\n            let hash = poseidon2_hash_bytes(bytes);\n            let hash_bytes = hash.to_be_bytes::<4>();\n            field_from_bytes(hash_bytes, true)\n        }\n    }\n\n     fn get_header(self) -> NoteHeader {\n        self.header\n    }\n\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    fn compute_note_hash(self) -> Field {\n        let serialized = self.serialize_content();\n        std::embedded_curve_ops::multi_scalar_mul(\n            [Ga1, Ga2, Ga3, Ga4, G_slot],\n            [\n            from_field_unsafe(serialized[0]),\n            from_field_unsafe(serialized[1]),\n            from_field_unsafe(serialized[2]),\n            from_field_unsafe(serialized[3]),\n            from_field_unsafe(self.get_header().storage_slot)\n        ]\n        ).x\n    }\n}\n\nimpl NullifiableNote for EntitlementReceiptNote {\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n    // docs:end:nullifier\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify, secret],\n            GENERATOR_INDEX__NOTE_NULLIFIER\n        )\n    }\n}\n\nimpl Eq for EntitlementReceiptNote {\n    fn eq(self, other: Self) -> bool {\n        (self.recipient == other.recipient)\n            & (self.max_value == other.max_value)\n            & (self.randomness == other.randomness)\n            & (self.verifier_id == other.verifier_id)\n    }\n}\n\nimpl EntitlementReceiptNote {\n    /**\n     * Entitlement Receipt, shadows an entitlement send to a recepient\n     * Cannot be used to claim a reimbursement, but can be used to nullify the sent entitlement\n     *\n     * @param recipient - the address of the recipient of the entitlement (NOT THE OWNER OF THE NOTE)\n     * @param npk_m_hash - the nullifying public key hash of the escrow admin (NOT THE RECIPIENT OF THE ENTITLEMENT)\n     *                     note: this is a bit confusing but it is different because nullifcation of reads\n     * @param verifier_id - the type of verifier that the entitlement can be used for\n     * @param max_value - the maximum value that can be withdrawn from the escrow using the entitlement\n     * @param randomness - blinding factor for the note (inputted since must be same between the two notes)\n     */\n    fn new(\n        recipient: AztecAddress,\n        npk_m_hash: Field,\n        verifier_id: u8,\n        max_value: U128,\n        randomness: Field\n    ) -> Self {\n        Self {\n            recipient,\n            npk_m_hash,\n            max_value,\n            verifier_id,\n            randomness,\n            header: NoteHeader::empty()\n        }\n    }\n\n    /**\n     * Constrained computation of revocation nullifier\n     */\n    fn compute_revocation_nullifier(self) -> Field {\n        // get npk_m_hash for escrow owner from oracle\n        // incentivized to not lie on oracle call here since revocation would just fail\n        let recipient_npk_m_hash = get_public_keys(self.recipient).npk_m.hash();\n        // hash note noramlly, relying on \"randomness\" as blinding factor\n        let serialized = self.serialize_content();\n        poseidon2_hash_with_separator(\n            [\n                serialized[0],\n                recipient_npk_m_hash,\n                serialized[1],\n                serialized[2],\n                serialized[3]\n            ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n}"},"73":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/contracts/z_imburse_escrow/src/types/escrow_definition.nr","source":"use dep::aztec::protocol_types::{address::AztecAddress, traits::{Serialize, Deserialize}};\nuse dep::compressed_string::CompressedString;\n\nglobal ESCROW_DEFINITION_LENGTH: u32 = 6;\nglobal TITLE_LENGTH: u32 = 60;\nglobal TITLE_SERIALIZED_LENGTH: u32 = 2;\n\npub struct EscrowDefinition {\n    dkimRegistry: AztecAddress,\n    escrowRegistry: AztecAddress,\n    admin: AztecAddress,\n    usdc: AztecAddress,\n    title: CompressedString<TITLE_SERIALIZED_LENGTH, TITLE_LENGTH>\n}\n\nimpl Serialize<ESCROW_DEFINITION_LENGTH> for EscrowDefinition {\n    fn serialize(self: Self) -> [Field; ESCROW_DEFINITION_LENGTH] {\n        [\n            self.dkimRegistry.to_field(),\n            self.escrowRegistry.to_field(),\n            self.admin.to_field(),\n            self.usdc.to_field(),\n            self.title.value[0],\n            self.title.value[1]\n        ]\n    }\n}\n\nimpl Deserialize<ESCROW_DEFINITION_LENGTH> for EscrowDefinition {\n    fn deserialize(fields: [Field; ESCROW_DEFINITION_LENGTH]) -> Self {\n        EscrowDefinition {\n            dkimRegistry: AztecAddress::from_field(fields[0]),\n            escrowRegistry: AztecAddress::from_field(fields[1]),\n            admin: AztecAddress::from_field(fields[2]),\n            usdc: AztecAddress::from_field(fields[3]),\n            title: CompressedString { value: [fields[4], fields[5]] }\n        }\n    }\n}\n\nimpl EscrowDefinition {\n    /**\n     * Create a new definition for a Z-Imburse escrow contract with the uncompressed string\n     *\n     * @param dkimRegistry The address of the Z-Imburse dkim key hash registry\n     * @param escrowRegistry The address of the Z-Imburse contract registry\n     * @param admin The address of the admin of the contract\n     * @param usdc The address of the USDC token\n     * @param title The title of the contract as a string of max length 60\n     * @return The new definition\n     */\n    pub fn new(\n        dkimRegistry: AztecAddress,\n        escrowRegistry: AztecAddress,\n        admin: AztecAddress,\n        usdc: AztecAddress,\n        title: str<TITLE_LENGTH>\n    ) -> Self {\n        EscrowDefinition {\n            dkimRegistry,\n            escrowRegistry,\n            admin,\n            usdc,\n            title: CompressedString::from_string(title)\n        }\n    }\n\n    /**\n     * Return the bytes of the title to display as a string\n     *\n     * @return The title as a string\n     */\n    pub fn title_as_string(self) -> [u8; TITLE_LENGTH] {\n        self.title.to_bytes()\n    }\n}\n"},"74":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/contracts/z_imburse_escrow/src/types/recurring_entitlement_note.nr","source":"use dep::aztec::protocol_types::{\n    address::AztecAddress,\n    traits::{Serialize, Deserialize},\n    constants::{GENERATOR_INDEX__NOTE_NULLIFIER, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL},\n    hash::{poseidon2_hash_with_separator, poseidon2_hash_bytes},\n    utils::field::field_from_bytes,\n};\nuse dep::aztec::{note::utils::compute_note_hash_for_nullify, oracle::random::random};\nuse dep::compressed_string::CompressedString;\nuse dep::aztec::macros::notes::note_custom_interface;\nuse dep::aztec::prelude::{NoteHeader, NullifiableNote, NoteInterface, PrivateContext};\nuse dep::aztec::keys::getters::get_nsk_app;\nuse dep::aztec::generators::{Ga1, Ga2, Ga3, Ga4, Ga5, G_slot};\nuse std::embedded_curve_ops::multi_scalar_mul;\nuse std::hash::from_field_unsafe;\n\n// serializes verifier_id and max_value into one field element\nglobal RECURRING_ENTITLEMENT_NOTE_LENGTH: u32 = 5;\n\n#[note_custom_interface]\npub struct RecurringEntitlementNote {\n    // the user that is allowed to use this entitlement\n    owner: AztecAddress,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    // The nullifying public key hash of the note issuer who can revoke the entitlement\n    // constrain inclusion here since they could lie in oracle response\n    revocation_npk_m_hash: Field,\n    // the type of receipt verifier that this entitlement can be used for\n    verifier_id: u8,\n    // the maximum value that can be withdrawn from the escrow using this entitlement\n    max_value: U128,\n    // blinding factor for the note\n    randomness: Field,\n}\n\nimpl NoteInterface<RECURRING_ENTITLEMENT_NOTE_LENGTH> for RecurringEntitlementNote {\n    \n    fn serialize_content(self) -> [Field; RECURRING_ENTITLEMENT_NOTE_LENGTH] {\n        // serialize max_value and verifier_id together\n        let max_value_bytes: [u8; 16] = self.max_value.to_le_bytes();\n        let mut packed_bytes: [u8; 17] = [0; 17];\n        for i in 0..16 {\n            packed_bytes[i] = max_value_bytes[i];\n        };\n        packed_bytes[16] = self.verifier_id;\n        let packed_verifier_and_max_value = field_from_bytes(packed_bytes, true);\n        // return serialized content\n        [\n            self.owner.to_field(),\n            self.npk_m_hash,\n            self.revocation_npk_m_hash,\n            packed_verifier_and_max_value,\n            self.randomness\n        ]\n    }\n\n    fn deserialize_content(serialized_note: [Field; RECURRING_ENTITLEMENT_NOTE_LENGTH]) -> RecurringEntitlementNote {\n        // unpack verifier_id and max_value\n        let packed_verifier_and_max_value = serialized_note[3];\n        let packed_bytes: [u8; 17] = packed_verifier_and_max_value.to_be_bytes();\n        let verifier_id = packed_bytes[16];\n        let mut max_value_bytes: [u8; 16] = [0; 16];\n        for i in 0..16 {\n            max_value_bytes[i] = packed_bytes[i];\n        }\n        let max_value = U128::from_le_bytes(max_value_bytes);\n        // return deserialized note\n        RecurringEntitlementNote {\n            owner: AztecAddress::from_field(serialized_note[0]),\n            npk_m_hash: serialized_note[1],\n            revocation_npk_m_hash: serialized_note[2],\n            verifier_id,\n            max_value,\n            randomness: serialized_note[4],\n            header: NoteHeader::empty()\n        }\n    }\n\n    fn to_be_bytes(self, storage_slot: Field) -> [u8; RECURRING_ENTITLEMENT_NOTE_LENGTH * 32 + 64] {\n        let serialized_note = self.serialize_content();\n        let mut buffer: [u8; RECURRING_ENTITLEMENT_NOTE_LENGTH * 32 + 64] = [0; RECURRING_ENTITLEMENT_NOTE_LENGTH * 32 + 64];\n        let storage_slot_bytes: [u8; 32] = storage_slot.to_be_bytes();\n        let note_type_id_bytes: [u8; 32] = RecurringEntitlementNote::get_note_type_id().to_be_bytes();\n        for i in 0..32 {\n            buffer[i] = storage_slot_bytes[i];\n            buffer[32 + i] = note_type_id_bytes[i];\n        }\n        for i in 0..serialized_note.len() {\n            let bytes: [u8; 32] = serialized_note[i].to_be_bytes();\n            for j in 0..32 {\n                buffer[64 + i * 32 + j] = bytes[j];\n            }\n        }\n        buffer\n    }\n\n    fn get_note_type_id() -> Field { \n        comptime {\n            let bytes = \"RecurringEntitlementNote\".as_bytes();\n            let hash = poseidon2_hash_bytes(bytes);\n            let hash_bytes = hash.to_be_bytes::<4>();\n            field_from_bytes(hash_bytes, true)\n        }\n    }\n\n     fn get_header(self) -> NoteHeader {\n        self.header\n    }\n\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    fn compute_note_hash(self) -> Field {\n        let serialized = self.serialize_content();\n        std::embedded_curve_ops::multi_scalar_mul(\n            [Ga1, Ga2, Ga3, Ga4, Ga5, G_slot],\n            [\n            from_field_unsafe(serialized[0]),\n            from_field_unsafe(serialized[1]),\n            from_field_unsafe(serialized[2]),\n            from_field_unsafe(serialized[3]),\n            from_field_unsafe(serialized[4]),\n            from_field_unsafe(self.get_header().storage_slot)\n        ]\n        ).x\n    }\n}\n\nimpl NullifiableNote for RecurringEntitlementNote {\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n    // docs:end:nullifier\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [note_hash_for_nullify, secret],\n            GENERATOR_INDEX__NOTE_NULLIFIER\n        )\n    }\n}\n\nimpl Eq for RecurringEntitlementNote {\n    fn eq(self, other: Self) -> bool {\n        (self.owner == other.owner)\n            & (self.max_value == other.max_value)\n            & (self.npk_m_hash == other.npk_m_hash)\n            & (self.randomness == other.randomness)\n            & (self.verifier_id == other.verifier_id)\n            & (self.revocation_npk_m_hash == other.revocation_npk_m_hash)\n    }\n}\n\nimpl RecurringEntitlementNote {\n    fn new(\n        owner: AztecAddress,\n        npk_m_hash: Field,\n        revocation_npk_m_hash: Field,\n        verifier_id: u8,\n        max_value: U128,\n        randomness: Field\n    ) -> Self {\n        Self {\n            owner,\n            npk_m_hash,\n            revocation_npk_m_hash,\n            max_value,\n            verifier_id,\n            randomness,\n            header: NoteHeader::empty()\n        }\n    }\n\n    /**\n     * Compute the monthly recurring nullifier for this entitlement to be used recurringly\n     * @dev timestamp must be constrained to output from the verifier circuit\n     *      should compute the same unix timestamp according only to the month/ year\n     * @dev weaker guarantees around nullificaiton as note read nullification must come before\n     *\n     * @param timestamp - the timestamp of the month to nullify\n     */\n    fn compute_recurring_nullifier(\n        self,\n        timestamp: Field,\n    ) -> Field {\n        let serialized = self.serialize_content();\n        poseidon2_hash_with_separator(\n            [\n                serialized[0],\n                serialized[1],\n                serialized[2],\n                serialized[3],\n                serialized[4],\n                timestamp\n            ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    /**\n     * Compute the revocation nullifier that the escrow admin can emit to prevent further use of the entitlement\n     *\n     * @return the revocation nullifier\n     */\n    fn compute_revocation_nullifier(self) -> Field {\n        let serialized = self.serialize_content();\n        poseidon2_hash_with_separator(\n            serialized,\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n}"},"77":{"path":"/home/jpag/Workground/aztec/zimburse/z-imburse/contracts/address_note/src/address_note.nr","source":"use dep::aztec::{\n    protocol_types::{address::AztecAddress, constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    note::{note_header::NoteHeader, note_interface::NullifiableNote, utils::compute_note_hash_for_nullify},\n    oracle::random::random, keys::getters::get_nsk_app, context::PrivateContext,\n    macros::notes::note\n};\n\n// docs:start:address_note_def\n// docs:start:address_note_struct\n// Stores an address\n#[note]\npub struct AddressNote {\n    address: AztecAddress,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    randomness: Field,\n}\n// docs:end:address_note_struct\n\nimpl NullifiableNote for AddressNote {\n\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n}\n\nimpl Eq for AddressNote {\n    fn eq(self, other: Self) -> bool {\n        (self.address == other.address) & (self.npk_m_hash == other.npk_m_hash)\n    }\n}\n\nimpl AddressNote {\n    pub fn new(address: AztecAddress, npk_m_hash: Field) -> Self {\n        let randomness = unsafe { random() };\n        AddressNote { address, npk_m_hash, randomness, header: NoteHeader::empty() }\n    }\n    // docs:end:address_note_def\n}\n"},"92":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/note/utils.nr","source":"use crate::{\n    context::PrivateContext,\n    note::{note_header::NoteHeader, note_interface::{NullifiableNote, NoteInterface}}\n};\n\nuse dep::protocol_types::{\n    hash::{\n    compute_unique_note_hash, compute_siloed_note_hash as compute_siloed_note_hash,\n    compute_siloed_nullifier as compute_siloed_nullifier_from_preimage\n},\n    utils::arr_copy_slice\n};\n\npub fn compute_siloed_nullifier<Note, let N: u32>(\n    note_with_header: Note,\n    context: &mut PrivateContext\n) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let header = note_with_header.get_header();\n    let note_hash_for_nullify = compute_note_hash_for_nullify(note_with_header);\n    let inner_nullifier = note_with_header.compute_nullifier(context, note_hash_for_nullify);\n\n    compute_siloed_nullifier_from_preimage(header.contract_address, inner_nullifier)\n}\n\n// TODO(#7775): make this not impossible to understand\npub fn compute_note_hash_for_read_request<Note, let N: u32>(note: Note) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash = note.compute_note_hash();\n    let nonce = note.get_header().nonce;\n    let counter = note.get_header().note_hash_counter;\n\n    if counter != 0 {\n        note_hash\n    } else {\n        compute_unique_note_hash(nonce, note_hash)\n    }\n}\n\n// TODO(#7775): make this not impossible to understand\npub fn compute_note_hash_for_nullify_internal<Note, let N: u32>(\n    note: Note,\n    note_hash_for_read_request: Field\n) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let header = note.get_header();\n\n    if header.note_hash_counter != 0 {\n        if header.nonce == 0 {\n            // Case 1: Transient note\n            note_hash_for_read_request\n        } else {\n            // Case 2: Non-revertible note, nullified by a revertible nullifier\n            let unique_note_hash = compute_unique_note_hash(header.nonce, note_hash_for_read_request);\n            compute_siloed_note_hash(header.contract_address, unique_note_hash)\n        }\n    } else {\n        // Case 3: Note from a previous transaction\n        // note_hash_for_read_request is already the unique_note_hash in this case\n        compute_siloed_note_hash(header.contract_address, note_hash_for_read_request)\n    }\n}\n\n// TODO(#7775): nuke this commented out code - kept it around as it contains comments which might be helpful when tackling #7775\n// pub fn compute_note_hash_for_nullify<Note, let N: u32, let M: u32>(note: Note) -> Field where Note: NoteInterface<N> {\n//     let header = note.get_header();\n//     // There are 3 cases for reading a note intended for consumption:\n//     // 1. The note was inserted in this transaction, is revertible, or is not nullified by a revertible nullifier in\n//     //    the same transaction: (note_hash_counter != 0) & (nonce == 0)\n//     // 2. The note was inserted in this transaction, is non-revertible, and is nullified by a revertible nullifier in\n//     //    the same transaction: (note_hash_counter != 0) & (nonce != 0)\n//     // 3. The note was inserted in a previous transaction: (note_hash_counter == 0) & (nonce != 0)\n\n//     let note_hash = note.compute_note_hiding_point().x;\n\n//     if header.nonce == 0 {\n//         // Case 1.\n//         // If a note is transient, we just read the note_hash (kernel will hash it with nonce and silo by contract address).\n//         note_hash\n//     } else {\n//         // Case 2: If a note is non-revertible, and is nullified by a revertible nullifier, we cannot squash them in the\n//         // private reset circuit. Because if the tx reverts, we will have to keep the note hash and throw away the\n//         // nullifier.\n//         // And if the tx does not revert, both will be emitted. In which case, the nullifier must be created in the app\n//         // from the siloed note hash.\n//         // The kernel circuit will check that a nullifier with non-zero note_nonce is linked to a note hash, whose\n//         // siloed note hash matches the note hash specified in the nullifier.\n\n//         // Case 3: If a note is not from the current transaction, that means we are reading a settled note (from\n//         // tree) created in a previous TX. So we need the siloed_note_hash which has already been hashed with\n//         // nonce and then contract address. This hash will match the existing leaf in the note hash\n//         // tree, so the kernel can just perform a membership check directly on this hash/leaf.\n//         let unique_note_hash = compute_unique_note_hash(header.nonce, note_hash);\n//         compute_siloed_note_hash(header.contract_address, unique_note_hash)\n//         // IMPORTANT NOTE ON REDUNDANT SILOING BY CONTRACT ADDRESS: The note hash computed above is\n//         // \"siloed\" by contract address. When a note hash is computed solely for the purpose of\n//         // nullification, it is not strictly necessary to silo the note hash before computing\n//         // its nullifier. In other words, it is NOT NECESSARY for protocol security that a nullifier\n//         // be computed from a siloed note hash. After all, persistable note hashes and nullifiers are\n//         // siloed by the kernel circuit. That being said, the siloed note hash computed above CAN be\n//         // used for nullifier computation, and this achieves the (arguably unnecessary) property that\n//         // nullifiers are computed from a note hash's fully-computed note hash tree leaf.\n//     }\n// }\n\npub fn compute_note_hash_for_nullify<Note, let N: u32>(note: Note) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n    compute_note_hash_for_nullify_internal(note, note_hash_for_read_request)\n}\n\nunconstrained pub fn compute_note_hash_and_optionally_a_nullifier<T, let N: u32, let S: u32>(\n    deserialize_content: fn([Field; N]) -> T,\n    note_header: NoteHeader,\n    compute_nullifier: bool,\n    serialized_note: [Field; S]\n) -> [Field; 4] where T: NoteInterface<N> + NullifiableNote {\n    let mut note = deserialize_content(arr_copy_slice(serialized_note, [0; N], 0));\n    note.set_header(note_header);\n\n    let note_hash = note.compute_note_hash();\n    let unique_note_hash = compute_unique_note_hash(note_header.nonce, note_hash);\n    let siloed_note_hash = compute_siloed_note_hash(note_header.contract_address, unique_note_hash);\n\n    let inner_nullifier = if compute_nullifier {\n        note.compute_nullifier_without_context()\n    } else {\n        0\n    };\n    // docs:start:compute_note_hash_and_optionally_a_nullifier_returns\n    [note_hash, unique_note_hash, siloed_note_hash, inner_nullifier]\n    // docs:end:compute_note_hash_and_optionally_a_nullifier_returns\n}\n"},"94":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/note/note_emission.nr","source":"/**\n * A note emission struct containing the information required for emitting a note.\n * The exact `emit` logic is passed in by the application code\n */\npub struct NoteEmission<Note> {\n    note: Note\n}\n\nimpl<Note> NoteEmission<Note> {\n    pub fn new(note: Note) -> Self {\n        Self { note }\n    }\n\n    pub fn emit<Env>(self, _emit: fn[Env](Self) -> ()) {\n        _emit(self);\n    }\n\n    pub fn discard(_self: Self) {}\n}\n\n/**\n * A struct wrapping note emission in `Option<T>`.\n * This is the struct provided to application codes, which can be used to emit\n * only when a note was actually inserted.\n * It is fairly common to have cases where a function conditionally inserts,\n * and this allows us to keep the same API for emission in both cases (e.g. inserting\n * a change note in a token's transfer function only when there is \"change\" left).\n */\npub struct OuterNoteEmission<Note> {\n    emission: Option<NoteEmission<Note>>,\n}\n\nimpl<Note> OuterNoteEmission<Note> {\n    pub fn new(emission: Option<NoteEmission<Note>>) -> Self {\n        Self { emission }\n    }\n\n    pub fn emit<Env>(self, _emit: fn[Env](NoteEmission<Note>) -> ()) {\n        if self.emission.is_some() {\n            _emit(self.emission.unwrap());\n        }\n    }\n\n    pub fn discard(_self: Self) {}\n}\n"},"95":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/note/lifecycle.nr","source":"use crate::context::{PrivateContext, PublicContext};\nuse crate::note::{\n    note_header::NoteHeader, note_interface::{NoteInterface, NullifiableNote},\n    utils::{compute_note_hash_for_read_request, compute_note_hash_for_nullify_internal},\n    note_emission::NoteEmission\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\n\npub fn create_note<Note, let N: u32>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note\n) -> NoteEmission<Note> where Note: NoteInterface<N> + NullifiableNote {\n    let contract_address = (*context).this_address();\n    let note_hash_counter = context.side_effect_counter;\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, note_hash_counter };\n    note.set_header(header);\n    let note_hash = note.compute_note_hash();\n\n    let serialized_note = Note::serialize_content(*note);\n    notify_created_note(\n        storage_slot,\n        Note::get_note_type_id(),\n        serialized_note,\n        note_hash,\n        note_hash_counter\n    );\n\n    context.push_note_hash(note_hash);\n\n    NoteEmission::new(*note)\n}\n\npub fn create_note_hash_from_public<Note, let N: u32>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note\n) where Note: NoteInterface<N> + NullifiableNote {\n    let contract_address = (*context).this_address();\n    // Public note hashes are transient, but have no side effect counters, so we just need note_hash_counter != 0\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, note_hash_counter: 1 };\n    note.set_header(header);\n    let note_hash = note.compute_note_hash();\n\n    context.push_note_hash(note_hash);\n}\n\n// Note: This function is currently totally unused.\npub fn destroy_note<Note, let N: u32>(\n    context: &mut PrivateContext,\n    note: Note\n) where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n\n    destroy_note_unsafe(context, note, note_hash_for_read_request)\n}\n\npub fn destroy_note_unsafe<Note, let N: u32>(\n    context: &mut PrivateContext,\n    note: Note,\n    note_hash_for_read_request: Field\n) where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash_for_nullify = compute_note_hash_for_nullify_internal(note, note_hash_for_read_request);\n    let nullifier = note.compute_nullifier(context, note_hash_for_nullify);\n\n    let note_hash_counter = note.get_header().note_hash_counter;\n    let notification_note_hash = if (note_hash_counter == 0) {\n        // Counter is zero, so we're nullifying a settled note and we don't populate the note_hash with real value.\n        0\n    } else {\n        // A non-zero note hash counter implies that we're nullifying a pending note (i.e. one that has not yet been\n        // persisted in the trees and is instead in the pending new note hashes array). In such a case we populate its\n        // hash with real value to inform the kernel which note we're nullifyng so that it can either squash both\n        // the note and the nullifier if it's an inner note hash, or check that the it matches a pending note if it's\n        // a siloed note hash.\n        note_hash_for_nullify\n    };\n\n    let nullifier_counter = context.side_effect_counter;\n    notify_nullified_note(nullifier, notification_note_hash, nullifier_counter);\n\n    context.push_nullifier_for_note_hash(nullifier, notification_note_hash)\n}\n"},"98":{"path":"/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/note/note_getter/mod.nr","source":"use dep::protocol_types::{constants::{MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, GET_NOTES_ORACLE_RETURN_LENGTH}};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    constants::{GET_NOTE_ORACLE_RETURN_LENGTH, VIEW_NOTE_ORACLE_RETURN_LENGTH},\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder, NoteStatus, PropertySelector},\n    note_interface::{NoteInterface, NullifiableNote}, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_request\n};\nuse crate::oracle;\nuse crate::utils::comparison::compare;\n\npub use crate::note::constants::MAX_NOTES_PER_PAGE;\n\nmod test;\n\nfn extract_property_value_from_selector<let N: u32>(\n    serialized_note: [Field; N],\n    selector: PropertySelector\n) -> Field {\n    // Selectors use PropertySelectors in order to locate note properties inside the serialized note.\n    // This allows easier packing and custom (de)serialization schemas. A note property is located\n    // inside the serialized note using the index inside the array, a byte offset and a length.\n    let value: [u8; 32] = serialized_note[selector.index].to_be_bytes();\n    let offset = selector.offset;\n    let length = selector.length;\n    let mut value_field = 0 as Field;\n    let mut acc: Field = 1;\n    for i in 0..32 {\n        if i < length {\n            value_field += value[31 + offset - i] as Field * acc;\n            acc = acc * 256;\n        }\n    }\n    value_field\n}\n\nfn check_note_header<Note, let N: u32>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note: Note\n) where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let contract_address = context.this_address();\n    assert(header.contract_address.eq(contract_address), \"Mismatch note header contract address.\");\n    assert(header.storage_slot == storage_slot, \"Mismatch note header storage slot.\");\n}\n\nfn check_note_fields<let N: u32>(\n    serialized_note: [Field; N],\n    selects: BoundedVec<Option<Select>, N>\n) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        let value_field = extract_property_value_from_selector(serialized_note, select.property_selector);\n\n        assert(\n            compare(value_field, select.comparator, select.value.to_field()), \"Mismatch return note field.\"\n        );\n    }\n}\n\nfn check_notes_order<let N: u32>(\n    fields_0: [Field; N],\n    fields_1: [Field; N],\n    sorts: BoundedVec<Option<Sort>, N>\n) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let field_0 = extract_property_value_from_selector(fields_0, sort.property_selector);\n        let field_1 = extract_property_value_from_selector(fields_1, sort.property_selector);\n        let eq = field_0 == field_1;\n        let lt = field_0.lt(field_1);\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, let N: u32>(\n    context: &mut PrivateContext,\n    storage_slot: Field\n) -> (Note, Field) where Note: NoteInterface<N> + NullifiableNote {\n    let note = unsafe {\n        get_note_internal(storage_slot)\n    };\n\n    // Constraining that we got a valid note from the oracle is fairly straightforward: all we need to do is check that\n    // the metadata is correct, and that the note exists.\n    check_note_header(*context, storage_slot, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n    context.push_note_hash_read_request(note_hash_for_read_request);\n\n    (note, note_hash_for_read_request)\n}\n\npub fn get_notes<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n) -> (BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>, BoundedVec<Field, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>) where Note: NoteInterface<N> + NullifiableNote + Eq {\n    let opt_notes = unsafe {\n        get_notes_internal(storage_slot, options)\n    };\n\n    // We apply the constraints in a separate function instead of inlining them here to make it easier to test that\n    // these checks correctly reject bad notes.\n    constrain_get_notes_internal(context, storage_slot, opt_notes, options)\n}\n\nunconstrained fn apply_preprocessor<Note, PREPROCESSOR_ARGS>(\n    notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    preprocessor: fn([Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL], PREPROCESSOR_ARGS) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    preprocessor_args: PREPROCESSOR_ARGS\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] {\n    preprocessor(notes, preprocessor_args)\n}\n\nfn constrain_get_notes_internal<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    opt_notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n) -> (BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>, BoundedVec<Field, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>) where Note: NoteInterface<N> + NullifiableNote + Eq {\n    // The filter is applied first to avoid pushing note read requests for notes we're not interested in. Note that\n    // while the filter function can technically mutate the contents of the notes (as opposed to simply removing some),\n    // the private kernel will later validate that these note actually exist, so transformations would cause for that\n    // check to fail.\n    let filter_fn = options.filter;\n    let filter_args = options.filter_args;\n    let filtered_notes = filter_fn(opt_notes, filter_args);\n\n    let notes = crate::utils::collapse_array(filtered_notes);\n    let mut note_hashes: BoundedVec<Field, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> = BoundedVec::new();\n\n    // We have now collapsed the sparse array of Options into a BoundedVec. This is a more ergonomic type and also\n    // results in reduced gate counts when setting a limit value, since we guarantee that the limit is an upper bound\n    // for the runtime length, and can therefore have fewer loop iterations.\n    assert(notes.len() <= options.limit, \"Got more notes than limit.\");\n\n    let mut prev_fields = [0; N];\n    for i in 0..options.limit {\n        if i < notes.len() {\n            let note = notes.get_unchecked(i);\n            let fields = note.serialize_content();\n            check_note_header(*context, storage_slot, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_note_hash_read_request(note_hash_for_read_request);\n            note_hashes.push(note_hash_for_read_request);\n        };\n    }\n\n    (notes, note_hashes)\n}\n\nunconstrained fn get_note_internal<Note, let N: u32>(storage_slot: Field) -> Note where Note: NoteInterface<N> {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        0,\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        NoteStatus.ACTIVE,\n        placeholder_note,\n        placeholder_fields,\n        placeholder_note_length\n    )[0].expect(f\"Failed to get a note\") // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, let N: u32, PREPROCESSOR_ARGS, FILTER_ARGS>(\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, PREPROCESSOR_ARGS, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    // This function simply performs some transformations from NoteGetterOptions into the types required by the oracle.\n\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    apply_preprocessor(opt_notes, options.preprocessor, options.preprocessor_args)\n}\n\nunconstrained pub fn view_notes<Note, let N: u32>(\n    storage_slot: Field,\n    options: NoteViewerOptions<Note, N>\n) -> BoundedVec<Note, MAX_NOTES_PER_PAGE> where Note: NoteInterface<N> {\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n\n    let notes_array = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    let mut notes = BoundedVec::new();\n    for i in 0..notes_array.len() {\n        if notes_array[i].is_some() {\n            notes.push(notes_array[i].unwrap_unchecked());\n        }\n    }\n\n    notes\n}\n\nunconstrained fn flatten_options<let N: u32>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>\n) -> (u8, [u8; N], [u8; N], [u8; N], [Field; N], [u8; N], [u8; N], [u8; N], [u8; N], [u8; N]) {\n    let mut num_selects = 0;\n    let mut select_by_indexes = [0; N];\n    let mut select_by_offsets = [0; N];\n    let mut select_by_lengths = [0; N];\n    let mut select_values = [0; N];\n    let mut select_comparators = [0; N];\n\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by_indexes[num_selects] = select.unwrap_unchecked().property_selector.index;\n            select_by_offsets[num_selects] = select.unwrap_unchecked().property_selector.offset;\n            select_by_lengths[num_selects] = select.unwrap_unchecked().property_selector.length;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            select_comparators[num_selects] = select.unwrap_unchecked().comparator;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by_indexes = [0; N];\n    let mut sort_by_offsets = [0; N];\n    let mut sort_by_lengths = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by_indexes[i] = sort.unwrap_unchecked().property_selector.index;\n            sort_by_offsets[i] = sort.unwrap_unchecked().property_selector.offset;\n            sort_by_lengths[i] = sort.unwrap_unchecked().property_selector.length;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (\n        num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order\n    )\n}\n"}}}